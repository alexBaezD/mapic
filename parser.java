
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Aug 03 19:52:58 CDT 2015
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Stack;

/** CUP v0.10k generated parser.
  * @version Mon Aug 03 19:52:58 CDT 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u012b\000\002\003\005\000\002\002\004\000\002\004" +
    "\004\000\002\004\010\000\002\004\005\000\002\004\011" +
    "\000\002\004\011\000\002\004\006\000\002\004\012\000" +
    "\002\004\005\000\002\006\006\000\002\006\007\000\002" +
    "\013\006\000\002\013\007\000\002\016\003\000\002\016" +
    "\003\000\002\007\006\000\002\007\005\000\002\005\006" +
    "\000\002\005\005\000\002\010\012\000\002\010\011\000" +
    "\002\010\012\000\002\010\012\000\002\010\013\000\002" +
    "\031\005\000\002\031\007\000\002\012\003\000\002\012" +
    "\004\000\002\017\003\000\002\017\006\000\002\017\006" +
    "\000\002\017\006\000\002\017\006\000\002\017\006\000" +
    "\002\017\006\000\002\017\007\000\002\017\007\000\002" +
    "\017\007\000\002\017\010\000\002\017\010\000\002\017" +
    "\006\000\002\017\006\000\002\017\004\000\002\017\006" +
    "\000\002\017\011\000\002\017\011\000\002\036\002\000" +
    "\002\017\014\000\002\037\002\000\002\017\014\000\002" +
    "\017\012\000\002\017\012\000\002\017\012\000\002\017" +
    "\012\000\002\017\006\000\002\017\006\000\002\017\010" +
    "\000\002\017\010\000\002\017\010\000\002\017\011\000" +
    "\002\017\006\000\002\017\010\000\002\017\010\000\002" +
    "\021\003\000\002\021\004\000\002\020\007\000\002\020" +
    "\011\000\002\034\005\000\002\034\007\000\002\034\010" +
    "\000\002\034\011\000\002\034\007\000\002\034\007\000" +
    "\002\034\010\000\002\034\010\000\002\035\004\000\002" +
    "\035\003\000\002\035\004\000\002\035\005\000\002\011" +
    "\006\000\002\011\005\000\002\011\007\000\002\011\006" +
    "\000\002\011\005\000\002\011\006\000\002\032\003\000" +
    "\002\032\003\000\002\032\003\000\002\033\004\000\002" +
    "\033\005\000\002\022\003\000\002\022\003\000\002\022" +
    "\004\000\002\022\004\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\024\005\000\002\024\006\000\002\026\004\000\002" +
    "\026\005\000\002\025\003\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\003\000\002\025\003" +
    "\000\002\025\003\000\002\025\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\030\003\000\002\030\003\000\002\030\003\000\002\030" +
    "\003\000\002\030\003\000\002\030\003\000\002\030\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01f2\000\004\023\005\001\002\000\004\002\u01f4\001" +
    "\002\000\010\022\007\230\015\264\011\001\002\000\006" +
    "\026\u01ee\027\u01b9\001\002\000\004\246\u01df\001\002\000" +
    "\004\021\u01da\001\002\000\004\271\u01d0\001\002\000\006" +
    "\022\007\230\u01ab\001\002\000\010\022\uffc1\230\uffc1\264" +
    "\011\001\002\000\006\022\007\230\015\001\002\000\006" +
    "\231\017\271\016\001\002\000\004\241\u0195\001\002\000" +
    "\004\271\020\001\002\000\004\241\021\001\002\000\004" +
    "\242\022\001\002\000\004\246\023\001\002\000\u0112\016" +
    "\144\017\166\020\071\030\201\031\200\032\175\033\174" +
    "\034\171\035\031\036\030\037\026\040\025\041\024\042" +
    "\167\043\207\044\163\045\162\046\161\047\156\050\155" +
    "\051\153\052\152\053\146\054\124\055\123\056\122\057" +
    "\121\060\120\061\117\062\115\063\114\064\074\065\073" +
    "\066\072\067\070\070\067\071\066\072\065\073\063\074" +
    "\050\075\047\076\046\077\044\100\042\101\041\102\036" +
    "\103\035\104\225\105\223\106\220\107\217\110\204\111" +
    "\203\112\202\113\177\114\176\115\173\116\172\117\170" +
    "\120\147\121\145\122\142\123\141\124\140\125\137\126" +
    "\134\127\133\130\113\131\112\132\111\133\110\134\107" +
    "\135\106\136\105\137\104\140\064\141\062\142\061\143" +
    "\057\144\056\145\055\146\054\147\053\150\034\151\033" +
    "\152\032\153\027\154\231\155\230\156\226\157\224\160" +
    "\222\161\221\162\216\163\215\164\132\165\131\166\130" +
    "\167\127\170\126\171\125\173\233\174\077\175\214\176" +
    "\116\177\234\200\037\201\040\202\043\203\052\204\143" +
    "\205\210\206\205\207\157\210\151\211\232\212\154\213" +
    "\150\214\227\215\075\216\076\217\100\220\101\221\102" +
    "\222\103\223\060\224\211\225\135\226\212\227\213\236" +
    "\160\264\011\267\164\271\206\273\051\275\136\001\002" +
    "\000\006\252\uff7d\254\uff7d\001\002\000\006\252\uff7e\254" +
    "\uff7e\001\002\000\006\252\uff7f\254\uff7f\001\002\000\006" +
    "\252\uff32\254\uff32\001\002\000\006\252\uff80\254\uff80\001" +
    "\002\000\006\252\uff81\254\uff81\001\002\000\006\252\uff33" +
    "\254\uff33\001\002\000\006\252\uff34\254\uff34\001\002\000" +
    "\006\252\uff35\254\uff35\001\002\000\006\252\uff5a\254\uff5a" +
    "\001\002\000\006\252\uff5b\254\uff5b\001\002\000\006\252" +
    "\uff16\254\uff16\001\002\000\006\252\uff15\254\uff15\001\002" +
    "\000\006\252\uff5c\254\uff5c\001\002\000\006\252\uff5d\254" +
    "\uff5d\001\002\000\006\252\uff14\254\uff14\001\002\000\006" +
    "\252\uff5e\254\uff5e\001\002\000\u011c\016\uffe4\017\uffe4\020" +
    "\uffe4\030\uffe4\031\uffe4\032\uffe4\033\uffe4\034\uffe4\035\uffe4" +
    "\036\uffe4\037\uffe4\040\uffe4\041\uffe4\042\uffe4\043\uffe4\044" +
    "\uffe4\045\uffe4\046\uffe4\047\uffe4\050\uffe4\051\uffe4\052\uffe4" +
    "\053\uffe4\054\uffe4\055\uffe4\056\uffe4\057\uffe4\060\uffe4\061" +
    "\uffe4\062\uffe4\063\uffe4\064\uffe4\065\uffe4\066\uffe4\067\uffe4" +
    "\070\uffe4\071\uffe4\072\uffe4\073\uffe4\074\uffe4\075\uffe4\076" +
    "\uffe4\077\uffe4\100\uffe4\101\uffe4\102\uffe4\103\uffe4\104\uffe4" +
    "\105\uffe4\106\uffe4\107\uffe4\110\uffe4\111\uffe4\112\uffe4\113" +
    "\uffe4\114\uffe4\115\uffe4\116\uffe4\117\uffe4\120\uffe4\121\uffe4" +
    "\122\uffe4\123\uffe4\124\uffe4\125\uffe4\126\uffe4\127\uffe4\130" +
    "\uffe4\131\uffe4\132\uffe4\133\uffe4\134\uffe4\135\uffe4\136\uffe4" +
    "\137\uffe4\140\uffe4\141\uffe4\142\uffe4\143\uffe4\144\uffe4\145" +
    "\uffe4\146\uffe4\147\uffe4\150\uffe4\151\uffe4\152\uffe4\153\uffe4" +
    "\154\uffe4\155\uffe4\156\uffe4\157\uffe4\160\uffe4\161\uffe4\162" +
    "\uffe4\163\uffe4\164\uffe4\165\uffe4\166\uffe4\167\uffe4\170\uffe4" +
    "\171\uffe4\173\uffe4\174\uffe4\175\uffe4\176\uffe4\177\uffe4\200" +
    "\uffe4\201\uffe4\202\uffe4\203\uffe4\204\uffe4\205\uffe4\206\uffe4" +
    "\207\uffe4\210\uffe4\211\uffe4\212\uffe4\213\uffe4\214\uffe4\215" +
    "\uffe4\216\uffe4\217\uffe4\220\uffe4\221\uffe4\222\uffe4\223\uffe4" +
    "\224\uffe4\225\uffe4\226\uffe4\227\uffe4\233\uffe4\234\uffe4\236" +
    "\uffe4\240\uffe4\247\uffe4\264\uffe4\267\uffe4\271\uffe4\273\uffe4" +
    "\274\uffe4\275\uffe4\001\002\000\006\252\uff5f\254\uff5f\001" +
    "\002\000\006\252\uff60\254\uff60\001\002\000\006\252\uff61" +
    "\254\uff61\001\002\000\004\241\u0182\001\002\000\006\252" +
    "\uff13\254\uff13\001\002\000\006\252\uff36\254\uff36\001\002" +
    "\000\006\252\uff37\254\uff37\001\002\000\006\252\uff38\254" +
    "\uff38\001\002\000\006\252\uff39\254\uff39\001\002\000\006" +
    "\252\uff3a\254\uff3a\001\002\000\006\252\uff0c\254\uff0c\001" +
    "\002\000\006\252\uff3b\254\uff3b\001\002\000\006\252\uff3c" +
    "\254\uff3c\001\002\000\006\252\uff62\254\uff62\001\002\000" +
    "\006\252\uff3d\254\uff3d\001\002\000\006\252\uff63\254\uff63" +
    "\001\002\000\006\252\uff64\254\uff64\001\002\000\006\252" +
    "\uff65\254\uff65\001\002\000\006\252\uff66\254\uff66\001\002" +
    "\000\004\252\u017f\001\002\000\006\252\uff67\254\uff67\001" +
    "\002\000\006\252\uff68\254\uff68\001\002\000\006\252\uff69" +
    "\254\uff69\001\002\000\006\252\uff12\254\uff12\001\002\000" +
    "\006\252\uff11\254\uff11\001\002\000\006\252\uff1a\254\uff1a" +
    "\001\002\000\006\252\uff10\254\uff10\001\002\000\006\252" +
    "\uff0f\254\uff0f\001\002\000\006\252\uff0e\254\uff0e\001\002" +
    "\000\006\252\uff0d\254\uff0d\001\002\000\006\252\uff3e\254" +
    "\uff3e\001\002\000\006\252\uff3f\254\uff3f\001\002\000\006" +
    "\252\uff40\254\uff40\001\002\000\006\252\uff41\254\uff41\001" +
    "\002\000\006\252\uff42\254\uff42\001\002\000\006\252\uff43" +
    "\254\uff43\001\002\000\006\252\uff44\254\uff44\001\002\000" +
    "\006\252\uff45\254\uff45\001\002\000\006\252\uff6a\254\uff6a" +
    "\001\002\000\006\252\uff6b\254\uff6b\001\002\000\006\252" +
    "\uff18\254\uff18\001\002\000\006\252\uff6c\254\uff6c\001\002" +
    "\000\006\252\uff6d\254\uff6d\001\002\000\006\252\uff6e\254" +
    "\uff6e\001\002\000\006\252\uff6f\254\uff6f\001\002\000\006" +
    "\252\uff70\254\uff70\001\002\000\006\252\uff71\254\uff71\001" +
    "\002\000\006\252\uff24\254\uff24\001\002\000\006\252\uff25" +
    "\254\uff25\001\002\000\006\252\uff26\254\uff26\001\002\000" +
    "\006\252\uff27\254\uff27\001\002\000\006\252\uff28\254\uff28" +
    "\001\002\000\006\252\uff29\254\uff29\001\002\000\006\252" +
    "\uff46\254\uff46\001\002\000\006\252\uff47\254\uff47\001\002" +
    "\000\006\252\uff0a\254\uff0a\001\002\000\004\241\u015c\001" +
    "\002\000\006\252\uff48\254\uff48\001\002\000\006\252\uff49" +
    "\254\uff49\001\002\000\006\252\uff4a\254\uff4a\001\002\000" +
    "\006\252\uff4b\254\uff4b\001\002\000\006\252\uff7a\254\uff7a" +
    "\001\002\000\004\241\u0158\001\002\000\006\252\uff4c\254" +
    "\uff4c\001\002\000\006\252\uff72\254\uff72\001\002\000\006" +
    "\252\uff4d\254\uff4d\001\002\000\006\252\uff1d\254\uff1d\001" +
    "\002\000\006\252\uff20\254\uff20\001\002\000\006\252\uff73" +
    "\254\uff73\001\002\000\006\252\uff74\254\uff74\001\002\000" +
    "\006\252\uff1e\254\uff1e\001\002\000\006\252\uff75\254\uff75" +
    "\001\002\000\006\252\uff76\254\uff76\001\002\000\006\252" +
    "\uff21\254\uff21\001\002\000\004\241\u013d\001\002\000\006" +
    "\252\uff77\254\uff77\001\002\000\006\252\uff78\254\uff78\001" +
    "\002\000\006\252\uff79\254\uff79\001\002\000\004\251\u013c" +
    "\001\002\000\u011c\016\144\017\166\020\071\030\201\031" +
    "\200\032\175\033\174\034\171\035\031\036\030\037\026" +
    "\040\025\041\024\042\167\043\207\044\163\045\162\046" +
    "\161\047\156\050\155\051\153\052\152\053\146\054\124" +
    "\055\123\056\122\057\121\060\120\061\117\062\115\063" +
    "\114\064\074\065\073\066\072\067\070\070\067\071\066" +
    "\072\065\073\063\074\050\075\047\076\046\077\044\100" +
    "\042\101\041\102\036\103\035\104\225\105\223\106\220" +
    "\107\217\110\204\111\203\112\202\113\177\114\176\115" +
    "\173\116\172\117\170\120\147\121\145\122\142\123\141" +
    "\124\140\125\137\126\134\127\133\130\113\131\112\132" +
    "\111\133\110\134\107\135\106\136\105\137\104\140\064" +
    "\141\062\142\061\143\057\144\056\145\055\146\054\147" +
    "\053\150\034\151\033\152\032\153\027\154\231\155\230" +
    "\156\226\157\224\160\222\161\221\162\216\163\215\164" +
    "\132\165\131\166\130\167\127\170\126\171\125\173\233" +
    "\174\077\175\214\176\116\177\234\200\037\201\040\202" +
    "\043\203\052\204\143\205\210\206\205\207\157\210\151" +
    "\211\232\212\154\213\150\214\227\215\075\216\076\217" +
    "\100\220\101\221\102\222\103\223\060\224\211\225\135" +
    "\226\212\227\213\233\uffe6\234\uffe6\236\160\240\uffe6\247" +
    "\uffe6\264\011\267\164\271\206\273\051\274\uffe6\275\136" +
    "\001\002\000\004\246\u0137\001\002\000\006\252\uff7c\254" +
    "\uff7c\001\002\000\006\252\uff4e\254\uff4e\001\002\000\006" +
    "\252\uff82\254\uff82\001\002\000\006\252\uff4f\254\uff4f\001" +
    "\002\000\006\252\uff50\254\uff50\001\002\000\006\252\uff83" +
    "\254\uff83\001\002\000\006\252\uff84\254\uff84\001\002\000" +
    "\006\252\uff51\254\uff51\001\002\000\006\252\uff52\254\uff52" +
    "\001\002\000\006\252\uff85\254\uff85\001\002\000\006\252" +
    "\uff86\254\uff86\001\002\000\006\252\uff53\254\uff53\001\002" +
    "\000\006\252\uff54\254\uff54\001\002\000\006\252\uff55\254" +
    "\uff55\001\002\000\006\252\uff22\254\uff22\001\002\000\016" +
    "\241\346\243\341\244\345\252\342\265\343\266\344\001" +
    "\002\000\006\252\uff7b\254\uff7b\001\002\000\006\252\uff23" +
    "\254\uff23\001\002\000\006\252\uff0b\254\uff0b\001\002\000" +
    "\006\252\uff09\254\uff09\001\002\000\006\252\uff08\254\uff08" +
    "\001\002\000\006\252\uff19\254\uff19\001\002\000\006\252" +
    "\uff2a\254\uff2a\001\002\000\006\252\uff2b\254\uff2b\001\002" +
    "\000\006\252\uff56\254\uff56\001\002\000\006\252\uff57\254" +
    "\uff57\001\002\000\006\252\uff2c\254\uff2c\001\002\000\006" +
    "\252\uff2d\254\uff2d\001\002\000\006\252\uff58\254\uff58\001" +
    "\002\000\006\252\uff2e\254\uff2e\001\002\000\006\252\uff59" +
    "\254\uff59\001\002\000\006\252\uff2f\254\uff2f\001\002\000" +
    "\006\252\uff1c\254\uff1c\001\002\000\006\252\uff30\254\uff30" +
    "\001\002\000\006\252\uff31\254\uff31\001\002\000\006\252" +
    "\uff1f\254\uff1f\001\002\000\006\252\uff1b\254\uff1b\001\002" +
    "\000\006\252\uff17\254\uff17\001\002\000\006\252\240\254" +
    "\241\001\002\000\004\247\237\001\002\000\006\022\uffed" +
    "\230\uffed\001\002\000\152\030\256\031\255\032\254\033" +
    "\253\034\252\110\245\111\243\112\322\113\320\114\316" +
    "\115\313\116\312\117\311\120\303\121\300\122\277\123" +
    "\276\124\275\125\274\126\273\127\271\130\270\131\267" +
    "\132\266\133\263\134\262\135\261\136\260\137\257\140" +
    "\251\141\250\142\246\143\244\144\323\145\317\146\315" +
    "\147\314\150\305\151\304\152\302\153\301\205\272\206" +
    "\306\207\310\210\265\211\247\212\307\213\264\214\242" +
    "\270\325\271\326\276\327\001\002\000\144\030\256\031" +
    "\255\032\254\033\253\034\252\110\245\111\243\112\322" +
    "\113\320\114\316\115\313\116\312\117\311\120\303\121" +
    "\300\122\277\123\276\124\275\125\274\126\273\127\271" +
    "\130\270\131\267\132\266\133\263\134\262\135\261\136" +
    "\260\137\257\140\251\141\250\142\246\143\244\144\323" +
    "\145\317\146\315\147\314\150\305\151\304\152\302\153" +
    "\301\205\272\206\306\207\310\210\265\211\247\212\307" +
    "\213\264\214\242\001\002\000\030\242\ufed7\243\ufed7\251" +
    "\ufed7\253\ufed7\255\ufed7\256\ufed7\257\ufed7\260\ufed7\261\ufed7" +
    "\262\ufed7\263\ufed7\001\002\000\030\242\uff01\243\uff01\251" +
    "\uff01\253\uff01\255\uff01\256\uff01\257\uff01\260\uff01\261\uff01" +
    "\262\uff01\263\uff01\001\002\000\030\242\ufee7\243\ufee7\251" +
    "\ufee7\253\ufee7\255\ufee7\256\ufee7\257\ufee7\260\ufee7\261\ufee7" +
    "\262\ufee7\263\ufee7\001\002\000\030\242\uff02\243\uff02\251" +
    "\uff02\253\uff02\255\uff02\256\uff02\257\uff02\260\uff02\261\uff02" +
    "\262\uff02\263\uff02\001\002\000\030\242\ufee8\243\ufee8\251" +
    "\ufee8\253\ufee8\255\ufee8\256\ufee8\257\ufee8\260\ufee8\261\ufee8" +
    "\262\ufee8\263\ufee8\001\002\000\030\242\ufeda\243\ufeda\251" +
    "\ufeda\253\ufeda\255\ufeda\256\ufeda\257\ufeda\260\ufeda\261\ufeda" +
    "\262\ufeda\263\ufeda\001\002\000\030\242\ufee9\243\ufee9\251" +
    "\ufee9\253\ufee9\255\ufee9\256\ufee9\257\ufee9\260\ufee9\261\ufee9" +
    "\262\ufee9\263\ufee9\001\002\000\030\242\ufeea\243\ufeea\251" +
    "\ufeea\253\ufeea\255\ufeea\256\ufeea\257\ufeea\260\ufeea\261\ufeea" +
    "\262\ufeea\263\ufeea\001\002\000\030\242\uff03\243\uff03\251" +
    "\uff03\253\uff03\255\uff03\256\uff03\257\uff03\260\uff03\261\uff03" +
    "\262\uff03\263\uff03\001\002\000\030\242\uff04\243\uff04\251" +
    "\uff04\253\uff04\255\uff04\256\uff04\257\uff04\260\uff04\261\uff04" +
    "\262\uff04\263\uff04\001\002\000\030\242\uff05\243\uff05\251" +
    "\uff05\253\uff05\255\uff05\256\uff05\257\uff05\260\uff05\261\uff05" +
    "\262\uff05\263\uff05\001\002\000\030\242\uff06\243\uff06\251" +
    "\uff06\253\uff06\255\uff06\256\uff06\257\uff06\260\uff06\261\uff06" +
    "\262\uff06\263\uff06\001\002\000\030\242\uff07\243\uff07\251" +
    "\uff07\253\uff07\255\uff07\256\uff07\257\uff07\260\uff07\261\uff07" +
    "\262\uff07\263\uff07\001\002\000\030\242\ufeeb\243\ufeeb\251" +
    "\ufeeb\253\ufeeb\255\ufeeb\256\ufeeb\257\ufeeb\260\ufeeb\261\ufeeb" +
    "\262\ufeeb\263\ufeeb\001\002\000\030\242\ufeec\243\ufeec\251" +
    "\ufeec\253\ufeec\255\ufeec\256\ufeec\257\ufeec\260\ufeec\261\ufeec" +
    "\262\ufeec\263\ufeec\001\002\000\030\242\ufeed\243\ufeed\251" +
    "\ufeed\253\ufeed\255\ufeed\256\ufeed\257\ufeed\260\ufeed\261\ufeed" +
    "\262\ufeed\263\ufeed\001\002\000\030\242\ufeee\243\ufeee\251" +
    "\ufeee\253\ufeee\255\ufeee\256\ufeee\257\ufeee\260\ufeee\261\ufeee" +
    "\262\ufeee\263\ufeee\001\002\000\030\242\ufeef\243\ufeef\251" +
    "\ufeef\253\ufeef\255\ufeef\256\ufeef\257\ufeef\260\ufeef\261\ufeef" +
    "\262\ufeef\263\ufeef\001\002\000\030\242\ufed8\243\ufed8\251" +
    "\ufed8\253\ufed8\255\ufed8\256\ufed8\257\ufed8\260\ufed8\261\ufed8" +
    "\262\ufed8\263\ufed8\001\002\000\030\242\ufedb\243\ufedb\251" +
    "\ufedb\253\ufedb\255\ufedb\256\ufedb\257\ufedb\260\ufedb\261\ufedb" +
    "\262\ufedb\263\ufedb\001\002\000\030\242\ufef0\243\ufef0\251" +
    "\ufef0\253\ufef0\255\ufef0\256\ufef0\257\ufef0\260\ufef0\261\ufef0" +
    "\262\ufef0\263\ufef0\001\002\000\030\242\ufef1\243\ufef1\251" +
    "\ufef1\253\ufef1\255\ufef1\256\ufef1\257\ufef1\260\ufef1\261\ufef1" +
    "\262\ufef1\263\ufef1\001\002\000\030\242\ufef2\243\ufef2\251" +
    "\ufef2\253\ufef2\255\ufef2\256\ufef2\257\ufef2\260\ufef2\261\ufef2" +
    "\262\ufef2\263\ufef2\001\002\000\030\242\ufef3\243\ufef3\251" +
    "\ufef3\253\ufef3\255\ufef3\256\ufef3\257\ufef3\260\ufef3\261\ufef3" +
    "\262\ufef3\263\ufef3\001\002\000\030\242\ufede\243\ufede\251" +
    "\ufede\253\ufede\255\ufede\256\ufede\257\ufede\260\ufede\261\ufede" +
    "\262\ufede\263\ufede\001\002\000\030\242\ufef4\243\ufef4\251" +
    "\ufef4\253\ufef4\255\ufef4\256\ufef4\257\ufef4\260\ufef4\261\ufef4" +
    "\262\ufef4\263\ufef4\001\002\000\030\242\ufef5\243\ufef5\251" +
    "\ufef5\253\ufef5\255\ufef5\256\ufef5\257\ufef5\260\ufef5\261\ufef5" +
    "\262\ufef5\263\ufef5\001\002\000\030\242\ufef6\243\ufef6\251" +
    "\ufef6\253\ufef6\255\ufef6\256\ufef6\257\ufef6\260\ufef6\261\ufef6" +
    "\262\ufef6\263\ufef6\001\002\000\030\242\ufef7\243\ufef7\251" +
    "\ufef7\253\ufef7\255\ufef7\256\ufef7\257\ufef7\260\ufef7\261\ufef7" +
    "\262\ufef7\263\ufef7\001\002\000\030\242\ufef8\243\ufef8\251" +
    "\ufef8\253\ufef8\255\ufef8\256\ufef8\257\ufef8\260\ufef8\261\ufef8" +
    "\262\ufef8\263\ufef8\001\002\000\030\242\ufef9\243\ufef9\251" +
    "\ufef9\253\ufef9\255\ufef9\256\ufef9\257\ufef9\260\ufef9\261\ufef9" +
    "\262\ufef9\263\ufef9\001\002\000\030\242\ufedf\243\ufedf\251" +
    "\ufedf\253\ufedf\255\ufedf\256\ufedf\257\ufedf\260\ufedf\261\ufedf" +
    "\262\ufedf\263\ufedf\001\002\000\030\242\ufee0\243\ufee0\251" +
    "\ufee0\253\ufee0\255\ufee0\256\ufee0\257\ufee0\260\ufee0\261\ufee0" +
    "\262\ufee0\263\ufee0\001\002\000\030\242\ufefa\243\ufefa\251" +
    "\ufefa\253\ufefa\255\ufefa\256\ufefa\257\ufefa\260\ufefa\261\ufefa" +
    "\262\ufefa\263\ufefa\001\002\000\030\242\ufee1\243\ufee1\251" +
    "\ufee1\253\ufee1\255\ufee1\256\ufee1\257\ufee1\260\ufee1\261\ufee1" +
    "\262\ufee1\263\ufee1\001\002\000\030\242\ufee2\243\ufee2\251" +
    "\ufee2\253\ufee2\255\ufee2\256\ufee2\257\ufee2\260\ufee2\261\ufee2" +
    "\262\ufee2\263\ufee2\001\002\000\030\242\ufedd\243\ufedd\251" +
    "\ufedd\253\ufedd\255\ufedd\256\ufedd\257\ufedd\260\ufedd\261\ufedd" +
    "\262\ufedd\263\ufedd\001\002\000\030\242\ufed9\243\ufed9\251" +
    "\ufed9\253\ufed9\255\ufed9\256\ufed9\257\ufed9\260\ufed9\261\ufed9" +
    "\262\ufed9\263\ufed9\001\002\000\030\242\ufedc\243\ufedc\251" +
    "\ufedc\253\ufedc\255\ufedc\256\ufedc\257\ufedc\260\ufedc\261\ufedc" +
    "\262\ufedc\263\ufedc\001\002\000\030\242\ufefb\243\ufefb\251" +
    "\ufefb\253\ufefb\255\ufefb\256\ufefb\257\ufefb\260\ufefb\261\ufefb" +
    "\262\ufefb\263\ufefb\001\002\000\030\242\ufefc\243\ufefc\251" +
    "\ufefc\253\ufefc\255\ufefc\256\ufefc\257\ufefc\260\ufefc\261\ufefc" +
    "\262\ufefc\263\ufefc\001\002\000\030\242\ufefd\243\ufefd\251" +
    "\ufefd\253\ufefd\255\ufefd\256\ufefd\257\ufefd\260\ufefd\261\ufefd" +
    "\262\ufefd\263\ufefd\001\002\000\030\242\ufee3\243\ufee3\251" +
    "\ufee3\253\ufee3\255\ufee3\256\ufee3\257\ufee3\260\ufee3\261\ufee3" +
    "\262\ufee3\263\ufee3\001\002\000\030\242\ufee4\243\ufee4\251" +
    "\ufee4\253\ufee4\255\ufee4\256\ufee4\257\ufee4\260\ufee4\261\ufee4" +
    "\262\ufee4\263\ufee4\001\002\000\030\242\ufefe\243\ufefe\251" +
    "\ufefe\253\ufefe\255\ufefe\256\ufefe\257\ufefe\260\ufefe\261\ufefe" +
    "\262\ufefe\263\ufefe\001\002\000\030\242\ufee5\243\ufee5\251" +
    "\ufee5\253\ufee5\255\ufee5\256\ufee5\257\ufee5\260\ufee5\261\ufee5" +
    "\262\ufee5\263\ufee5\001\002\000\030\242\ufeff\243\ufeff\251" +
    "\ufeff\253\ufeff\255\ufeff\256\ufeff\257\ufeff\260\ufeff\261\ufeff" +
    "\262\ufeff\263\ufeff\001\002\000\004\251\324\001\002\000" +
    "\030\242\uff00\243\uff00\251\uff00\253\uff00\255\uff00\256\uff00" +
    "\257\uff00\260\uff00\261\uff00\262\uff00\263\uff00\001\002\000" +
    "\030\242\ufee6\243\ufee6\251\ufee6\253\ufee6\255\ufee6\256\ufee6" +
    "\257\ufee6\260\ufee6\261\ufee6\262\ufee6\263\ufee6\001\002\000" +
    "\u011c\016\uffe2\017\uffe2\020\uffe2\030\uffe2\031\uffe2\032\uffe2" +
    "\033\uffe2\034\uffe2\035\uffe2\036\uffe2\037\uffe2\040\uffe2\041" +
    "\uffe2\042\uffe2\043\uffe2\044\uffe2\045\uffe2\046\uffe2\047\uffe2" +
    "\050\uffe2\051\uffe2\052\uffe2\053\uffe2\054\uffe2\055\uffe2\056" +
    "\uffe2\057\uffe2\060\uffe2\061\uffe2\062\uffe2\063\uffe2\064\uffe2" +
    "\065\uffe2\066\uffe2\067\uffe2\070\uffe2\071\uffe2\072\uffe2\073" +
    "\uffe2\074\uffe2\075\uffe2\076\uffe2\077\uffe2\100\uffe2\101\uffe2" +
    "\102\uffe2\103\uffe2\104\uffe2\105\uffe2\106\uffe2\107\uffe2\110" +
    "\uffe2\111\uffe2\112\uffe2\113\uffe2\114\uffe2\115\uffe2\116\uffe2" +
    "\117\uffe2\120\uffe2\121\uffe2\122\uffe2\123\uffe2\124\uffe2\125" +
    "\uffe2\126\uffe2\127\uffe2\130\uffe2\131\uffe2\132\uffe2\133\uffe2" +
    "\134\uffe2\135\uffe2\136\uffe2\137\uffe2\140\uffe2\141\uffe2\142" +
    "\uffe2\143\uffe2\144\uffe2\145\uffe2\146\uffe2\147\uffe2\150\uffe2" +
    "\151\uffe2\152\uffe2\153\uffe2\154\uffe2\155\uffe2\156\uffe2\157" +
    "\uffe2\160\uffe2\161\uffe2\162\uffe2\163\uffe2\164\uffe2\165\uffe2" +
    "\166\uffe2\167\uffe2\170\uffe2\171\uffe2\173\uffe2\174\uffe2\175" +
    "\uffe2\176\uffe2\177\uffe2\200\uffe2\201\uffe2\202\uffe2\203\uffe2" +
    "\204\uffe2\205\uffe2\206\uffe2\207\uffe2\210\uffe2\211\uffe2\212" +
    "\uffe2\213\uffe2\214\uffe2\215\uffe2\216\uffe2\217\uffe2\220\uffe2" +
    "\221\uffe2\222\uffe2\223\uffe2\224\uffe2\225\uffe2\226\uffe2\227" +
    "\uffe2\233\uffe2\234\uffe2\236\uffe2\240\uffe2\247\uffe2\264\uffe2" +
    "\267\uffe2\271\uffe2\273\uffe2\274\uffe2\275\uffe2\001\002\000" +
    "\004\251\340\001\002\000\004\251\337\001\002\000\004" +
    "\251\336\001\002\000\004\243\331\001\002\000\006\270" +
    "\332\271\333\001\002\000\004\251\335\001\002\000\004" +
    "\251\334\001\002\000\u011c\016\uffd9\017\uffd9\020\uffd9\030" +
    "\uffd9\031\uffd9\032\uffd9\033\uffd9\034\uffd9\035\uffd9\036\uffd9" +
    "\037\uffd9\040\uffd9\041\uffd9\042\uffd9\043\uffd9\044\uffd9\045" +
    "\uffd9\046\uffd9\047\uffd9\050\uffd9\051\uffd9\052\uffd9\053\uffd9" +
    "\054\uffd9\055\uffd9\056\uffd9\057\uffd9\060\uffd9\061\uffd9\062" +
    "\uffd9\063\uffd9\064\uffd9\065\uffd9\066\uffd9\067\uffd9\070\uffd9" +
    "\071\uffd9\072\uffd9\073\uffd9\074\uffd9\075\uffd9\076\uffd9\077" +
    "\uffd9\100\uffd9\101\uffd9\102\uffd9\103\uffd9\104\uffd9\105\uffd9" +
    "\106\uffd9\107\uffd9\110\uffd9\111\uffd9\112\uffd9\113\uffd9\114" +
    "\uffd9\115\uffd9\116\uffd9\117\uffd9\120\uffd9\121\uffd9\122\uffd9" +
    "\123\uffd9\124\uffd9\125\uffd9\126\uffd9\127\uffd9\130\uffd9\131" +
    "\uffd9\132\uffd9\133\uffd9\134\uffd9\135\uffd9\136\uffd9\137\uffd9" +
    "\140\uffd9\141\uffd9\142\uffd9\143\uffd9\144\uffd9\145\uffd9\146" +
    "\uffd9\147\uffd9\150\uffd9\151\uffd9\152\uffd9\153\uffd9\154\uffd9" +
    "\155\uffd9\156\uffd9\157\uffd9\160\uffd9\161\uffd9\162\uffd9\163" +
    "\uffd9\164\uffd9\165\uffd9\166\uffd9\167\uffd9\170\uffd9\171\uffd9" +
    "\173\uffd9\174\uffd9\175\uffd9\176\uffd9\177\uffd9\200\uffd9\201" +
    "\uffd9\202\uffd9\203\uffd9\204\uffd9\205\uffd9\206\uffd9\207\uffd9" +
    "\210\uffd9\211\uffd9\212\uffd9\213\uffd9\214\uffd9\215\uffd9\216" +
    "\uffd9\217\uffd9\220\uffd9\221\uffd9\222\uffd9\223\uffd9\224\uffd9" +
    "\225\uffd9\226\uffd9\227\uffd9\233\uffd9\234\uffd9\236\uffd9\240" +
    "\uffd9\247\uffd9\264\uffd9\267\uffd9\271\uffd9\273\uffd9\274\uffd9" +
    "\275\uffd9\001\002\000\u011c\016\uffda\017\uffda\020\uffda\030" +
    "\uffda\031\uffda\032\uffda\033\uffda\034\uffda\035\uffda\036\uffda" +
    "\037\uffda\040\uffda\041\uffda\042\uffda\043\uffda\044\uffda\045" +
    "\uffda\046\uffda\047\uffda\050\uffda\051\uffda\052\uffda\053\uffda" +
    "\054\uffda\055\uffda\056\uffda\057\uffda\060\uffda\061\uffda\062" +
    "\uffda\063\uffda\064\uffda\065\uffda\066\uffda\067\uffda\070\uffda" +
    "\071\uffda\072\uffda\073\uffda\074\uffda\075\uffda\076\uffda\077" +
    "\uffda\100\uffda\101\uffda\102\uffda\103\uffda\104\uffda\105\uffda" +
    "\106\uffda\107\uffda\110\uffda\111\uffda\112\uffda\113\uffda\114" +
    "\uffda\115\uffda\116\uffda\117\uffda\120\uffda\121\uffda\122\uffda" +
    "\123\uffda\124\uffda\125\uffda\126\uffda\127\uffda\130\uffda\131" +
    "\uffda\132\uffda\133\uffda\134\uffda\135\uffda\136\uffda\137\uffda" +
    "\140\uffda\141\uffda\142\uffda\143\uffda\144\uffda\145\uffda\146" +
    "\uffda\147\uffda\150\uffda\151\uffda\152\uffda\153\uffda\154\uffda" +
    "\155\uffda\156\uffda\157\uffda\160\uffda\161\uffda\162\uffda\163" +
    "\uffda\164\uffda\165\uffda\166\uffda\167\uffda\170\uffda\171\uffda" +
    "\173\uffda\174\uffda\175\uffda\176\uffda\177\uffda\200\uffda\201" +
    "\uffda\202\uffda\203\uffda\204\uffda\205\uffda\206\uffda\207\uffda" +
    "\210\uffda\211\uffda\212\uffda\213\uffda\214\uffda\215\uffda\216" +
    "\uffda\217\uffda\220\uffda\221\uffda\222\uffda\223\uffda\224\uffda" +
    "\225\uffda\226\uffda\227\uffda\233\uffda\234\uffda\236\uffda\240" +
    "\uffda\247\uffda\264\uffda\267\uffda\271\uffda\273\uffda\274\uffda" +
    "\275\uffda\001\002\000\u011c\016\uffe0\017\uffe0\020\uffe0\030" +
    "\uffe0\031\uffe0\032\uffe0\033\uffe0\034\uffe0\035\uffe0\036\uffe0" +
    "\037\uffe0\040\uffe0\041\uffe0\042\uffe0\043\uffe0\044\uffe0\045" +
    "\uffe0\046\uffe0\047\uffe0\050\uffe0\051\uffe0\052\uffe0\053\uffe0" +
    "\054\uffe0\055\uffe0\056\uffe0\057\uffe0\060\uffe0\061\uffe0\062" +
    "\uffe0\063\uffe0\064\uffe0\065\uffe0\066\uffe0\067\uffe0\070\uffe0" +
    "\071\uffe0\072\uffe0\073\uffe0\074\uffe0\075\uffe0\076\uffe0\077" +
    "\uffe0\100\uffe0\101\uffe0\102\uffe0\103\uffe0\104\uffe0\105\uffe0" +
    "\106\uffe0\107\uffe0\110\uffe0\111\uffe0\112\uffe0\113\uffe0\114" +
    "\uffe0\115\uffe0\116\uffe0\117\uffe0\120\uffe0\121\uffe0\122\uffe0" +
    "\123\uffe0\124\uffe0\125\uffe0\126\uffe0\127\uffe0\130\uffe0\131" +
    "\uffe0\132\uffe0\133\uffe0\134\uffe0\135\uffe0\136\uffe0\137\uffe0" +
    "\140\uffe0\141\uffe0\142\uffe0\143\uffe0\144\uffe0\145\uffe0\146" +
    "\uffe0\147\uffe0\150\uffe0\151\uffe0\152\uffe0\153\uffe0\154\uffe0" +
    "\155\uffe0\156\uffe0\157\uffe0\160\uffe0\161\uffe0\162\uffe0\163" +
    "\uffe0\164\uffe0\165\uffe0\166\uffe0\167\uffe0\170\uffe0\171\uffe0" +
    "\173\uffe0\174\uffe0\175\uffe0\176\uffe0\177\uffe0\200\uffe0\201" +
    "\uffe0\202\uffe0\203\uffe0\204\uffe0\205\uffe0\206\uffe0\207\uffe0" +
    "\210\uffe0\211\uffe0\212\uffe0\213\uffe0\214\uffe0\215\uffe0\216" +
    "\uffe0\217\uffe0\220\uffe0\221\uffe0\222\uffe0\223\uffe0\224\uffe0" +
    "\225\uffe0\226\uffe0\227\uffe0\233\uffe0\234\uffe0\236\uffe0\240" +
    "\uffe0\247\uffe0\264\uffe0\267\uffe0\271\uffe0\273\uffe0\274\uffe0" +
    "\275\uffe0\001\002\000\u011c\016\uffdf\017\uffdf\020\uffdf\030" +
    "\uffdf\031\uffdf\032\uffdf\033\uffdf\034\uffdf\035\uffdf\036\uffdf" +
    "\037\uffdf\040\uffdf\041\uffdf\042\uffdf\043\uffdf\044\uffdf\045" +
    "\uffdf\046\uffdf\047\uffdf\050\uffdf\051\uffdf\052\uffdf\053\uffdf" +
    "\054\uffdf\055\uffdf\056\uffdf\057\uffdf\060\uffdf\061\uffdf\062" +
    "\uffdf\063\uffdf\064\uffdf\065\uffdf\066\uffdf\067\uffdf\070\uffdf" +
    "\071\uffdf\072\uffdf\073\uffdf\074\uffdf\075\uffdf\076\uffdf\077" +
    "\uffdf\100\uffdf\101\uffdf\102\uffdf\103\uffdf\104\uffdf\105\uffdf" +
    "\106\uffdf\107\uffdf\110\uffdf\111\uffdf\112\uffdf\113\uffdf\114" +
    "\uffdf\115\uffdf\116\uffdf\117\uffdf\120\uffdf\121\uffdf\122\uffdf" +
    "\123\uffdf\124\uffdf\125\uffdf\126\uffdf\127\uffdf\130\uffdf\131" +
    "\uffdf\132\uffdf\133\uffdf\134\uffdf\135\uffdf\136\uffdf\137\uffdf" +
    "\140\uffdf\141\uffdf\142\uffdf\143\uffdf\144\uffdf\145\uffdf\146" +
    "\uffdf\147\uffdf\150\uffdf\151\uffdf\152\uffdf\153\uffdf\154\uffdf" +
    "\155\uffdf\156\uffdf\157\uffdf\160\uffdf\161\uffdf\162\uffdf\163" +
    "\uffdf\164\uffdf\165\uffdf\166\uffdf\167\uffdf\170\uffdf\171\uffdf" +
    "\173\uffdf\174\uffdf\175\uffdf\176\uffdf\177\uffdf\200\uffdf\201" +
    "\uffdf\202\uffdf\203\uffdf\204\uffdf\205\uffdf\206\uffdf\207\uffdf" +
    "\210\uffdf\211\uffdf\212\uffdf\213\uffdf\214\uffdf\215\uffdf\216" +
    "\uffdf\217\uffdf\220\uffdf\221\uffdf\222\uffdf\223\uffdf\224\uffdf" +
    "\225\uffdf\226\uffdf\227\uffdf\233\uffdf\234\uffdf\236\uffdf\240" +
    "\uffdf\247\uffdf\264\uffdf\267\uffdf\271\uffdf\273\uffdf\274\uffdf" +
    "\275\uffdf\001\002\000\u011c\016\uffe1\017\uffe1\020\uffe1\030" +
    "\uffe1\031\uffe1\032\uffe1\033\uffe1\034\uffe1\035\uffe1\036\uffe1" +
    "\037\uffe1\040\uffe1\041\uffe1\042\uffe1\043\uffe1\044\uffe1\045" +
    "\uffe1\046\uffe1\047\uffe1\050\uffe1\051\uffe1\052\uffe1\053\uffe1" +
    "\054\uffe1\055\uffe1\056\uffe1\057\uffe1\060\uffe1\061\uffe1\062" +
    "\uffe1\063\uffe1\064\uffe1\065\uffe1\066\uffe1\067\uffe1\070\uffe1" +
    "\071\uffe1\072\uffe1\073\uffe1\074\uffe1\075\uffe1\076\uffe1\077" +
    "\uffe1\100\uffe1\101\uffe1\102\uffe1\103\uffe1\104\uffe1\105\uffe1" +
    "\106\uffe1\107\uffe1\110\uffe1\111\uffe1\112\uffe1\113\uffe1\114" +
    "\uffe1\115\uffe1\116\uffe1\117\uffe1\120\uffe1\121\uffe1\122\uffe1" +
    "\123\uffe1\124\uffe1\125\uffe1\126\uffe1\127\uffe1\130\uffe1\131" +
    "\uffe1\132\uffe1\133\uffe1\134\uffe1\135\uffe1\136\uffe1\137\uffe1" +
    "\140\uffe1\141\uffe1\142\uffe1\143\uffe1\144\uffe1\145\uffe1\146" +
    "\uffe1\147\uffe1\150\uffe1\151\uffe1\152\uffe1\153\uffe1\154\uffe1" +
    "\155\uffe1\156\uffe1\157\uffe1\160\uffe1\161\uffe1\162\uffe1\163" +
    "\uffe1\164\uffe1\165\uffe1\166\uffe1\167\uffe1\170\uffe1\171\uffe1" +
    "\173\uffe1\174\uffe1\175\uffe1\176\uffe1\177\uffe1\200\uffe1\201" +
    "\uffe1\202\uffe1\203\uffe1\204\uffe1\205\uffe1\206\uffe1\207\uffe1" +
    "\210\uffe1\211\uffe1\212\uffe1\213\uffe1\214\uffe1\215\uffe1\216" +
    "\uffe1\217\uffe1\220\uffe1\221\uffe1\222\uffe1\223\uffe1\224\uffe1" +
    "\225\uffe1\226\uffe1\227\uffe1\233\uffe1\234\uffe1\236\uffe1\240" +
    "\uffe1\247\uffe1\264\uffe1\267\uffe1\271\uffe1\273\uffe1\274\uffe1" +
    "\275\uffe1\001\002\000\004\243\u0135\001\002\000\022\010" +
    "\376\011\370\012\377\241\375\270\372\271\374\276\371" +
    "\277\366\001\002\000\004\270\364\001\002\000\004\270" +
    "\362\001\002\000\004\244\360\001\002\000\010\242\351" +
    "\270\347\271\350\001\002\000\022\241\uffa5\242\uffa5\243" +
    "\uffa5\244\uffa5\245\uffa5\250\uffa5\251\uffa5\271\357\001\002" +
    "\000\022\241\uffa6\242\uffa6\243\uffa6\244\uffa6\245\uffa6\250" +
    "\uffa6\251\uffa6\270\356\001\002\000\004\251\355\001\002" +
    "\000\004\242\353\001\002\000\004\251\354\001\002\000" +
    "\u011c\016\uffdd\017\uffdd\020\uffdd\030\uffdd\031\uffdd\032\uffdd" +
    "\033\uffdd\034\uffdd\035\uffdd\036\uffdd\037\uffdd\040\uffdd\041" +
    "\uffdd\042\uffdd\043\uffdd\044\uffdd\045\uffdd\046\uffdd\047\uffdd" +
    "\050\uffdd\051\uffdd\052\uffdd\053\uffdd\054\uffdd\055\uffdd\056" +
    "\uffdd\057\uffdd\060\uffdd\061\uffdd\062\uffdd\063\uffdd\064\uffdd" +
    "\065\uffdd\066\uffdd\067\uffdd\070\uffdd\071\uffdd\072\uffdd\073" +
    "\uffdd\074\uffdd\075\uffdd\076\uffdd\077\uffdd\100\uffdd\101\uffdd" +
    "\102\uffdd\103\uffdd\104\uffdd\105\uffdd\106\uffdd\107\uffdd\110" +
    "\uffdd\111\uffdd\112\uffdd\113\uffdd\114\uffdd\115\uffdd\116\uffdd" +
    "\117\uffdd\120\uffdd\121\uffdd\122\uffdd\123\uffdd\124\uffdd\125" +
    "\uffdd\126\uffdd\127\uffdd\130\uffdd\131\uffdd\132\uffdd\133\uffdd" +
    "\134\uffdd\135\uffdd\136\uffdd\137\uffdd\140\uffdd\141\uffdd\142" +
    "\uffdd\143\uffdd\144\uffdd\145\uffdd\146\uffdd\147\uffdd\150\uffdd" +
    "\151\uffdd\152\uffdd\153\uffdd\154\uffdd\155\uffdd\156\uffdd\157" +
    "\uffdd\160\uffdd\161\uffdd\162\uffdd\163\uffdd\164\uffdd\165\uffdd" +
    "\166\uffdd\167\uffdd\170\uffdd\171\uffdd\173\uffdd\174\uffdd\175" +
    "\uffdd\176\uffdd\177\uffdd\200\uffdd\201\uffdd\202\uffdd\203\uffdd" +
    "\204\uffdd\205\uffdd\206\uffdd\207\uffdd\210\uffdd\211\uffdd\212" +
    "\uffdd\213\uffdd\214\uffdd\215\uffdd\216\uffdd\217\uffdd\220\uffdd" +
    "\221\uffdd\222\uffdd\223\uffdd\224\uffdd\225\uffdd\226\uffdd\227" +
    "\uffdd\233\uffdd\234\uffdd\236\uffdd\240\uffdd\247\uffdd\264\uffdd" +
    "\267\uffdd\271\uffdd\273\uffdd\274\uffdd\275\uffdd\001\002\000" +
    "\u011c\016\uffde\017\uffde\020\uffde\030\uffde\031\uffde\032\uffde" +
    "\033\uffde\034\uffde\035\uffde\036\uffde\037\uffde\040\uffde\041" +
    "\uffde\042\uffde\043\uffde\044\uffde\045\uffde\046\uffde\047\uffde" +
    "\050\uffde\051\uffde\052\uffde\053\uffde\054\uffde\055\uffde\056" +
    "\uffde\057\uffde\060\uffde\061\uffde\062\uffde\063\uffde\064\uffde" +
    "\065\uffde\066\uffde\067\uffde\070\uffde\071\uffde\072\uffde\073" +
    "\uffde\074\uffde\075\uffde\076\uffde\077\uffde\100\uffde\101\uffde" +
    "\102\uffde\103\uffde\104\uffde\105\uffde\106\uffde\107\uffde\110" +
    "\uffde\111\uffde\112\uffde\113\uffde\114\uffde\115\uffde\116\uffde" +
    "\117\uffde\120\uffde\121\uffde\122\uffde\123\uffde\124\uffde\125" +
    "\uffde\126\uffde\127\uffde\130\uffde\131\uffde\132\uffde\133\uffde" +
    "\134\uffde\135\uffde\136\uffde\137\uffde\140\uffde\141\uffde\142" +
    "\uffde\143\uffde\144\uffde\145\uffde\146\uffde\147\uffde\150\uffde" +
    "\151\uffde\152\uffde\153\uffde\154\uffde\155\uffde\156\uffde\157" +
    "\uffde\160\uffde\161\uffde\162\uffde\163\uffde\164\uffde\165\uffde" +
    "\166\uffde\167\uffde\170\uffde\171\uffde\173\uffde\174\uffde\175" +
    "\uffde\176\uffde\177\uffde\200\uffde\201\uffde\202\uffde\203\uffde" +
    "\204\uffde\205\uffde\206\uffde\207\uffde\210\uffde\211\uffde\212" +
    "\uffde\213\uffde\214\uffde\215\uffde\216\uffde\217\uffde\220\uffde" +
    "\221\uffde\222\uffde\223\uffde\224\uffde\225\uffde\226\uffde\227" +
    "\uffde\233\uffde\234\uffde\236\uffde\240\uffde\247\uffde\264\uffde" +
    "\267\uffde\271\uffde\273\uffde\274\uffde\275\uffde\001\002\000" +
    "\020\241\uffa4\242\uffa4\243\uffa4\244\uffa4\245\uffa4\250\uffa4" +
    "\251\uffa4\001\002\000\020\241\uffa3\242\uffa3\243\uffa3\244" +
    "\uffa3\245\uffa3\250\uffa3\251\uffa3\001\002\000\004\251\361" +
    "\001\002\000\u011c\016\uffd7\017\uffd7\020\uffd7\030\uffd7\031" +
    "\uffd7\032\uffd7\033\uffd7\034\uffd7\035\uffd7\036\uffd7\037\uffd7" +
    "\040\uffd7\041\uffd7\042\uffd7\043\uffd7\044\uffd7\045\uffd7\046" +
    "\uffd7\047\uffd7\050\uffd7\051\uffd7\052\uffd7\053\uffd7\054\uffd7" +
    "\055\uffd7\056\uffd7\057\uffd7\060\uffd7\061\uffd7\062\uffd7\063" +
    "\uffd7\064\uffd7\065\uffd7\066\uffd7\067\uffd7\070\uffd7\071\uffd7" +
    "\072\uffd7\073\uffd7\074\uffd7\075\uffd7\076\uffd7\077\uffd7\100" +
    "\uffd7\101\uffd7\102\uffd7\103\uffd7\104\uffd7\105\uffd7\106\uffd7" +
    "\107\uffd7\110\uffd7\111\uffd7\112\uffd7\113\uffd7\114\uffd7\115" +
    "\uffd7\116\uffd7\117\uffd7\120\uffd7\121\uffd7\122\uffd7\123\uffd7" +
    "\124\uffd7\125\uffd7\126\uffd7\127\uffd7\130\uffd7\131\uffd7\132" +
    "\uffd7\133\uffd7\134\uffd7\135\uffd7\136\uffd7\137\uffd7\140\uffd7" +
    "\141\uffd7\142\uffd7\143\uffd7\144\uffd7\145\uffd7\146\uffd7\147" +
    "\uffd7\150\uffd7\151\uffd7\152\uffd7\153\uffd7\154\uffd7\155\uffd7" +
    "\156\uffd7\157\uffd7\160\uffd7\161\uffd7\162\uffd7\163\uffd7\164" +
    "\uffd7\165\uffd7\166\uffd7\167\uffd7\170\uffd7\171\uffd7\173\uffd7" +
    "\174\uffd7\175\uffd7\176\uffd7\177\uffd7\200\uffd7\201\uffd7\202" +
    "\uffd7\203\uffd7\204\uffd7\205\uffd7\206\uffd7\207\uffd7\210\uffd7" +
    "\211\uffd7\212\uffd7\213\uffd7\214\uffd7\215\uffd7\216\uffd7\217" +
    "\uffd7\220\uffd7\221\uffd7\222\uffd7\223\uffd7\224\uffd7\225\uffd7" +
    "\226\uffd7\227\uffd7\233\uffd7\234\uffd7\236\uffd7\240\uffd7\247" +
    "\uffd7\264\uffd7\267\uffd7\271\uffd7\273\uffd7\274\uffd7\275\uffd7" +
    "\001\002\000\004\251\363\001\002\000\u011c\016\uffca\017" +
    "\uffca\020\uffca\030\uffca\031\uffca\032\uffca\033\uffca\034\uffca" +
    "\035\uffca\036\uffca\037\uffca\040\uffca\041\uffca\042\uffca\043" +
    "\uffca\044\uffca\045\uffca\046\uffca\047\uffca\050\uffca\051\uffca" +
    "\052\uffca\053\uffca\054\uffca\055\uffca\056\uffca\057\uffca\060" +
    "\uffca\061\uffca\062\uffca\063\uffca\064\uffca\065\uffca\066\uffca" +
    "\067\uffca\070\uffca\071\uffca\072\uffca\073\uffca\074\uffca\075" +
    "\uffca\076\uffca\077\uffca\100\uffca\101\uffca\102\uffca\103\uffca" +
    "\104\uffca\105\uffca\106\uffca\107\uffca\110\uffca\111\uffca\112" +
    "\uffca\113\uffca\114\uffca\115\uffca\116\uffca\117\uffca\120\uffca" +
    "\121\uffca\122\uffca\123\uffca\124\uffca\125\uffca\126\uffca\127" +
    "\uffca\130\uffca\131\uffca\132\uffca\133\uffca\134\uffca\135\uffca" +
    "\136\uffca\137\uffca\140\uffca\141\uffca\142\uffca\143\uffca\144" +
    "\uffca\145\uffca\146\uffca\147\uffca\150\uffca\151\uffca\152\uffca" +
    "\153\uffca\154\uffca\155\uffca\156\uffca\157\uffca\160\uffca\161" +
    "\uffca\162\uffca\163\uffca\164\uffca\165\uffca\166\uffca\167\uffca" +
    "\170\uffca\171\uffca\173\uffca\174\uffca\175\uffca\176\uffca\177" +
    "\uffca\200\uffca\201\uffca\202\uffca\203\uffca\204\uffca\205\uffca" +
    "\206\uffca\207\uffca\210\uffca\211\uffca\212\uffca\213\uffca\214" +
    "\uffca\215\uffca\216\uffca\217\uffca\220\uffca\221\uffca\222\uffca" +
    "\223\uffca\224\uffca\225\uffca\226\uffca\227\uffca\233\uffca\234" +
    "\uffca\236\uffca\240\uffca\247\uffca\264\uffca\267\uffca\271\uffca" +
    "\273\uffca\274\uffca\275\uffca\001\002\000\004\251\365\001" +
    "\002\000\u011c\016\uffc9\017\uffc9\020\uffc9\030\uffc9\031\uffc9" +
    "\032\uffc9\033\uffc9\034\uffc9\035\uffc9\036\uffc9\037\uffc9\040" +
    "\uffc9\041\uffc9\042\uffc9\043\uffc9\044\uffc9\045\uffc9\046\uffc9" +
    "\047\uffc9\050\uffc9\051\uffc9\052\uffc9\053\uffc9\054\uffc9\055" +
    "\uffc9\056\uffc9\057\uffc9\060\uffc9\061\uffc9\062\uffc9\063\uffc9" +
    "\064\uffc9\065\uffc9\066\uffc9\067\uffc9\070\uffc9\071\uffc9\072" +
    "\uffc9\073\uffc9\074\uffc9\075\uffc9\076\uffc9\077\uffc9\100\uffc9" +
    "\101\uffc9\102\uffc9\103\uffc9\104\uffc9\105\uffc9\106\uffc9\107" +
    "\uffc9\110\uffc9\111\uffc9\112\uffc9\113\uffc9\114\uffc9\115\uffc9" +
    "\116\uffc9\117\uffc9\120\uffc9\121\uffc9\122\uffc9\123\uffc9\124" +
    "\uffc9\125\uffc9\126\uffc9\127\uffc9\130\uffc9\131\uffc9\132\uffc9" +
    "\133\uffc9\134\uffc9\135\uffc9\136\uffc9\137\uffc9\140\uffc9\141" +
    "\uffc9\142\uffc9\143\uffc9\144\uffc9\145\uffc9\146\uffc9\147\uffc9" +
    "\150\uffc9\151\uffc9\152\uffc9\153\uffc9\154\uffc9\155\uffc9\156" +
    "\uffc9\157\uffc9\160\uffc9\161\uffc9\162\uffc9\163\uffc9\164\uffc9" +
    "\165\uffc9\166\uffc9\167\uffc9\170\uffc9\171\uffc9\173\uffc9\174" +
    "\uffc9\175\uffc9\176\uffc9\177\uffc9\200\uffc9\201\uffc9\202\uffc9" +
    "\203\uffc9\204\uffc9\205\uffc9\206\uffc9\207\uffc9\210\uffc9\211" +
    "\uffc9\212\uffc9\213\uffc9\214\uffc9\215\uffc9\216\uffc9\217\uffc9" +
    "\220\uffc9\221\uffc9\222\uffc9\223\uffc9\224\uffc9\225\uffc9\226" +
    "\uffc9\227\uffc9\233\uffc9\234\uffc9\236\uffc9\240\uffc9\247\uffc9" +
    "\264\uffc9\267\uffc9\271\uffc9\273\uffc9\274\uffc9\275\uffc9\001" +
    "\002\000\004\251\uff88\001\002\000\004\251\u0134\001\002" +
    "\000\004\251\uff8b\001\002\000\004\251\uff87\001\002\000" +
    "\014\243\uffa5\244\uffa5\245\uffa5\251\uff8c\271\357\001\002" +
    "\000\010\243\u0101\244\u0103\245\u0102\001\002\000\020\243" +
    "\uffa6\244\uffa6\245\uffa6\251\uff8d\265\u0128\266\u0129\270\356" +
    "\001\002\000\010\241\375\270\347\271\350\001\002\000" +
    "\004\251\uff8a\001\002\000\004\251\uff89\001\002\000\012" +
    "\243\u0101\244\u0103\245\u0102\251\u0104\001\002\000\010\241" +
    "\uffab\270\uffab\271\uffab\001\002\000\010\241\uffa9\270\uffa9" +
    "\271\uffa9\001\002\000\010\241\uffaa\270\uffaa\271\uffaa\001" +
    "\002\000\u011c\016\uffc4\017\uffc4\020\uffc4\030\uffc4\031\uffc4" +
    "\032\uffc4\033\uffc4\034\uffc4\035\uffc4\036\uffc4\037\uffc4\040" +
    "\uffc4\041\uffc4\042\uffc4\043\uffc4\044\uffc4\045\uffc4\046\uffc4" +
    "\047\uffc4\050\uffc4\051\uffc4\052\uffc4\053\uffc4\054\uffc4\055" +
    "\uffc4\056\uffc4\057\uffc4\060\uffc4\061\uffc4\062\uffc4\063\uffc4" +
    "\064\uffc4\065\uffc4\066\uffc4\067\uffc4\070\uffc4\071\uffc4\072" +
    "\uffc4\073\uffc4\074\uffc4\075\uffc4\076\uffc4\077\uffc4\100\uffc4" +
    "\101\uffc4\102\uffc4\103\uffc4\104\uffc4\105\uffc4\106\uffc4\107" +
    "\uffc4\110\uffc4\111\uffc4\112\uffc4\113\uffc4\114\uffc4\115\uffc4" +
    "\116\uffc4\117\uffc4\120\uffc4\121\uffc4\122\uffc4\123\uffc4\124" +
    "\uffc4\125\uffc4\126\uffc4\127\uffc4\130\uffc4\131\uffc4\132\uffc4" +
    "\133\uffc4\134\uffc4\135\uffc4\136\uffc4\137\uffc4\140\uffc4\141" +
    "\uffc4\142\uffc4\143\uffc4\144\uffc4\145\uffc4\146\uffc4\147\uffc4" +
    "\150\uffc4\151\uffc4\152\uffc4\153\uffc4\154\uffc4\155\uffc4\156" +
    "\uffc4\157\uffc4\160\uffc4\161\uffc4\162\uffc4\163\uffc4\164\uffc4" +
    "\165\uffc4\166\uffc4\167\uffc4\170\uffc4\171\uffc4\173\uffc4\174" +
    "\uffc4\175\uffc4\176\uffc4\177\uffc4\200\uffc4\201\uffc4\202\uffc4" +
    "\203\uffc4\204\uffc4\205\uffc4\206\uffc4\207\uffc4\210\uffc4\211" +
    "\uffc4\212\uffc4\213\uffc4\214\uffc4\215\uffc4\216\uffc4\217\uffc4" +
    "\220\uffc4\221\uffc4\222\uffc4\223\uffc4\224\uffc4\225\uffc4\226" +
    "\uffc4\227\uffc4\233\uffc4\234\uffc4\236\uffc4\240\uffc4\247\uffc4" +
    "\264\uffc4\267\uffc4\271\uffc4\273\uffc4\274\uffc4\275\uffc4\001" +
    "\002\000\010\241\375\270\347\271\350\001\002\000\004" +
    "\251\u0109\001\002\000\004\251\u0108\001\002\000\u011c\016" +
    "\uffc3\017\uffc3\020\uffc3\030\uffc3\031\uffc3\032\uffc3\033\uffc3" +
    "\034\uffc3\035\uffc3\036\uffc3\037\uffc3\040\uffc3\041\uffc3\042" +
    "\uffc3\043\uffc3\044\uffc3\045\uffc3\046\uffc3\047\uffc3\050\uffc3" +
    "\051\uffc3\052\uffc3\053\uffc3\054\uffc3\055\uffc3\056\uffc3\057" +
    "\uffc3\060\uffc3\061\uffc3\062\uffc3\063\uffc3\064\uffc3\065\uffc3" +
    "\066\uffc3\067\uffc3\070\uffc3\071\uffc3\072\uffc3\073\uffc3\074" +
    "\uffc3\075\uffc3\076\uffc3\077\uffc3\100\uffc3\101\uffc3\102\uffc3" +
    "\103\uffc3\104\uffc3\105\uffc3\106\uffc3\107\uffc3\110\uffc3\111" +
    "\uffc3\112\uffc3\113\uffc3\114\uffc3\115\uffc3\116\uffc3\117\uffc3" +
    "\120\uffc3\121\uffc3\122\uffc3\123\uffc3\124\uffc3\125\uffc3\126" +
    "\uffc3\127\uffc3\130\uffc3\131\uffc3\132\uffc3\133\uffc3\134\uffc3" +
    "\135\uffc3\136\uffc3\137\uffc3\140\uffc3\141\uffc3\142\uffc3\143" +
    "\uffc3\144\uffc3\145\uffc3\146\uffc3\147\uffc3\150\uffc3\151\uffc3" +
    "\152\uffc3\153\uffc3\154\uffc3\155\uffc3\156\uffc3\157\uffc3\160" +
    "\uffc3\161\uffc3\162\uffc3\163\uffc3\164\uffc3\165\uffc3\166\uffc3" +
    "\167\uffc3\170\uffc3\171\uffc3\173\uffc3\174\uffc3\175\uffc3\176" +
    "\uffc3\177\uffc3\200\uffc3\201\uffc3\202\uffc3\203\uffc3\204\uffc3" +
    "\205\uffc3\206\uffc3\207\uffc3\210\uffc3\211\uffc3\212\uffc3\213" +
    "\uffc3\214\uffc3\215\uffc3\216\uffc3\217\uffc3\220\uffc3\221\uffc3" +
    "\222\uffc3\223\uffc3\224\uffc3\225\uffc3\226\uffc3\227\uffc3\233" +
    "\uffc3\234\uffc3\236\uffc3\240\uffc3\247\uffc3\264\uffc3\267\uffc3" +
    "\271\uffc3\273\uffc3\274\uffc3\275\uffc3\001\002\000\u011c\016" +
    "\uffc2\017\uffc2\020\uffc2\030\uffc2\031\uffc2\032\uffc2\033\uffc2" +
    "\034\uffc2\035\uffc2\036\uffc2\037\uffc2\040\uffc2\041\uffc2\042" +
    "\uffc2\043\uffc2\044\uffc2\045\uffc2\046\uffc2\047\uffc2\050\uffc2" +
    "\051\uffc2\052\uffc2\053\uffc2\054\uffc2\055\uffc2\056\uffc2\057" +
    "\uffc2\060\uffc2\061\uffc2\062\uffc2\063\uffc2\064\uffc2\065\uffc2" +
    "\066\uffc2\067\uffc2\070\uffc2\071\uffc2\072\uffc2\073\uffc2\074" +
    "\uffc2\075\uffc2\076\uffc2\077\uffc2\100\uffc2\101\uffc2\102\uffc2" +
    "\103\uffc2\104\uffc2\105\uffc2\106\uffc2\107\uffc2\110\uffc2\111" +
    "\uffc2\112\uffc2\113\uffc2\114\uffc2\115\uffc2\116\uffc2\117\uffc2" +
    "\120\uffc2\121\uffc2\122\uffc2\123\uffc2\124\uffc2\125\uffc2\126" +
    "\uffc2\127\uffc2\130\uffc2\131\uffc2\132\uffc2\133\uffc2\134\uffc2" +
    "\135\uffc2\136\uffc2\137\uffc2\140\uffc2\141\uffc2\142\uffc2\143" +
    "\uffc2\144\uffc2\145\uffc2\146\uffc2\147\uffc2\150\uffc2\151\uffc2" +
    "\152\uffc2\153\uffc2\154\uffc2\155\uffc2\156\uffc2\157\uffc2\160" +
    "\uffc2\161\uffc2\162\uffc2\163\uffc2\164\uffc2\165\uffc2\166\uffc2" +
    "\167\uffc2\170\uffc2\171\uffc2\173\uffc2\174\uffc2\175\uffc2\176" +
    "\uffc2\177\uffc2\200\uffc2\201\uffc2\202\uffc2\203\uffc2\204\uffc2" +
    "\205\uffc2\206\uffc2\207\uffc2\210\uffc2\211\uffc2\212\uffc2\213" +
    "\uffc2\214\uffc2\215\uffc2\216\uffc2\217\uffc2\220\uffc2\221\uffc2" +
    "\222\uffc2\223\uffc2\224\uffc2\225\uffc2\226\uffc2\227\uffc2\233" +
    "\uffc2\234\uffc2\236\uffc2\240\uffc2\247\uffc2\264\uffc2\267\uffc2" +
    "\271\uffc2\273\uffc2\274\uffc2\275\uffc2\001\002\000\012\242" +
    "\u011f\243\u0101\244\u0103\245\u0102\001\002\000\010\243\u0101" +
    "\244\u0103\245\u0102\001\002\000\010\241\375\270\347\271" +
    "\350\001\002\000\014\241\375\242\u011d\243\u0101\244\u0103" +
    "\245\u0102\001\002\000\014\241\375\242\u0111\243\u0101\244" +
    "\u0103\245\u0102\001\002\000\012\241\375\243\u0101\244\u0103" +
    "\245\u0102\001\002\000\012\242\u0116\243\u0101\244\u0103\245" +
    "\u0102\001\002\000\016\241\uffb9\242\uffb9\243\uffb9\244\uffb9" +
    "\245\uffb9\251\uffb9\001\002\000\012\242\uffb4\243\uffb4\244" +
    "\uffb4\245\uffb4\001\002\000\010\241\375\270\347\271\350" +
    "\001\002\000\016\241\uffa8\242\uffa8\243\uffa8\244\uffa8\245" +
    "\uffa8\251\uffa8\001\002\000\012\242\uffb5\243\uffb5\244\uffb5" +
    "\245\uffb5\001\002\000\016\241\uffb6\242\uffb6\243\uffb6\244" +
    "\uffb6\245\uffb6\251\uffb6\001\002\000\004\241\375\001\002" +
    "\000\012\242\uffb2\243\uffb2\244\uffb2\245\uffb2\001\002\000" +
    "\006\270\347\271\350\001\002\000\012\242\uffb3\243\uffb3" +
    "\244\uffb3\245\uffb3\001\002\000\016\241\uffa7\242\uffa7\243" +
    "\uffa7\244\uffa7\245\uffa7\251\uffa7\001\002\000\012\242\u011e" +
    "\243\u0101\244\u0103\245\u0102\001\002\000\016\241\uffb8\242" +
    "\uffb8\243\uffb8\244\uffb8\245\uffb8\251\uffb8\001\002\000\016" +
    "\241\uffb7\242\uffb7\243\uffb7\244\uffb7\245\uffb7\251\uffb7\001" +
    "\002\000\016\241\uffbd\242\uffbd\243\uffbd\244\uffbd\245\uffbd" +
    "\251\uffbd\001\002\000\006\270\347\271\350\001\002\000" +
    "\012\242\u0122\243\u0101\244\u0103\245\u0102\001\002\000\016" +
    "\241\uffbc\242\uffbc\243\uffbc\244\uffbc\245\uffbc\251\uffbc\001" +
    "\002\000\010\241\375\270\347\271\350\001\002\000\012" +
    "\242\u0125\243\u0101\244\u0103\245\u0102\001\002\000\016\241" +
    "\uffbb\242\uffbb\243\uffbb\244\uffbb\245\uffbb\251\uffbb\001\002" +
    "\000\004\242\u0127\001\002\000\016\241\uffba\242\uffba\243" +
    "\uffba\244\uffba\245\uffba\251\uffba\001\002\000\004\270\u012c" +
    "\001\002\000\004\270\u012a\001\002\000\004\251\u012b\001" +
    "\002\000\u011c\016\uffc8\017\uffc8\020\uffc8\030\uffc8\031\uffc8" +
    "\032\uffc8\033\uffc8\034\uffc8\035\uffc8\036\uffc8\037\uffc8\040" +
    "\uffc8\041\uffc8\042\uffc8\043\uffc8\044\uffc8\045\uffc8\046\uffc8" +
    "\047\uffc8\050\uffc8\051\uffc8\052\uffc8\053\uffc8\054\uffc8\055" +
    "\uffc8\056\uffc8\057\uffc8\060\uffc8\061\uffc8\062\uffc8\063\uffc8" +
    "\064\uffc8\065\uffc8\066\uffc8\067\uffc8\070\uffc8\071\uffc8\072" +
    "\uffc8\073\uffc8\074\uffc8\075\uffc8\076\uffc8\077\uffc8\100\uffc8" +
    "\101\uffc8\102\uffc8\103\uffc8\104\uffc8\105\uffc8\106\uffc8\107" +
    "\uffc8\110\uffc8\111\uffc8\112\uffc8\113\uffc8\114\uffc8\115\uffc8" +
    "\116\uffc8\117\uffc8\120\uffc8\121\uffc8\122\uffc8\123\uffc8\124" +
    "\uffc8\125\uffc8\126\uffc8\127\uffc8\130\uffc8\131\uffc8\132\uffc8" +
    "\133\uffc8\134\uffc8\135\uffc8\136\uffc8\137\uffc8\140\uffc8\141" +
    "\uffc8\142\uffc8\143\uffc8\144\uffc8\145\uffc8\146\uffc8\147\uffc8" +
    "\150\uffc8\151\uffc8\152\uffc8\153\uffc8\154\uffc8\155\uffc8\156" +
    "\uffc8\157\uffc8\160\uffc8\161\uffc8\162\uffc8\163\uffc8\164\uffc8" +
    "\165\uffc8\166\uffc8\167\uffc8\170\uffc8\171\uffc8\173\uffc8\174" +
    "\uffc8\175\uffc8\176\uffc8\177\uffc8\200\uffc8\201\uffc8\202\uffc8" +
    "\203\uffc8\204\uffc8\205\uffc8\206\uffc8\207\uffc8\210\uffc8\211" +
    "\uffc8\212\uffc8\213\uffc8\214\uffc8\215\uffc8\216\uffc8\217\uffc8" +
    "\220\uffc8\221\uffc8\222\uffc8\223\uffc8\224\uffc8\225\uffc8\226" +
    "\uffc8\227\uffc8\233\uffc8\234\uffc8\236\uffc8\240\uffc8\247\uffc8" +
    "\264\uffc8\267\uffc8\271\uffc8\273\uffc8\274\uffc8\275\uffc8\001" +
    "\002\000\004\251\u012d\001\002\000\u011c\016\uffc7\017\uffc7" +
    "\020\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034\uffc7\035" +
    "\uffc7\036\uffc7\037\uffc7\040\uffc7\041\uffc7\042\uffc7\043\uffc7" +
    "\044\uffc7\045\uffc7\046\uffc7\047\uffc7\050\uffc7\051\uffc7\052" +
    "\uffc7\053\uffc7\054\uffc7\055\uffc7\056\uffc7\057\uffc7\060\uffc7" +
    "\061\uffc7\062\uffc7\063\uffc7\064\uffc7\065\uffc7\066\uffc7\067" +
    "\uffc7\070\uffc7\071\uffc7\072\uffc7\073\uffc7\074\uffc7\075\uffc7" +
    "\076\uffc7\077\uffc7\100\uffc7\101\uffc7\102\uffc7\103\uffc7\104" +
    "\uffc7\105\uffc7\106\uffc7\107\uffc7\110\uffc7\111\uffc7\112\uffc7" +
    "\113\uffc7\114\uffc7\115\uffc7\116\uffc7\117\uffc7\120\uffc7\121" +
    "\uffc7\122\uffc7\123\uffc7\124\uffc7\125\uffc7\126\uffc7\127\uffc7" +
    "\130\uffc7\131\uffc7\132\uffc7\133\uffc7\134\uffc7\135\uffc7\136" +
    "\uffc7\137\uffc7\140\uffc7\141\uffc7\142\uffc7\143\uffc7\144\uffc7" +
    "\145\uffc7\146\uffc7\147\uffc7\150\uffc7\151\uffc7\152\uffc7\153" +
    "\uffc7\154\uffc7\155\uffc7\156\uffc7\157\uffc7\160\uffc7\161\uffc7" +
    "\162\uffc7\163\uffc7\164\uffc7\165\uffc7\166\uffc7\167\uffc7\170" +
    "\uffc7\171\uffc7\173\uffc7\174\uffc7\175\uffc7\176\uffc7\177\uffc7" +
    "\200\uffc7\201\uffc7\202\uffc7\203\uffc7\204\uffc7\205\uffc7\206" +
    "\uffc7\207\uffc7\210\uffc7\211\uffc7\212\uffc7\213\uffc7\214\uffc7" +
    "\215\uffc7\216\uffc7\217\uffc7\220\uffc7\221\uffc7\222\uffc7\223" +
    "\uffc7\224\uffc7\225\uffc7\226\uffc7\227\uffc7\233\uffc7\234\uffc7" +
    "\236\uffc7\240\uffc7\247\uffc7\264\uffc7\267\uffc7\271\uffc7\273" +
    "\uffc7\274\uffc7\275\uffc7\001\002\000\006\270\347\271\350" +
    "\001\002\000\012\243\u0101\244\u0103\245\u0102\251\u0132\001" +
    "\002\000\006\270\347\271\350\001\002\000\012\243\u0101" +
    "\244\u0103\245\u0102\251\u0133\001\002\000\u011c\016\uffc6\017" +
    "\uffc6\020\uffc6\030\uffc6\031\uffc6\032\uffc6\033\uffc6\034\uffc6" +
    "\035\uffc6\036\uffc6\037\uffc6\040\uffc6\041\uffc6\042\uffc6\043" +
    "\uffc6\044\uffc6\045\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6" +
    "\052\uffc6\053\uffc6\054\uffc6\055\uffc6\056\uffc6\057\uffc6\060" +
    "\uffc6\061\uffc6\062\uffc6\063\uffc6\064\uffc6\065\uffc6\066\uffc6" +
    "\067\uffc6\070\uffc6\071\uffc6\072\uffc6\073\uffc6\074\uffc6\075" +
    "\uffc6\076\uffc6\077\uffc6\100\uffc6\101\uffc6\102\uffc6\103\uffc6" +
    "\104\uffc6\105\uffc6\106\uffc6\107\uffc6\110\uffc6\111\uffc6\112" +
    "\uffc6\113\uffc6\114\uffc6\115\uffc6\116\uffc6\117\uffc6\120\uffc6" +
    "\121\uffc6\122\uffc6\123\uffc6\124\uffc6\125\uffc6\126\uffc6\127" +
    "\uffc6\130\uffc6\131\uffc6\132\uffc6\133\uffc6\134\uffc6\135\uffc6" +
    "\136\uffc6\137\uffc6\140\uffc6\141\uffc6\142\uffc6\143\uffc6\144" +
    "\uffc6\145\uffc6\146\uffc6\147\uffc6\150\uffc6\151\uffc6\152\uffc6" +
    "\153\uffc6\154\uffc6\155\uffc6\156\uffc6\157\uffc6\160\uffc6\161" +
    "\uffc6\162\uffc6\163\uffc6\164\uffc6\165\uffc6\166\uffc6\167\uffc6" +
    "\170\uffc6\171\uffc6\173\uffc6\174\uffc6\175\uffc6\176\uffc6\177" +
    "\uffc6\200\uffc6\201\uffc6\202\uffc6\203\uffc6\204\uffc6\205\uffc6" +
    "\206\uffc6\207\uffc6\210\uffc6\211\uffc6\212\uffc6\213\uffc6\214" +
    "\uffc6\215\uffc6\216\uffc6\217\uffc6\220\uffc6\221\uffc6\222\uffc6" +
    "\223\uffc6\224\uffc6\225\uffc6\226\uffc6\227\uffc6\233\uffc6\234" +
    "\uffc6\236\uffc6\240\uffc6\247\uffc6\264\uffc6\267\uffc6\271\uffc6" +
    "\273\uffc6\274\uffc6\275\uffc6\001\002\000\u011c\016\uffc5\017" +
    "\uffc5\020\uffc5\030\uffc5\031\uffc5\032\uffc5\033\uffc5\034\uffc5" +
    "\035\uffc5\036\uffc5\037\uffc5\040\uffc5\041\uffc5\042\uffc5\043" +
    "\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5\050\uffc5\051\uffc5" +
    "\052\uffc5\053\uffc5\054\uffc5\055\uffc5\056\uffc5\057\uffc5\060" +
    "\uffc5\061\uffc5\062\uffc5\063\uffc5\064\uffc5\065\uffc5\066\uffc5" +
    "\067\uffc5\070\uffc5\071\uffc5\072\uffc5\073\uffc5\074\uffc5\075" +
    "\uffc5\076\uffc5\077\uffc5\100\uffc5\101\uffc5\102\uffc5\103\uffc5" +
    "\104\uffc5\105\uffc5\106\uffc5\107\uffc5\110\uffc5\111\uffc5\112" +
    "\uffc5\113\uffc5\114\uffc5\115\uffc5\116\uffc5\117\uffc5\120\uffc5" +
    "\121\uffc5\122\uffc5\123\uffc5\124\uffc5\125\uffc5\126\uffc5\127" +
    "\uffc5\130\uffc5\131\uffc5\132\uffc5\133\uffc5\134\uffc5\135\uffc5" +
    "\136\uffc5\137\uffc5\140\uffc5\141\uffc5\142\uffc5\143\uffc5\144" +
    "\uffc5\145\uffc5\146\uffc5\147\uffc5\150\uffc5\151\uffc5\152\uffc5" +
    "\153\uffc5\154\uffc5\155\uffc5\156\uffc5\157\uffc5\160\uffc5\161" +
    "\uffc5\162\uffc5\163\uffc5\164\uffc5\165\uffc5\166\uffc5\167\uffc5" +
    "\170\uffc5\171\uffc5\173\uffc5\174\uffc5\175\uffc5\176\uffc5\177" +
    "\uffc5\200\uffc5\201\uffc5\202\uffc5\203\uffc5\204\uffc5\205\uffc5" +
    "\206\uffc5\207\uffc5\210\uffc5\211\uffc5\212\uffc5\213\uffc5\214" +
    "\uffc5\215\uffc5\216\uffc5\217\uffc5\220\uffc5\221\uffc5\222\uffc5" +
    "\223\uffc5\224\uffc5\225\uffc5\226\uffc5\227\uffc5\233\uffc5\234" +
    "\uffc5\236\uffc5\240\uffc5\247\uffc5\264\uffc5\267\uffc5\271\uffc5" +
    "\273\uffc5\274\uffc5\275\uffc5\001\002\000\u011c\016\uffe3\017" +
    "\uffe3\020\uffe3\030\uffe3\031\uffe3\032\uffe3\033\uffe3\034\uffe3" +
    "\035\uffe3\036\uffe3\037\uffe3\040\uffe3\041\uffe3\042\uffe3\043" +
    "\uffe3\044\uffe3\045\uffe3\046\uffe3\047\uffe3\050\uffe3\051\uffe3" +
    "\052\uffe3\053\uffe3\054\uffe3\055\uffe3\056\uffe3\057\uffe3\060" +
    "\uffe3\061\uffe3\062\uffe3\063\uffe3\064\uffe3\065\uffe3\066\uffe3" +
    "\067\uffe3\070\uffe3\071\uffe3\072\uffe3\073\uffe3\074\uffe3\075" +
    "\uffe3\076\uffe3\077\uffe3\100\uffe3\101\uffe3\102\uffe3\103\uffe3" +
    "\104\uffe3\105\uffe3\106\uffe3\107\uffe3\110\uffe3\111\uffe3\112" +
    "\uffe3\113\uffe3\114\uffe3\115\uffe3\116\uffe3\117\uffe3\120\uffe3" +
    "\121\uffe3\122\uffe3\123\uffe3\124\uffe3\125\uffe3\126\uffe3\127" +
    "\uffe3\130\uffe3\131\uffe3\132\uffe3\133\uffe3\134\uffe3\135\uffe3" +
    "\136\uffe3\137\uffe3\140\uffe3\141\uffe3\142\uffe3\143\uffe3\144" +
    "\uffe3\145\uffe3\146\uffe3\147\uffe3\150\uffe3\151\uffe3\152\uffe3" +
    "\153\uffe3\154\uffe3\155\uffe3\156\uffe3\157\uffe3\160\uffe3\161" +
    "\uffe3\162\uffe3\163\uffe3\164\uffe3\165\uffe3\166\uffe3\167\uffe3" +
    "\170\uffe3\171\uffe3\173\uffe3\174\uffe3\175\uffe3\176\uffe3\177" +
    "\uffe3\200\uffe3\201\uffe3\202\uffe3\203\uffe3\204\uffe3\205\uffe3" +
    "\206\uffe3\207\uffe3\210\uffe3\211\uffe3\212\uffe3\213\uffe3\214" +
    "\uffe3\215\uffe3\216\uffe3\217\uffe3\220\uffe3\221\uffe3\222\uffe3" +
    "\223\uffe3\224\uffe3\225\uffe3\226\uffe3\227\uffe3\233\uffe3\234" +
    "\uffe3\236\uffe3\240\uffe3\247\uffe3\264\uffe3\267\uffe3\271\uffe3" +
    "\273\uffe3\274\uffe3\275\uffe3\001\002\000\004\251\u0136\001" +
    "\002\000\u011c\016\uffd8\017\uffd8\020\uffd8\030\uffd8\031\uffd8" +
    "\032\uffd8\033\uffd8\034\uffd8\035\uffd8\036\uffd8\037\uffd8\040" +
    "\uffd8\041\uffd8\042\uffd8\043\uffd8\044\uffd8\045\uffd8\046\uffd8" +
    "\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8\054\uffd8\055" +
    "\uffd8\056\uffd8\057\uffd8\060\uffd8\061\uffd8\062\uffd8\063\uffd8" +
    "\064\uffd8\065\uffd8\066\uffd8\067\uffd8\070\uffd8\071\uffd8\072" +
    "\uffd8\073\uffd8\074\uffd8\075\uffd8\076\uffd8\077\uffd8\100\uffd8" +
    "\101\uffd8\102\uffd8\103\uffd8\104\uffd8\105\uffd8\106\uffd8\107" +
    "\uffd8\110\uffd8\111\uffd8\112\uffd8\113\uffd8\114\uffd8\115\uffd8" +
    "\116\uffd8\117\uffd8\120\uffd8\121\uffd8\122\uffd8\123\uffd8\124" +
    "\uffd8\125\uffd8\126\uffd8\127\uffd8\130\uffd8\131\uffd8\132\uffd8" +
    "\133\uffd8\134\uffd8\135\uffd8\136\uffd8\137\uffd8\140\uffd8\141" +
    "\uffd8\142\uffd8\143\uffd8\144\uffd8\145\uffd8\146\uffd8\147\uffd8" +
    "\150\uffd8\151\uffd8\152\uffd8\153\uffd8\154\uffd8\155\uffd8\156" +
    "\uffd8\157\uffd8\160\uffd8\161\uffd8\162\uffd8\163\uffd8\164\uffd8" +
    "\165\uffd8\166\uffd8\167\uffd8\170\uffd8\171\uffd8\173\uffd8\174" +
    "\uffd8\175\uffd8\176\uffd8\177\uffd8\200\uffd8\201\uffd8\202\uffd8" +
    "\203\uffd8\204\uffd8\205\uffd8\206\uffd8\207\uffd8\210\uffd8\211" +
    "\uffd8\212\uffd8\213\uffd8\214\uffd8\215\uffd8\216\uffd8\217\uffd8" +
    "\220\uffd8\221\uffd8\222\uffd8\223\uffd8\224\uffd8\225\uffd8\226" +
    "\uffd8\227\uffd8\233\uffd8\234\uffd8\236\uffd8\240\uffd8\247\uffd8" +
    "\264\uffd8\267\uffd8\271\uffd8\273\uffd8\274\uffd8\275\uffd8\001" +
    "\002\000\004\270\u0138\001\002\000\004\247\u0139\001\002" +
    "\000\004\251\u013a\001\002\000\u011c\016\uffdb\017\uffdb\020" +
    "\uffdb\030\uffdb\031\uffdb\032\uffdb\033\uffdb\034\uffdb\035\uffdb" +
    "\036\uffdb\037\uffdb\040\uffdb\041\uffdb\042\uffdb\043\uffdb\044" +
    "\uffdb\045\uffdb\046\uffdb\047\uffdb\050\uffdb\051\uffdb\052\uffdb" +
    "\053\uffdb\054\uffdb\055\uffdb\056\uffdb\057\uffdb\060\uffdb\061" +
    "\uffdb\062\uffdb\063\uffdb\064\uffdb\065\uffdb\066\uffdb\067\uffdb" +
    "\070\uffdb\071\uffdb\072\uffdb\073\uffdb\074\uffdb\075\uffdb\076" +
    "\uffdb\077\uffdb\100\uffdb\101\uffdb\102\uffdb\103\uffdb\104\uffdb" +
    "\105\uffdb\106\uffdb\107\uffdb\110\uffdb\111\uffdb\112\uffdb\113" +
    "\uffdb\114\uffdb\115\uffdb\116\uffdb\117\uffdb\120\uffdb\121\uffdb" +
    "\122\uffdb\123\uffdb\124\uffdb\125\uffdb\126\uffdb\127\uffdb\130" +
    "\uffdb\131\uffdb\132\uffdb\133\uffdb\134\uffdb\135\uffdb\136\uffdb" +
    "\137\uffdb\140\uffdb\141\uffdb\142\uffdb\143\uffdb\144\uffdb\145" +
    "\uffdb\146\uffdb\147\uffdb\150\uffdb\151\uffdb\152\uffdb\153\uffdb" +
    "\154\uffdb\155\uffdb\156\uffdb\157\uffdb\160\uffdb\161\uffdb\162" +
    "\uffdb\163\uffdb\164\uffdb\165\uffdb\166\uffdb\167\uffdb\170\uffdb" +
    "\171\uffdb\173\uffdb\174\uffdb\175\uffdb\176\uffdb\177\uffdb\200" +
    "\uffdb\201\uffdb\202\uffdb\203\uffdb\204\uffdb\205\uffdb\206\uffdb" +
    "\207\uffdb\210\uffdb\211\uffdb\212\uffdb\213\uffdb\214\uffdb\215" +
    "\uffdb\216\uffdb\217\uffdb\220\uffdb\221\uffdb\222\uffdb\223\uffdb" +
    "\224\uffdb\225\uffdb\226\uffdb\227\uffdb\233\uffdb\234\uffdb\236" +
    "\uffdb\240\uffdb\247\uffdb\264\uffdb\267\uffdb\271\uffdb\273\uffdb" +
    "\274\uffdb\275\uffdb\001\002\000\014\233\uffe5\234\uffe5\240" +
    "\uffe5\247\uffe5\274\uffe5\001\002\000\u011c\016\uffd6\017\uffd6" +
    "\020\uffd6\030\uffd6\031\uffd6\032\uffd6\033\uffd6\034\uffd6\035" +
    "\uffd6\036\uffd6\037\uffd6\040\uffd6\041\uffd6\042\uffd6\043\uffd6" +
    "\044\uffd6\045\uffd6\046\uffd6\047\uffd6\050\uffd6\051\uffd6\052" +
    "\uffd6\053\uffd6\054\uffd6\055\uffd6\056\uffd6\057\uffd6\060\uffd6" +
    "\061\uffd6\062\uffd6\063\uffd6\064\uffd6\065\uffd6\066\uffd6\067" +
    "\uffd6\070\uffd6\071\uffd6\072\uffd6\073\uffd6\074\uffd6\075\uffd6" +
    "\076\uffd6\077\uffd6\100\uffd6\101\uffd6\102\uffd6\103\uffd6\104" +
    "\uffd6\105\uffd6\106\uffd6\107\uffd6\110\uffd6\111\uffd6\112\uffd6" +
    "\113\uffd6\114\uffd6\115\uffd6\116\uffd6\117\uffd6\120\uffd6\121" +
    "\uffd6\122\uffd6\123\uffd6\124\uffd6\125\uffd6\126\uffd6\127\uffd6" +
    "\130\uffd6\131\uffd6\132\uffd6\133\uffd6\134\uffd6\135\uffd6\136" +
    "\uffd6\137\uffd6\140\uffd6\141\uffd6\142\uffd6\143\uffd6\144\uffd6" +
    "\145\uffd6\146\uffd6\147\uffd6\150\uffd6\151\uffd6\152\uffd6\153" +
    "\uffd6\154\uffd6\155\uffd6\156\uffd6\157\uffd6\160\uffd6\161\uffd6" +
    "\162\uffd6\163\uffd6\164\uffd6\165\uffd6\166\uffd6\167\uffd6\170" +
    "\uffd6\171\uffd6\173\uffd6\174\uffd6\175\uffd6\176\uffd6\177\uffd6" +
    "\200\uffd6\201\uffd6\202\uffd6\203\uffd6\204\uffd6\205\uffd6\206" +
    "\uffd6\207\uffd6\210\uffd6\211\uffd6\212\uffd6\213\uffd6\214\uffd6" +
    "\215\uffd6\216\uffd6\217\uffd6\220\uffd6\221\uffd6\222\uffd6\223" +
    "\uffd6\224\uffd6\225\uffd6\226\uffd6\227\uffd6\233\uffd6\234\uffd6" +
    "\236\uffd6\240\uffd6\247\uffd6\264\uffd6\267\uffd6\271\uffd6\273" +
    "\uffd6\274\uffd6\275\uffd6\001\002\000\150\030\256\031\255" +
    "\032\254\033\253\034\252\110\245\111\243\112\322\113" +
    "\320\114\316\115\313\116\312\117\311\120\303\121\300" +
    "\122\277\123\276\124\275\125\274\126\273\127\271\130" +
    "\270\131\267\132\266\133\263\134\262\135\261\136\260" +
    "\137\257\140\251\141\250\142\246\143\244\144\323\145" +
    "\317\146\315\147\314\150\305\151\304\152\302\153\301" +
    "\205\272\206\306\207\310\210\265\211\247\212\307\213" +
    "\264\214\242\270\347\271\350\001\002\000\004\242\u0153" +
    "\001\002\000\004\242\u0140\001\002\000\004\237\u0141\001" +
    "\002\000\006\240\u0143\274\u0144\001\002\000\010\234\u014a" +
    "\240\u014b\274\u014c\001\002\000\004\250\u0148\001\002\000" +
    "\006\270\347\271\350\001\002\000\004\250\u0146\001\002" +
    "\000\u0118\016\144\017\166\020\071\030\201\031\200\032" +
    "\175\033\174\034\171\035\031\036\030\037\026\040\025" +
    "\041\024\042\167\043\207\044\163\045\162\046\161\047" +
    "\156\050\155\051\153\052\152\053\146\054\124\055\123" +
    "\056\122\057\121\060\120\061\117\062\115\063\114\064" +
    "\074\065\073\066\072\067\070\070\067\071\066\072\065" +
    "\073\063\074\050\075\047\076\046\077\044\100\042\101" +
    "\041\102\036\103\035\104\225\105\223\106\220\107\217" +
    "\110\204\111\203\112\202\113\177\114\176\115\173\116" +
    "\172\117\170\120\147\121\145\122\142\123\141\124\140" +
    "\125\137\126\134\127\133\130\113\131\112\132\111\133" +
    "\110\134\107\135\106\136\105\137\104\140\064\141\062" +
    "\142\061\143\057\144\056\145\055\146\054\147\053\150" +
    "\034\151\033\152\032\153\027\154\231\155\230\156\226" +
    "\157\224\160\222\161\221\162\216\163\215\164\132\165" +
    "\131\166\130\167\127\170\126\171\125\173\233\174\077" +
    "\175\214\176\116\177\234\200\037\201\040\202\043\203" +
    "\052\204\143\205\210\206\205\207\157\210\151\211\232" +
    "\212\154\213\150\214\227\215\075\216\076\217\100\220" +
    "\101\221\102\222\103\223\060\224\211\225\135\226\212" +
    "\227\213\234\uffad\236\160\240\uffad\264\011\267\164\271" +
    "\206\273\051\274\uffad\275\136\001\002\000\010\234\uffb1" +
    "\240\uffb1\274\uffb1\001\002\000\u0112\016\144\017\166\020" +
    "\071\030\201\031\200\032\175\033\174\034\171\035\031" +
    "\036\030\037\026\040\025\041\024\042\167\043\207\044" +
    "\163\045\162\046\161\047\156\050\155\051\153\052\152" +
    "\053\146\054\124\055\123\056\122\057\121\060\120\061" +
    "\117\062\115\063\114\064\074\065\073\066\072\067\070" +
    "\070\067\071\066\072\065\073\063\074\050\075\047\076" +
    "\046\077\044\100\042\101\041\102\036\103\035\104\225" +
    "\105\223\106\220\107\217\110\204\111\203\112\202\113" +
    "\177\114\176\115\173\116\172\117\170\120\147\121\145" +
    "\122\142\123\141\124\140\125\137\126\134\127\133\130" +
    "\113\131\112\132\111\133\110\134\107\135\106\136\105" +
    "\137\104\140\064\141\062\142\061\143\057\144\056\145" +
    "\055\146\054\147\053\150\034\151\033\152\032\153\027" +
    "\154\231\155\230\156\226\157\224\160\222\161\221\162" +
    "\216\163\215\164\132\165\131\166\130\167\127\170\126" +
    "\171\125\173\233\174\077\175\214\176\116\177\234\200" +
    "\037\201\040\202\043\203\052\204\143\205\210\206\205" +
    "\207\157\210\151\211\232\212\154\213\150\214\227\215" +
    "\075\216\076\217\100\220\101\221\102\222\103\223\060" +
    "\224\211\225\135\226\212\227\213\236\160\264\011\267" +
    "\164\271\206\273\051\275\136\001\002\000\010\234\uffb0" +
    "\240\uffb0\274\uffb0\001\002\000\004\236\u0152\001\002\000" +
    "\004\250\u0150\001\002\000\006\270\347\271\350\001\002" +
    "\000\004\250\u014e\001\002\000\u0118\016\144\017\166\020" +
    "\071\030\201\031\200\032\175\033\174\034\171\035\031" +
    "\036\030\037\026\040\025\041\024\042\167\043\207\044" +
    "\163\045\162\046\161\047\156\050\155\051\153\052\152" +
    "\053\146\054\124\055\123\056\122\057\121\060\120\061" +
    "\117\062\115\063\114\064\074\065\073\066\072\067\070" +
    "\070\067\071\066\072\065\073\063\074\050\075\047\076" +
    "\046\077\044\100\042\101\041\102\036\103\035\104\225" +
    "\105\223\106\220\107\217\110\204\111\203\112\202\113" +
    "\177\114\176\115\173\116\172\117\170\120\147\121\145" +
    "\122\142\123\141\124\140\125\137\126\134\127\133\130" +
    "\113\131\112\132\111\133\110\134\107\135\106\136\105" +
    "\137\104\140\064\141\062\142\061\143\057\144\056\145" +
    "\055\146\054\147\053\150\034\151\033\152\032\153\027" +
    "\154\231\155\230\156\226\157\224\160\222\161\221\162" +
    "\216\163\215\164\132\165\131\166\130\167\127\170\126" +
    "\171\125\173\233\174\077\175\214\176\116\177\234\200" +
    "\037\201\040\202\043\203\052\204\143\205\210\206\205" +
    "\207\157\210\151\211\232\212\154\213\150\214\227\215" +
    "\075\216\076\217\100\220\101\221\102\222\103\223\060" +
    "\224\211\225\135\226\212\227\213\234\uffac\236\160\240" +
    "\uffac\264\011\267\164\271\206\273\051\274\uffac\275\136" +
    "\001\002\000\010\234\uffaf\240\uffaf\274\uffaf\001\002\000" +
    "\u0112\016\144\017\166\020\071\030\201\031\200\032\175" +
    "\033\174\034\171\035\031\036\030\037\026\040\025\041" +
    "\024\042\167\043\207\044\163\045\162\046\161\047\156" +
    "\050\155\051\153\052\152\053\146\054\124\055\123\056" +
    "\122\057\121\060\120\061\117\062\115\063\114\064\074" +
    "\065\073\066\072\067\070\070\067\071\066\072\065\073" +
    "\063\074\050\075\047\076\046\077\044\100\042\101\041" +
    "\102\036\103\035\104\225\105\223\106\220\107\217\110" +
    "\204\111\203\112\202\113\177\114\176\115\173\116\172" +
    "\117\170\120\147\121\145\122\142\123\141\124\140\125" +
    "\137\126\134\127\133\130\113\131\112\132\111\133\110" +
    "\134\107\135\106\136\105\137\104\140\064\141\062\142" +
    "\061\143\057\144\056\145\055\146\054\147\053\150\034" +
    "\151\033\152\032\153\027\154\231\155\230\156\226\157" +
    "\224\160\222\161\221\162\216\163\215\164\132\165\131" +
    "\166\130\167\127\170\126\171\125\173\233\174\077\175" +
    "\214\176\116\177\234\200\037\201\040\202\043\203\052" +
    "\204\143\205\210\206\205\207\157\210\151\211\232\212" +
    "\154\213\150\214\227\215\075\216\076\217\100\220\101" +
    "\221\102\222\103\223\060\224\211\225\135\226\212\227" +
    "\213\236\160\264\011\267\164\271\206\273\051\275\136" +
    "\001\002\000\010\234\uffae\240\uffae\274\uffae\001\002\000" +
    "\u011c\016\uffcd\017\uffcd\020\uffcd\030\uffcd\031\uffcd\032\uffcd" +
    "\033\uffcd\034\uffcd\035\uffcd\036\uffcd\037\uffcd\040\uffcd\041" +
    "\uffcd\042\uffcd\043\uffcd\044\uffcd\045\uffcd\046\uffcd\047\uffcd" +
    "\050\uffcd\051\uffcd\052\uffcd\053\uffcd\054\uffcd\055\uffcd\056" +
    "\uffcd\057\uffcd\060\uffcd\061\uffcd\062\uffcd\063\uffcd\064\uffcd" +
    "\065\uffcd\066\uffcd\067\uffcd\070\uffcd\071\uffcd\072\uffcd\073" +
    "\uffcd\074\uffcd\075\uffcd\076\uffcd\077\uffcd\100\uffcd\101\uffcd" +
    "\102\uffcd\103\uffcd\104\uffcd\105\uffcd\106\uffcd\107\uffcd\110" +
    "\uffcd\111\uffcd\112\uffcd\113\uffcd\114\uffcd\115\uffcd\116\uffcd" +
    "\117\uffcd\120\uffcd\121\uffcd\122\uffcd\123\uffcd\124\uffcd\125" +
    "\uffcd\126\uffcd\127\uffcd\130\uffcd\131\uffcd\132\uffcd\133\uffcd" +
    "\134\uffcd\135\uffcd\136\uffcd\137\uffcd\140\uffcd\141\uffcd\142" +
    "\uffcd\143\uffcd\144\uffcd\145\uffcd\146\uffcd\147\uffcd\150\uffcd" +
    "\151\uffcd\152\uffcd\153\uffcd\154\uffcd\155\uffcd\156\uffcd\157" +
    "\uffcd\160\uffcd\161\uffcd\162\uffcd\163\uffcd\164\uffcd\165\uffcd" +
    "\166\uffcd\167\uffcd\170\uffcd\171\uffcd\173\uffcd\174\uffcd\175" +
    "\uffcd\176\uffcd\177\uffcd\200\uffcd\201\uffcd\202\uffcd\203\uffcd" +
    "\204\uffcd\205\uffcd\206\uffcd\207\uffcd\210\uffcd\211\uffcd\212" +
    "\uffcd\213\uffcd\214\uffcd\215\uffcd\216\uffcd\217\uffcd\220\uffcd" +
    "\221\uffcd\222\uffcd\223\uffcd\224\uffcd\225\uffcd\226\uffcd\227" +
    "\uffcd\233\uffcd\234\uffcd\236\uffcd\240\uffcd\247\uffcd\264\uffcd" +
    "\267\uffcd\271\uffcd\273\uffcd\274\uffcd\275\uffcd\001\002\000" +
    "\004\237\u0154\001\002\000\006\240\u0143\274\u0144\001\002" +
    "\000\010\234\u0156\240\u014b\274\u014c\001\002\000\004\236" +
    "\u0157\001\002\000\u011c\016\uffce\017\uffce\020\uffce\030\uffce" +
    "\031\uffce\032\uffce\033\uffce\034\uffce\035\uffce\036\uffce\037" +
    "\uffce\040\uffce\041\uffce\042\uffce\043\uffce\044\uffce\045\uffce" +
    "\046\uffce\047\uffce\050\uffce\051\uffce\052\uffce\053\uffce\054" +
    "\uffce\055\uffce\056\uffce\057\uffce\060\uffce\061\uffce\062\uffce" +
    "\063\uffce\064\uffce\065\uffce\066\uffce\067\uffce\070\uffce\071" +
    "\uffce\072\uffce\073\uffce\074\uffce\075\uffce\076\uffce\077\uffce" +
    "\100\uffce\101\uffce\102\uffce\103\uffce\104\uffce\105\uffce\106" +
    "\uffce\107\uffce\110\uffce\111\uffce\112\uffce\113\uffce\114\uffce" +
    "\115\uffce\116\uffce\117\uffce\120\uffce\121\uffce\122\uffce\123" +
    "\uffce\124\uffce\125\uffce\126\uffce\127\uffce\130\uffce\131\uffce" +
    "\132\uffce\133\uffce\134\uffce\135\uffce\136\uffce\137\uffce\140" +
    "\uffce\141\uffce\142\uffce\143\uffce\144\uffce\145\uffce\146\uffce" +
    "\147\uffce\150\uffce\151\uffce\152\uffce\153\uffce\154\uffce\155" +
    "\uffce\156\uffce\157\uffce\160\uffce\161\uffce\162\uffce\163\uffce" +
    "\164\uffce\165\uffce\166\uffce\167\uffce\170\uffce\171\uffce\173" +
    "\uffce\174\uffce\175\uffce\176\uffce\177\uffce\200\uffce\201\uffce" +
    "\202\uffce\203\uffce\204\uffce\205\uffce\206\uffce\207\uffce\210" +
    "\uffce\211\uffce\212\uffce\213\uffce\214\uffce\215\uffce\216\uffce" +
    "\217\uffce\220\uffce\221\uffce\222\uffce\223\uffce\224\uffce\225" +
    "\uffce\226\uffce\227\uffce\233\uffce\234\uffce\236\uffce\240\uffce" +
    "\247\uffce\264\uffce\267\uffce\271\uffce\273\uffce\274\uffce\275" +
    "\uffce\001\002\000\004\270\u0159\001\002\000\004\242\u015a" +
    "\001\002\000\004\251\u015b\001\002\000\u011c\016\uffdc\017" +
    "\uffdc\020\uffdc\030\uffdc\031\uffdc\032\uffdc\033\uffdc\034\uffdc" +
    "\035\uffdc\036\uffdc\037\uffdc\040\uffdc\041\uffdc\042\uffdc\043" +
    "\uffdc\044\uffdc\045\uffdc\046\uffdc\047\uffdc\050\uffdc\051\uffdc" +
    "\052\uffdc\053\uffdc\054\uffdc\055\uffdc\056\uffdc\057\uffdc\060" +
    "\uffdc\061\uffdc\062\uffdc\063\uffdc\064\uffdc\065\uffdc\066\uffdc" +
    "\067\uffdc\070\uffdc\071\uffdc\072\uffdc\073\uffdc\074\uffdc\075" +
    "\uffdc\076\uffdc\077\uffdc\100\uffdc\101\uffdc\102\uffdc\103\uffdc" +
    "\104\uffdc\105\uffdc\106\uffdc\107\uffdc\110\uffdc\111\uffdc\112" +
    "\uffdc\113\uffdc\114\uffdc\115\uffdc\116\uffdc\117\uffdc\120\uffdc" +
    "\121\uffdc\122\uffdc\123\uffdc\124\uffdc\125\uffdc\126\uffdc\127" +
    "\uffdc\130\uffdc\131\uffdc\132\uffdc\133\uffdc\134\uffdc\135\uffdc" +
    "\136\uffdc\137\uffdc\140\uffdc\141\uffdc\142\uffdc\143\uffdc\144" +
    "\uffdc\145\uffdc\146\uffdc\147\uffdc\150\uffdc\151\uffdc\152\uffdc" +
    "\153\uffdc\154\uffdc\155\uffdc\156\uffdc\157\uffdc\160\uffdc\161" +
    "\uffdc\162\uffdc\163\uffdc\164\uffdc\165\uffdc\166\uffdc\167\uffdc" +
    "\170\uffdc\171\uffdc\173\uffdc\174\uffdc\175\uffdc\176\uffdc\177" +
    "\uffdc\200\uffdc\201\uffdc\202\uffdc\203\uffdc\204\uffdc\205\uffdc" +
    "\206\uffdc\207\uffdc\210\uffdc\211\uffdc\212\uffdc\213\uffdc\214" +
    "\uffdc\215\uffdc\216\uffdc\217\uffdc\220\uffdc\221\uffdc\222\uffdc" +
    "\223\uffdc\224\uffdc\225\uffdc\226\uffdc\227\uffdc\233\uffdc\234" +
    "\uffdc\236\uffdc\240\uffdc\247\uffdc\264\uffdc\267\uffdc\271\uffdc" +
    "\273\uffdc\274\uffdc\275\uffdc\001\002\000\154\030\256\031" +
    "\255\032\254\033\253\034\252\110\245\111\243\112\322" +
    "\113\320\114\316\115\313\116\312\117\311\120\303\121" +
    "\300\122\277\123\276\124\275\125\274\126\273\127\271" +
    "\130\270\131\267\132\266\133\263\134\262\135\261\136" +
    "\260\137\257\140\251\141\250\142\246\143\244\144\323" +
    "\145\317\146\315\147\314\150\305\151\304\152\302\153" +
    "\301\205\272\206\306\207\310\210\265\211\247\212\307" +
    "\213\264\214\242\270\u015d\271\u015f\276\u0161\277\u0163\001" +
    "\002\000\026\242\uffa5\253\uffa1\255\uffa1\256\uffa1\257\uffa1" +
    "\260\uffa1\261\uffa1\262\uffa1\263\uffa1\271\357\001\002\000" +
    "\004\242\u017a\001\002\000\026\242\uffa6\253\uffa2\255\uffa2" +
    "\256\uffa2\257\uffa2\260\uffa2\261\uffa2\262\uffa2\263\uffa2\270" +
    "\356\001\002\000\004\242\u0175\001\002\000\024\242\uff9f" +
    "\253\uff9f\255\uff9f\256\uff9f\257\uff9f\260\uff9f\261\uff9f\262" +
    "\uff9f\263\uff9f\001\002\000\022\253\u016a\255\u0169\256\u0167" +
    "\257\u0168\260\u0166\261\u0165\262\u016d\263\u016b\001\002\000" +
    "\024\242\uff9e\253\uff9e\255\uff9e\256\uff9e\257\uff9e\260\uff9e" +
    "\261\uff9e\262\uff9e\263\uff9e\001\002\000\024\242\uffa0\253" +
    "\uffa0\255\uffa0\256\uffa0\257\uffa0\260\uffa0\261\uffa0\262\uffa0" +
    "\263\uffa0\001\002\000\154\030\uff92\031\uff92\032\uff92\033" +
    "\uff92\034\uff92\110\uff92\111\uff92\112\uff92\113\uff92\114\uff92" +
    "\115\uff92\116\uff92\117\uff92\120\uff92\121\uff92\122\uff92\123" +
    "\uff92\124\uff92\125\uff92\126\uff92\127\uff92\130\uff92\131\uff92" +
    "\132\uff92\133\uff92\134\uff92\135\uff92\136\uff92\137\uff92\140" +
    "\uff92\141\uff92\142\uff92\143\uff92\144\uff92\145\uff92\146\uff92" +
    "\147\uff92\150\uff92\151\uff92\152\uff92\153\uff92\205\uff92\206" +
    "\uff92\207\uff92\210\uff92\211\uff92\212\uff92\213\uff92\214\uff92" +
    "\270\uff92\271\uff92\276\uff92\277\uff92\001\002\000\154\030" +
    "\uff97\031\uff97\032\uff97\033\uff97\034\uff97\110\uff97\111\uff97" +
    "\112\uff97\113\uff97\114\uff97\115\uff97\116\uff97\117\uff97\120" +
    "\uff97\121\uff97\122\uff97\123\uff97\124\uff97\125\uff97\126\uff97" +
    "\127\uff97\130\uff97\131\uff97\132\uff97\133\uff97\134\uff97\135" +
    "\uff97\136\uff97\137\uff97\140\uff97\141\uff97\142\uff97\143\uff97" +
    "\144\uff97\145\uff97\146\uff97\147\uff97\150\uff97\151\uff97\152" +
    "\uff97\153\uff97\205\uff97\206\uff97\207\uff97\210\uff97\211\uff97" +
    "\212\uff97\213\uff97\214\uff97\270\uff97\271\uff97\276\uff97\277" +
    "\uff97\001\002\000\154\030\uff98\031\uff98\032\uff98\033\uff98" +
    "\034\uff98\110\uff98\111\uff98\112\uff98\113\uff98\114\uff98\115" +
    "\uff98\116\uff98\117\uff98\120\uff98\121\uff98\122\uff98\123\uff98" +
    "\124\uff98\125\uff98\126\uff98\127\uff98\130\uff98\131\uff98\132" +
    "\uff98\133\uff98\134\uff98\135\uff98\136\uff98\137\uff98\140\uff98" +
    "\141\uff98\142\uff98\143\uff98\144\uff98\145\uff98\146\uff98\147" +
    "\uff98\150\uff98\151\uff98\152\uff98\153\uff98\205\uff98\206\uff98" +
    "\207\uff98\210\uff98\211\uff98\212\uff98\213\uff98\214\uff98\270" +
    "\uff98\271\uff98\276\uff98\277\uff98\001\002\000\154\030\uff96" +
    "\031\uff96\032\uff96\033\uff96\034\uff96\110\uff96\111\uff96\112" +
    "\uff96\113\uff96\114\uff96\115\uff96\116\uff96\117\uff96\120\uff96" +
    "\121\uff96\122\uff96\123\uff96\124\uff96\125\uff96\126\uff96\127" +
    "\uff96\130\uff96\131\uff96\132\uff96\133\uff96\134\uff96\135\uff96" +
    "\136\uff96\137\uff96\140\uff96\141\uff96\142\uff96\143\uff96\144" +
    "\uff96\145\uff96\146\uff96\147\uff96\150\uff96\151\uff96\152\uff96" +
    "\153\uff96\205\uff96\206\uff96\207\uff96\210\uff96\211\uff96\212" +
    "\uff96\213\uff96\214\uff96\270\uff96\271\uff96\276\uff96\277\uff96" +
    "\001\002\000\154\030\uff99\031\uff99\032\uff99\033\uff99\034" +
    "\uff99\110\uff99\111\uff99\112\uff99\113\uff99\114\uff99\115\uff99" +
    "\116\uff99\117\uff99\120\uff99\121\uff99\122\uff99\123\uff99\124" +
    "\uff99\125\uff99\126\uff99\127\uff99\130\uff99\131\uff99\132\uff99" +
    "\133\uff99\134\uff99\135\uff99\136\uff99\137\uff99\140\uff99\141" +
    "\uff99\142\uff99\143\uff99\144\uff99\145\uff99\146\uff99\147\uff99" +
    "\150\uff99\151\uff99\152\uff99\153\uff99\205\uff99\206\uff99\207" +
    "\uff99\210\uff99\211\uff99\212\uff99\213\uff99\214\uff99\270\uff99" +
    "\271\uff99\276\uff99\277\uff99\001\002\000\154\030\uff95\031" +
    "\uff95\032\uff95\033\uff95\034\uff95\110\uff95\111\uff95\112\uff95" +
    "\113\uff95\114\uff95\115\uff95\116\uff95\117\uff95\120\uff95\121" +
    "\uff95\122\uff95\123\uff95\124\uff95\125\uff95\126\uff95\127\uff95" +
    "\130\uff95\131\uff95\132\uff95\133\uff95\134\uff95\135\uff95\136" +
    "\uff95\137\uff95\140\uff95\141\uff95\142\uff95\143\uff95\144\uff95" +
    "\145\uff95\146\uff95\147\uff95\150\uff95\151\uff95\152\uff95\153" +
    "\uff95\205\uff95\206\uff95\207\uff95\210\uff95\211\uff95\212\uff95" +
    "\213\uff95\214\uff95\270\uff95\271\uff95\276\uff95\277\uff95\001" +
    "\002\000\154\030\uff94\031\uff94\032\uff94\033\uff94\034\uff94" +
    "\110\uff94\111\uff94\112\uff94\113\uff94\114\uff94\115\uff94\116" +
    "\uff94\117\uff94\120\uff94\121\uff94\122\uff94\123\uff94\124\uff94" +
    "\125\uff94\126\uff94\127\uff94\130\uff94\131\uff94\132\uff94\133" +
    "\uff94\134\uff94\135\uff94\136\uff94\137\uff94\140\uff94\141\uff94" +
    "\142\uff94\143\uff94\144\uff94\145\uff94\146\uff94\147\uff94\150" +
    "\uff94\151\uff94\152\uff94\153\uff94\205\uff94\206\uff94\207\uff94" +
    "\210\uff94\211\uff94\212\uff94\213\uff94\214\uff94\270\uff94\271" +
    "\uff94\276\uff94\277\uff94\001\002\000\154\030\256\031\255" +
    "\032\254\033\253\034\252\110\245\111\243\112\322\113" +
    "\320\114\316\115\313\116\312\117\311\120\303\121\300" +
    "\122\277\123\276\124\275\125\274\126\273\127\271\130" +
    "\270\131\267\132\266\133\263\134\262\135\261\136\260" +
    "\137\257\140\251\141\250\142\246\143\244\144\323\145" +
    "\317\146\315\147\314\150\305\151\304\152\302\153\301" +
    "\205\272\206\306\207\310\210\265\211\247\212\307\213" +
    "\264\214\242\270\u016e\271\u016f\276\u0161\277\u0163\001\002" +
    "\000\154\030\uff93\031\uff93\032\uff93\033\uff93\034\uff93\110" +
    "\uff93\111\uff93\112\uff93\113\uff93\114\uff93\115\uff93\116\uff93" +
    "\117\uff93\120\uff93\121\uff93\122\uff93\123\uff93\124\uff93\125" +
    "\uff93\126\uff93\127\uff93\130\uff93\131\uff93\132\uff93\133\uff93" +
    "\134\uff93\135\uff93\136\uff93\137\uff93\140\uff93\141\uff93\142" +
    "\uff93\143\uff93\144\uff93\145\uff93\146\uff93\147\uff93\150\uff93" +
    "\151\uff93\152\uff93\153\uff93\205\uff93\206\uff93\207\uff93\210" +
    "\uff93\211\uff93\212\uff93\213\uff93\214\uff93\270\uff93\271\uff93" +
    "\276\uff93\277\uff93\001\002\000\024\242\uffa1\253\uffa1\255" +
    "\uffa1\256\uffa1\257\uffa1\260\uffa1\261\uffa1\262\uffa1\263\uffa1" +
    "\001\002\000\024\242\uffa2\253\uffa2\255\uffa2\256\uffa2\257" +
    "\uffa2\260\uffa2\261\uffa2\262\uffa2\263\uffa2\001\002\000\024" +
    "\242\uff9d\253\u016a\255\u0169\256\u0167\257\u0168\260\u0166\261" +
    "\u0165\262\u016d\263\u016b\001\002\000\004\242\uff9c\001\002" +
    "\000\154\030\256\031\255\032\254\033\253\034\252\110" +
    "\245\111\243\112\322\113\320\114\316\115\313\116\312" +
    "\117\311\120\303\121\300\122\277\123\276\124\275\125" +
    "\274\126\273\127\271\130\270\131\267\132\266\133\263" +
    "\134\262\135\261\136\260\137\257\140\251\141\250\142" +
    "\246\143\244\144\323\145\317\146\315\147\314\150\305" +
    "\151\304\152\302\153\301\205\272\206\306\207\310\210" +
    "\265\211\247\212\307\213\264\214\242\270\u016e\271\u016f" +
    "\276\u0161\277\u0163\001\002\000\024\242\uff9b\253\u016a\255" +
    "\u0169\256\u0167\257\u0168\260\u0166\261\u0165\262\u016d\263\u016b" +
    "\001\002\000\004\242\uff9a\001\002\000\004\235\u0176\001" +
    "\002\000\u0112\016\144\017\166\020\071\030\201\031\200" +
    "\032\175\033\174\034\171\035\031\036\030\037\026\040" +
    "\025\041\024\042\167\043\207\044\163\045\162\046\161" +
    "\047\156\050\155\051\153\052\152\053\146\054\124\055" +
    "\123\056\122\057\121\060\120\061\117\062\115\063\114" +
    "\064\074\065\073\066\072\067\070\070\067\071\066\072" +
    "\065\073\063\074\050\075\047\076\046\077\044\100\042" +
    "\101\041\102\036\103\035\104\225\105\223\106\220\107" +
    "\217\110\204\111\203\112\202\113\177\114\176\115\173" +
    "\116\172\117\170\120\147\121\145\122\142\123\141\124" +
    "\140\125\137\126\134\127\133\130\113\131\112\132\111" +
    "\133\110\134\107\135\106\136\105\137\104\140\064\141" +
    "\062\142\061\143\057\144\056\145\055\146\054\147\053" +
    "\150\034\151\033\152\032\153\027\154\231\155\230\156" +
    "\226\157\224\160\222\161\221\162\216\163\215\164\132" +
    "\165\131\166\130\167\127\170\126\171\125\173\233\174" +
    "\077\175\214\176\116\177\234\200\037\201\040\202\043" +
    "\203\052\204\143\205\210\206\205\207\157\210\151\211" +
    "\232\212\154\213\150\214\227\215\075\216\076\217\100" +
    "\220\101\221\102\222\103\223\060\224\211\225\135\226" +
    "\212\227\213\236\160\264\011\267\164\271\206\273\051" +
    "\275\136\001\002\000\004\234\u0178\001\002\000\004\275" +
    "\u0179\001\002\000\u011c\016\uffcb\017\uffcb\020\uffcb\030\uffcb" +
    "\031\uffcb\032\uffcb\033\uffcb\034\uffcb\035\uffcb\036\uffcb\037" +
    "\uffcb\040\uffcb\041\uffcb\042\uffcb\043\uffcb\044\uffcb\045\uffcb" +
    "\046\uffcb\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054" +
    "\uffcb\055\uffcb\056\uffcb\057\uffcb\060\uffcb\061\uffcb\062\uffcb" +
    "\063\uffcb\064\uffcb\065\uffcb\066\uffcb\067\uffcb\070\uffcb\071" +
    "\uffcb\072\uffcb\073\uffcb\074\uffcb\075\uffcb\076\uffcb\077\uffcb" +
    "\100\uffcb\101\uffcb\102\uffcb\103\uffcb\104\uffcb\105\uffcb\106" +
    "\uffcb\107\uffcb\110\uffcb\111\uffcb\112\uffcb\113\uffcb\114\uffcb" +
    "\115\uffcb\116\uffcb\117\uffcb\120\uffcb\121\uffcb\122\uffcb\123" +
    "\uffcb\124\uffcb\125\uffcb\126\uffcb\127\uffcb\130\uffcb\131\uffcb" +
    "\132\uffcb\133\uffcb\134\uffcb\135\uffcb\136\uffcb\137\uffcb\140" +
    "\uffcb\141\uffcb\142\uffcb\143\uffcb\144\uffcb\145\uffcb\146\uffcb" +
    "\147\uffcb\150\uffcb\151\uffcb\152\uffcb\153\uffcb\154\uffcb\155" +
    "\uffcb\156\uffcb\157\uffcb\160\uffcb\161\uffcb\162\uffcb\163\uffcb" +
    "\164\uffcb\165\uffcb\166\uffcb\167\uffcb\170\uffcb\171\uffcb\173" +
    "\uffcb\174\uffcb\175\uffcb\176\uffcb\177\uffcb\200\uffcb\201\uffcb" +
    "\202\uffcb\203\uffcb\204\uffcb\205\uffcb\206\uffcb\207\uffcb\210" +
    "\uffcb\211\uffcb\212\uffcb\213\uffcb\214\uffcb\215\uffcb\216\uffcb" +
    "\217\uffcb\220\uffcb\221\uffcb\222\uffcb\223\uffcb\224\uffcb\225" +
    "\uffcb\226\uffcb\227\uffcb\233\uffcb\234\uffcb\236\uffcb\240\uffcb" +
    "\247\uffcb\264\uffcb\267\uffcb\271\uffcb\273\uffcb\274\uffcb\275" +
    "\uffcb\001\002\000\004\235\u017b\001\002\000\u0112\016\144" +
    "\017\166\020\071\030\201\031\200\032\175\033\174\034" +
    "\171\035\031\036\030\037\026\040\025\041\024\042\167" +
    "\043\207\044\163\045\162\046\161\047\156\050\155\051" +
    "\153\052\152\053\146\054\124\055\123\056\122\057\121" +
    "\060\120\061\117\062\115\063\114\064\074\065\073\066" +
    "\072\067\070\070\067\071\066\072\065\073\063\074\050" +
    "\075\047\076\046\077\044\100\042\101\041\102\036\103" +
    "\035\104\225\105\223\106\220\107\217\110\204\111\203" +
    "\112\202\113\177\114\176\115\173\116\172\117\170\120" +
    "\147\121\145\122\142\123\141\124\140\125\137\126\134" +
    "\127\133\130\113\131\112\132\111\133\110\134\107\135" +
    "\106\136\105\137\104\140\064\141\062\142\061\143\057" +
    "\144\056\145\055\146\054\147\053\150\034\151\033\152" +
    "\032\153\027\154\231\155\230\156\226\157\224\160\222" +
    "\161\221\162\216\163\215\164\132\165\131\166\130\167" +
    "\127\170\126\171\125\173\233\174\077\175\214\176\116" +
    "\177\234\200\037\201\040\202\043\203\052\204\143\205" +
    "\210\206\205\207\157\210\151\211\232\212\154\213\150" +
    "\214\227\215\075\216\076\217\100\220\101\221\102\222" +
    "\103\223\060\224\211\225\135\226\212\227\213\236\160" +
    "\264\011\267\164\271\206\273\051\275\136\001\002\000" +
    "\004\234\u017d\001\002\000\004\275\u017e\001\002\000\u011c" +
    "\016\uffcc\017\uffcc\020\uffcc\030\uffcc\031\uffcc\032\uffcc\033" +
    "\uffcc\034\uffcc\035\uffcc\036\uffcc\037\uffcc\040\uffcc\041\uffcc" +
    "\042\uffcc\043\uffcc\044\uffcc\045\uffcc\046\uffcc\047\uffcc\050" +
    "\uffcc\051\uffcc\052\uffcc\053\uffcc\054\uffcc\055\uffcc\056\uffcc" +
    "\057\uffcc\060\uffcc\061\uffcc\062\uffcc\063\uffcc\064\uffcc\065" +
    "\uffcc\066\uffcc\067\uffcc\070\uffcc\071\uffcc\072\uffcc\073\uffcc" +
    "\074\uffcc\075\uffcc\076\uffcc\077\uffcc\100\uffcc\101\uffcc\102" +
    "\uffcc\103\uffcc\104\uffcc\105\uffcc\106\uffcc\107\uffcc\110\uffcc" +
    "\111\uffcc\112\uffcc\113\uffcc\114\uffcc\115\uffcc\116\uffcc\117" +
    "\uffcc\120\uffcc\121\uffcc\122\uffcc\123\uffcc\124\uffcc\125\uffcc" +
    "\126\uffcc\127\uffcc\130\uffcc\131\uffcc\132\uffcc\133\uffcc\134" +
    "\uffcc\135\uffcc\136\uffcc\137\uffcc\140\uffcc\141\uffcc\142\uffcc" +
    "\143\uffcc\144\uffcc\145\uffcc\146\uffcc\147\uffcc\150\uffcc\151" +
    "\uffcc\152\uffcc\153\uffcc\154\uffcc\155\uffcc\156\uffcc\157\uffcc" +
    "\160\uffcc\161\uffcc\162\uffcc\163\uffcc\164\uffcc\165\uffcc\166" +
    "\uffcc\167\uffcc\170\uffcc\171\uffcc\173\uffcc\174\uffcc\175\uffcc" +
    "\176\uffcc\177\uffcc\200\uffcc\201\uffcc\202\uffcc\203\uffcc\204" +
    "\uffcc\205\uffcc\206\uffcc\207\uffcc\210\uffcc\211\uffcc\212\uffcc" +
    "\213\uffcc\214\uffcc\215\uffcc\216\uffcc\217\uffcc\220\uffcc\221" +
    "\uffcc\222\uffcc\223\uffcc\224\uffcc\225\uffcc\226\uffcc\227\uffcc" +
    "\233\uffcc\234\uffcc\236\uffcc\240\uffcc\247\uffcc\264\uffcc\267" +
    "\uffcc\271\uffcc\273\uffcc\274\uffcc\275\uffcc\001\002\000\004" +
    "\277\u0180\001\002\000\004\251\u0181\001\002\000\u011c\016" +
    "\uffd5\017\uffd5\020\uffd5\030\uffd5\031\uffd5\032\uffd5\033\uffd5" +
    "\034\uffd5\035\uffd5\036\uffd5\037\uffd5\040\uffd5\041\uffd5\042" +
    "\uffd5\043\uffd5\044\uffd5\045\uffd5\046\uffd5\047\uffd5\050\uffd5" +
    "\051\uffd5\052\uffd5\053\uffd5\054\uffd5\055\uffd5\056\uffd5\057" +
    "\uffd5\060\uffd5\061\uffd5\062\uffd5\063\uffd5\064\uffd5\065\uffd5" +
    "\066\uffd5\067\uffd5\070\uffd5\071\uffd5\072\uffd5\073\uffd5\074" +
    "\uffd5\075\uffd5\076\uffd5\077\uffd5\100\uffd5\101\uffd5\102\uffd5" +
    "\103\uffd5\104\uffd5\105\uffd5\106\uffd5\107\uffd5\110\uffd5\111" +
    "\uffd5\112\uffd5\113\uffd5\114\uffd5\115\uffd5\116\uffd5\117\uffd5" +
    "\120\uffd5\121\uffd5\122\uffd5\123\uffd5\124\uffd5\125\uffd5\126" +
    "\uffd5\127\uffd5\130\uffd5\131\uffd5\132\uffd5\133\uffd5\134\uffd5" +
    "\135\uffd5\136\uffd5\137\uffd5\140\uffd5\141\uffd5\142\uffd5\143" +
    "\uffd5\144\uffd5\145\uffd5\146\uffd5\147\uffd5\150\uffd5\151\uffd5" +
    "\152\uffd5\153\uffd5\154\uffd5\155\uffd5\156\uffd5\157\uffd5\160" +
    "\uffd5\161\uffd5\162\uffd5\163\uffd5\164\uffd5\165\uffd5\166\uffd5" +
    "\167\uffd5\170\uffd5\171\uffd5\173\uffd5\174\uffd5\175\uffd5\176" +
    "\uffd5\177\uffd5\200\uffd5\201\uffd5\202\uffd5\203\uffd5\204\uffd5" +
    "\205\uffd5\206\uffd5\207\uffd5\210\uffd5\211\uffd5\212\uffd5\213" +
    "\uffd5\214\uffd5\215\uffd5\216\uffd5\217\uffd5\220\uffd5\221\uffd5" +
    "\222\uffd5\223\uffd5\224\uffd5\225\uffd5\226\uffd5\227\uffd5\233" +
    "\uffd5\234\uffd5\236\uffd5\240\uffd5\247\uffd5\264\uffd5\267\uffd5" +
    "\271\uffd5\273\uffd5\274\uffd5\275\uffd5\001\002\000\154\030" +
    "\256\031\255\032\254\033\253\034\252\110\245\111\243" +
    "\112\322\113\320\114\316\115\313\116\312\117\311\120" +
    "\303\121\300\122\277\123\276\124\275\125\274\126\273" +
    "\127\271\130\270\131\267\132\266\133\263\134\262\135" +
    "\261\136\260\137\257\140\251\141\250\142\246\143\244" +
    "\144\323\145\317\146\315\147\314\150\305\151\304\152" +
    "\302\153\301\205\272\206\306\207\310\210\265\211\247" +
    "\212\307\213\264\214\242\270\u016e\271\u016f\276\u0161\277" +
    "\u0163\001\002\000\004\242\u018d\001\002\000\024\242\u0185" +
    "\253\uffa0\255\uffa0\256\uffa0\257\uffa0\260\uffa0\261\uffa0\262" +
    "\uffa0\263\uffa0\001\002\000\004\232\u0186\001\002\000\u0112" +
    "\016\144\017\166\020\071\030\201\031\200\032\175\033" +
    "\174\034\171\035\031\036\030\037\026\040\025\041\024" +
    "\042\167\043\207\044\163\045\162\046\161\047\156\050" +
    "\155\051\153\052\152\053\146\054\124\055\123\056\122" +
    "\057\121\060\120\061\117\062\115\063\114\064\074\065" +
    "\073\066\072\067\070\070\067\071\066\072\065\073\063" +
    "\074\050\075\047\076\046\077\044\100\042\101\041\102" +
    "\036\103\035\104\225\105\223\106\220\107\217\110\204" +
    "\111\203\112\202\113\177\114\176\115\173\116\172\117" +
    "\170\120\147\121\145\122\142\123\141\124\140\125\137" +
    "\126\134\127\133\130\113\131\112\132\111\133\110\134" +
    "\107\135\106\136\105\137\104\140\064\141\062\142\061" +
    "\143\057\144\056\145\055\146\054\147\053\150\034\151" +
    "\033\152\032\153\027\154\231\155\230\156\226\157\224" +
    "\160\222\161\221\162\216\163\215\164\132\165\131\166" +
    "\130\167\127\170\126\171\125\173\233\174\077\175\214" +
    "\176\116\177\234\200\037\201\040\202\043\203\052\204" +
    "\143\205\210\206\205\207\157\210\151\211\232\212\154" +
    "\213\150\214\227\215\075\216\076\217\100\220\101\221" +
    "\102\222\103\223\060\224\211\225\135\226\212\227\213" +
    "\236\160\264\011\267\164\271\206\273\051\275\136\001" +
    "\002\000\006\233\uffd0\234\u0189\001\002\000\004\233\u018a" +
    "\001\002\000\u011c\016\uffd3\017\uffd3\020\uffd3\030\uffd3\031" +
    "\uffd3\032\uffd3\033\uffd3\034\uffd3\035\uffd3\036\uffd3\037\uffd3" +
    "\040\uffd3\041\uffd3\042\uffd3\043\uffd3\044\uffd3\045\uffd3\046" +
    "\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3" +
    "\055\uffd3\056\uffd3\057\uffd3\060\uffd3\061\uffd3\062\uffd3\063" +
    "\uffd3\064\uffd3\065\uffd3\066\uffd3\067\uffd3\070\uffd3\071\uffd3" +
    "\072\uffd3\073\uffd3\074\uffd3\075\uffd3\076\uffd3\077\uffd3\100" +
    "\uffd3\101\uffd3\102\uffd3\103\uffd3\104\uffd3\105\uffd3\106\uffd3" +
    "\107\uffd3\110\uffd3\111\uffd3\112\uffd3\113\uffd3\114\uffd3\115" +
    "\uffd3\116\uffd3\117\uffd3\120\uffd3\121\uffd3\122\uffd3\123\uffd3" +
    "\124\uffd3\125\uffd3\126\uffd3\127\uffd3\130\uffd3\131\uffd3\132" +
    "\uffd3\133\uffd3\134\uffd3\135\uffd3\136\uffd3\137\uffd3\140\uffd3" +
    "\141\uffd3\142\uffd3\143\uffd3\144\uffd3\145\uffd3\146\uffd3\147" +
    "\uffd3\150\uffd3\151\uffd3\152\uffd3\153\uffd3\154\uffd3\155\uffd3" +
    "\156\uffd3\157\uffd3\160\uffd3\161\uffd3\162\uffd3\163\uffd3\164" +
    "\uffd3\165\uffd3\166\uffd3\167\uffd3\170\uffd3\171\uffd3\173\uffd3" +
    "\174\uffd3\175\uffd3\176\uffd3\177\uffd3\200\uffd3\201\uffd3\202" +
    "\uffd3\203\uffd3\204\uffd3\205\uffd3\206\uffd3\207\uffd3\210\uffd3" +
    "\211\uffd3\212\uffd3\213\uffd3\214\uffd3\215\uffd3\216\uffd3\217" +
    "\uffd3\220\uffd3\221\uffd3\222\uffd3\223\uffd3\224\uffd3\225\uffd3" +
    "\226\uffd3\227\uffd3\233\uffd3\234\uffd3\236\uffd3\240\uffd3\247" +
    "\uffd3\264\uffd3\267\uffd3\271\uffd3\273\uffd3\274\uffd3\275\uffd3" +
    "\001\002\000\u0112\016\144\017\166\020\071\030\201\031" +
    "\200\032\175\033\174\034\171\035\031\036\030\037\026" +
    "\040\025\041\024\042\167\043\207\044\163\045\162\046" +
    "\161\047\156\050\155\051\153\052\152\053\146\054\124" +
    "\055\123\056\122\057\121\060\120\061\117\062\115\063" +
    "\114\064\074\065\073\066\072\067\070\070\067\071\066" +
    "\072\065\073\063\074\050\075\047\076\046\077\044\100" +
    "\042\101\041\102\036\103\035\104\225\105\223\106\220" +
    "\107\217\110\204\111\203\112\202\113\177\114\176\115" +
    "\173\116\172\117\170\120\147\121\145\122\142\123\141" +
    "\124\140\125\137\126\134\127\133\130\113\131\112\132" +
    "\111\133\110\134\107\135\106\136\105\137\104\140\064" +
    "\141\062\142\061\143\057\144\056\145\055\146\054\147" +
    "\053\150\034\151\033\152\032\153\027\154\231\155\230" +
    "\156\226\157\224\160\222\161\221\162\216\163\215\164" +
    "\132\165\131\166\130\167\127\170\126\171\125\173\233" +
    "\174\077\175\214\176\116\177\234\200\037\201\040\202" +
    "\043\203\052\204\143\205\210\206\205\207\157\210\151" +
    "\211\232\212\154\213\150\214\227\215\075\216\076\217" +
    "\100\220\101\221\102\222\103\223\060\224\211\225\135" +
    "\226\212\227\213\236\160\264\011\267\164\271\206\273" +
    "\051\275\136\001\002\000\004\234\u018c\001\002\000\u011c" +
    "\016\uffcf\017\uffcf\020\uffcf\030\uffcf\031\uffcf\032\uffcf\033" +
    "\uffcf\034\uffcf\035\uffcf\036\uffcf\037\uffcf\040\uffcf\041\uffcf" +
    "\042\uffcf\043\uffcf\044\uffcf\045\uffcf\046\uffcf\047\uffcf\050" +
    "\uffcf\051\uffcf\052\uffcf\053\uffcf\054\uffcf\055\uffcf\056\uffcf" +
    "\057\uffcf\060\uffcf\061\uffcf\062\uffcf\063\uffcf\064\uffcf\065" +
    "\uffcf\066\uffcf\067\uffcf\070\uffcf\071\uffcf\072\uffcf\073\uffcf" +
    "\074\uffcf\075\uffcf\076\uffcf\077\uffcf\100\uffcf\101\uffcf\102" +
    "\uffcf\103\uffcf\104\uffcf\105\uffcf\106\uffcf\107\uffcf\110\uffcf" +
    "\111\uffcf\112\uffcf\113\uffcf\114\uffcf\115\uffcf\116\uffcf\117" +
    "\uffcf\120\uffcf\121\uffcf\122\uffcf\123\uffcf\124\uffcf\125\uffcf" +
    "\126\uffcf\127\uffcf\130\uffcf\131\uffcf\132\uffcf\133\uffcf\134" +
    "\uffcf\135\uffcf\136\uffcf\137\uffcf\140\uffcf\141\uffcf\142\uffcf" +
    "\143\uffcf\144\uffcf\145\uffcf\146\uffcf\147\uffcf\150\uffcf\151" +
    "\uffcf\152\uffcf\153\uffcf\154\uffcf\155\uffcf\156\uffcf\157\uffcf" +
    "\160\uffcf\161\uffcf\162\uffcf\163\uffcf\164\uffcf\165\uffcf\166" +
    "\uffcf\167\uffcf\170\uffcf\171\uffcf\173\uffcf\174\uffcf\175\uffcf" +
    "\176\uffcf\177\uffcf\200\uffcf\201\uffcf\202\uffcf\203\uffcf\204" +
    "\uffcf\205\uffcf\206\uffcf\207\uffcf\210\uffcf\211\uffcf\212\uffcf" +
    "\213\uffcf\214\uffcf\215\uffcf\216\uffcf\217\uffcf\220\uffcf\221" +
    "\uffcf\222\uffcf\223\uffcf\224\uffcf\225\uffcf\226\uffcf\227\uffcf" +
    "\233\uffcf\234\uffcf\236\uffcf\240\uffcf\247\uffcf\264\uffcf\267" +
    "\uffcf\271\uffcf\273\uffcf\274\uffcf\275\uffcf\001\002\000\004" +
    "\232\u018e\001\002\000\u0112\016\144\017\166\020\071\030" +
    "\201\031\200\032\175\033\174\034\171\035\031\036\030" +
    "\037\026\040\025\041\024\042\167\043\207\044\163\045" +
    "\162\046\161\047\156\050\155\051\153\052\152\053\146" +
    "\054\124\055\123\056\122\057\121\060\120\061\117\062" +
    "\115\063\114\064\074\065\073\066\072\067\070\070\067" +
    "\071\066\072\065\073\063\074\050\075\047\076\046\077" +
    "\044\100\042\101\041\102\036\103\035\104\225\105\223" +
    "\106\220\107\217\110\204\111\203\112\202\113\177\114" +
    "\176\115\173\116\172\117\170\120\147\121\145\122\142" +
    "\123\141\124\140\125\137\126\134\127\133\130\113\131" +
    "\112\132\111\133\110\134\107\135\106\136\105\137\104" +
    "\140\064\141\062\142\061\143\057\144\056\145\055\146" +
    "\054\147\053\150\034\151\033\152\032\153\027\154\231" +
    "\155\230\156\226\157\224\160\222\161\221\162\216\163" +
    "\215\164\132\165\131\166\130\167\127\170\126\171\125" +
    "\173\233\174\077\175\214\176\116\177\234\200\037\201" +
    "\040\202\043\203\052\204\143\205\210\206\205\207\157" +
    "\210\151\211\232\212\154\213\150\214\227\215\075\216" +
    "\076\217\100\220\101\221\102\222\103\223\060\224\211" +
    "\225\135\226\212\227\213\236\160\264\011\267\164\271" +
    "\206\273\051\275\136\001\002\000\006\233\uffd2\234\u0191" +
    "\001\002\000\004\233\u0192\001\002\000\u011c\016\uffd4\017" +
    "\uffd4\020\uffd4\030\uffd4\031\uffd4\032\uffd4\033\uffd4\034\uffd4" +
    "\035\uffd4\036\uffd4\037\uffd4\040\uffd4\041\uffd4\042\uffd4\043" +
    "\uffd4\044\uffd4\045\uffd4\046\uffd4\047\uffd4\050\uffd4\051\uffd4" +
    "\052\uffd4\053\uffd4\054\uffd4\055\uffd4\056\uffd4\057\uffd4\060" +
    "\uffd4\061\uffd4\062\uffd4\063\uffd4\064\uffd4\065\uffd4\066\uffd4" +
    "\067\uffd4\070\uffd4\071\uffd4\072\uffd4\073\uffd4\074\uffd4\075" +
    "\uffd4\076\uffd4\077\uffd4\100\uffd4\101\uffd4\102\uffd4\103\uffd4" +
    "\104\uffd4\105\uffd4\106\uffd4\107\uffd4\110\uffd4\111\uffd4\112" +
    "\uffd4\113\uffd4\114\uffd4\115\uffd4\116\uffd4\117\uffd4\120\uffd4" +
    "\121\uffd4\122\uffd4\123\uffd4\124\uffd4\125\uffd4\126\uffd4\127" +
    "\uffd4\130\uffd4\131\uffd4\132\uffd4\133\uffd4\134\uffd4\135\uffd4" +
    "\136\uffd4\137\uffd4\140\uffd4\141\uffd4\142\uffd4\143\uffd4\144" +
    "\uffd4\145\uffd4\146\uffd4\147\uffd4\150\uffd4\151\uffd4\152\uffd4" +
    "\153\uffd4\154\uffd4\155\uffd4\156\uffd4\157\uffd4\160\uffd4\161" +
    "\uffd4\162\uffd4\163\uffd4\164\uffd4\165\uffd4\166\uffd4\167\uffd4" +
    "\170\uffd4\171\uffd4\173\uffd4\174\uffd4\175\uffd4\176\uffd4\177" +
    "\uffd4\200\uffd4\201\uffd4\202\uffd4\203\uffd4\204\uffd4\205\uffd4" +
    "\206\uffd4\207\uffd4\210\uffd4\211\uffd4\212\uffd4\213\uffd4\214" +
    "\uffd4\215\uffd4\216\uffd4\217\uffd4\220\uffd4\221\uffd4\222\uffd4" +
    "\223\uffd4\224\uffd4\225\uffd4\226\uffd4\227\uffd4\233\uffd4\234" +
    "\uffd4\236\uffd4\240\uffd4\247\uffd4\264\uffd4\267\uffd4\271\uffd4" +
    "\273\uffd4\274\uffd4\275\uffd4\001\002\000\u0112\016\144\017" +
    "\166\020\071\030\201\031\200\032\175\033\174\034\171" +
    "\035\031\036\030\037\026\040\025\041\024\042\167\043" +
    "\207\044\163\045\162\046\161\047\156\050\155\051\153" +
    "\052\152\053\146\054\124\055\123\056\122\057\121\060" +
    "\120\061\117\062\115\063\114\064\074\065\073\066\072" +
    "\067\070\070\067\071\066\072\065\073\063\074\050\075" +
    "\047\076\046\077\044\100\042\101\041\102\036\103\035" +
    "\104\225\105\223\106\220\107\217\110\204\111\203\112" +
    "\202\113\177\114\176\115\173\116\172\117\170\120\147" +
    "\121\145\122\142\123\141\124\140\125\137\126\134\127" +
    "\133\130\113\131\112\132\111\133\110\134\107\135\106" +
    "\136\105\137\104\140\064\141\062\142\061\143\057\144" +
    "\056\145\055\146\054\147\053\150\034\151\033\152\032" +
    "\153\027\154\231\155\230\156\226\157\224\160\222\161" +
    "\221\162\216\163\215\164\132\165\131\166\130\167\127" +
    "\170\126\171\125\173\233\174\077\175\214\176\116\177" +
    "\234\200\037\201\040\202\043\203\052\204\143\205\210" +
    "\206\205\207\157\210\151\211\232\212\154\213\150\214" +
    "\227\215\075\216\076\217\100\220\101\221\102\222\103" +
    "\223\060\224\211\225\135\226\212\227\213\236\160\264" +
    "\011\267\164\271\206\273\051\275\136\001\002\000\004" +
    "\234\u0194\001\002\000\u011c\016\uffd1\017\uffd1\020\uffd1\030" +
    "\uffd1\031\uffd1\032\uffd1\033\uffd1\034\uffd1\035\uffd1\036\uffd1" +
    "\037\uffd1\040\uffd1\041\uffd1\042\uffd1\043\uffd1\044\uffd1\045" +
    "\uffd1\046\uffd1\047\uffd1\050\uffd1\051\uffd1\052\uffd1\053\uffd1" +
    "\054\uffd1\055\uffd1\056\uffd1\057\uffd1\060\uffd1\061\uffd1\062" +
    "\uffd1\063\uffd1\064\uffd1\065\uffd1\066\uffd1\067\uffd1\070\uffd1" +
    "\071\uffd1\072\uffd1\073\uffd1\074\uffd1\075\uffd1\076\uffd1\077" +
    "\uffd1\100\uffd1\101\uffd1\102\uffd1\103\uffd1\104\uffd1\105\uffd1" +
    "\106\uffd1\107\uffd1\110\uffd1\111\uffd1\112\uffd1\113\uffd1\114" +
    "\uffd1\115\uffd1\116\uffd1\117\uffd1\120\uffd1\121\uffd1\122\uffd1" +
    "\123\uffd1\124\uffd1\125\uffd1\126\uffd1\127\uffd1\130\uffd1\131" +
    "\uffd1\132\uffd1\133\uffd1\134\uffd1\135\uffd1\136\uffd1\137\uffd1" +
    "\140\uffd1\141\uffd1\142\uffd1\143\uffd1\144\uffd1\145\uffd1\146" +
    "\uffd1\147\uffd1\150\uffd1\151\uffd1\152\uffd1\153\uffd1\154\uffd1" +
    "\155\uffd1\156\uffd1\157\uffd1\160\uffd1\161\uffd1\162\uffd1\163" +
    "\uffd1\164\uffd1\165\uffd1\166\uffd1\167\uffd1\170\uffd1\171\uffd1" +
    "\173\uffd1\174\uffd1\175\uffd1\176\uffd1\177\uffd1\200\uffd1\201" +
    "\uffd1\202\uffd1\203\uffd1\204\uffd1\205\uffd1\206\uffd1\207\uffd1" +
    "\210\uffd1\211\uffd1\212\uffd1\213\uffd1\214\uffd1\215\uffd1\216" +
    "\uffd1\217\uffd1\220\uffd1\221\uffd1\222\uffd1\223\uffd1\224\uffd1" +
    "\225\uffd1\226\uffd1\227\uffd1\233\uffd1\234\uffd1\236\uffd1\240" +
    "\uffd1\247\uffd1\264\uffd1\267\uffd1\271\uffd1\273\uffd1\274\uffd1" +
    "\275\uffd1\001\002\000\006\242\u0197\271\u0196\001\002\000" +
    "\004\250\u01a0\001\002\000\004\246\u019d\001\002\000\004" +
    "\242\u0199\001\002\000\004\246\u019a\001\002\000\u0112\016" +
    "\144\017\166\020\071\030\201\031\200\032\175\033\174" +
    "\034\171\035\031\036\030\037\026\040\025\041\024\042" +
    "\167\043\207\044\163\045\162\046\161\047\156\050\155" +
    "\051\153\052\152\053\146\054\124\055\123\056\122\057" +
    "\121\060\120\061\117\062\115\063\114\064\074\065\073" +
    "\066\072\067\070\070\067\071\066\072\065\073\063\074" +
    "\050\075\047\076\046\077\044\100\042\101\041\102\036" +
    "\103\035\104\225\105\223\106\220\107\217\110\204\111" +
    "\203\112\202\113\177\114\176\115\173\116\172\117\170" +
    "\120\147\121\145\122\142\123\141\124\140\125\137\126" +
    "\134\127\133\130\113\131\112\132\111\133\110\134\107" +
    "\135\106\136\105\137\104\140\064\141\062\142\061\143" +
    "\057\144\056\145\055\146\054\147\053\150\034\151\033" +
    "\152\032\153\027\154\231\155\230\156\226\157\224\160" +
    "\222\161\221\162\216\163\215\164\132\165\131\166\130" +
    "\167\127\170\126\171\125\173\233\174\077\175\214\176" +
    "\116\177\234\200\037\201\040\202\043\203\052\204\143" +
    "\205\210\206\205\207\157\210\151\211\232\212\154\213" +
    "\150\214\227\215\075\216\076\217\100\220\101\221\102" +
    "\222\103\223\060\224\211\225\135\226\212\227\213\236" +
    "\160\264\011\267\164\271\206\273\051\275\136\001\002" +
    "\000\004\247\u019c\001\002\000\006\022\uffea\230\uffea\001" +
    "\002\000\u0112\016\144\017\166\020\071\030\201\031\200" +
    "\032\175\033\174\034\171\035\031\036\030\037\026\040" +
    "\025\041\024\042\167\043\207\044\163\045\162\046\161" +
    "\047\156\050\155\051\153\052\152\053\146\054\124\055" +
    "\123\056\122\057\121\060\120\061\117\062\115\063\114" +
    "\064\074\065\073\066\072\067\070\070\067\071\066\072" +
    "\065\073\063\074\050\075\047\076\046\077\044\100\042" +
    "\101\041\102\036\103\035\104\225\105\223\106\220\107" +
    "\217\110\204\111\203\112\202\113\177\114\176\115\173" +
    "\116\172\117\170\120\147\121\145\122\142\123\141\124" +
    "\140\125\137\126\134\127\133\130\113\131\112\132\111" +
    "\133\110\134\107\135\106\136\105\137\104\140\064\141" +
    "\062\142\061\143\057\144\056\145\055\146\054\147\053" +
    "\150\034\151\033\152\032\153\027\154\231\155\230\156" +
    "\226\157\224\160\222\161\221\162\216\163\215\164\132" +
    "\165\131\166\130\167\127\170\126\171\125\173\233\174" +
    "\077\175\214\176\116\177\234\200\037\201\040\202\043" +
    "\203\052\204\143\205\210\206\205\207\157\210\151\211" +
    "\232\212\154\213\150\214\227\215\075\216\076\217\100" +
    "\220\101\221\102\222\103\223\060\224\211\225\135\226" +
    "\212\227\213\236\160\264\011\267\164\271\206\273\051" +
    "\275\136\001\002\000\004\247\u019f\001\002\000\006\022" +
    "\uffec\230\uffec\001\002\000\012\004\u01a1\005\u01a2\006\u01a4" +
    "\007\u01a5\001\002\000\012\015\uff91\242\uff91\251\uff91\252" +
    "\uff91\001\002\000\012\015\uff90\242\uff90\251\uff90\252\uff90" +
    "\001\002\000\006\015\u01a6\242\uffe8\001\002\000\012\015" +
    "\uff8f\242\uff8f\251\uff8f\252\uff8f\001\002\000\012\015\uff8e" +
    "\242\uff8e\251\uff8e\252\uff8e\001\002\000\004\271\u0196\001" +
    "\002\000\004\242\uffe7\001\002\000\006\026\u01c2\027\u01b9" +
    "\001\002\000\006\022\007\230\u01ab\001\002\000\006\026" +
    "\u01b7\027\u01b9\001\002\000\004\271\u01ac\001\002\000\004" +
    "\241\u01ad\001\002\000\006\242\u01ae\271\u0196\001\002\000" +
    "\004\246\u01b4\001\002\000\004\242\u01b0\001\002\000\004" +
    "\246\u01b1\001\002\000\u0112\016\144\017\166\020\071\030" +
    "\201\031\200\032\175\033\174\034\171\035\031\036\030" +
    "\037\026\040\025\041\024\042\167\043\207\044\163\045" +
    "\162\046\161\047\156\050\155\051\153\052\152\053\146" +
    "\054\124\055\123\056\122\057\121\060\120\061\117\062" +
    "\115\063\114\064\074\065\073\066\072\067\070\070\067" +
    "\071\066\072\065\073\063\074\050\075\047\076\046\077" +
    "\044\100\042\101\041\102\036\103\035\104\225\105\223" +
    "\106\220\107\217\110\204\111\203\112\202\113\177\114" +
    "\176\115\173\116\172\117\170\120\147\121\145\122\142" +
    "\123\141\124\140\125\137\126\134\127\133\130\113\131" +
    "\112\132\111\133\110\134\107\135\106\136\105\137\104" +
    "\140\064\141\062\142\061\143\057\144\056\145\055\146" +
    "\054\147\053\150\034\151\033\152\032\153\027\154\231" +
    "\155\230\156\226\157\224\160\222\161\221\162\216\163" +
    "\215\164\132\165\131\166\130\167\127\170\126\171\125" +
    "\173\233\174\077\175\214\176\116\177\234\200\037\201" +
    "\040\202\043\203\052\204\143\205\210\206\205\207\157" +
    "\210\151\211\232\212\154\213\150\214\227\215\075\216" +
    "\076\217\100\220\101\221\102\222\103\223\060\224\211" +
    "\225\135\226\212\227\213\236\160\264\011\267\164\271" +
    "\206\273\051\275\136\001\002\000\004\247\u01b3\001\002" +
    "\000\006\022\uffe9\230\uffe9\001\002\000\u0112\016\144\017" +
    "\166\020\071\030\201\031\200\032\175\033\174\034\171" +
    "\035\031\036\030\037\026\040\025\041\024\042\167\043" +
    "\207\044\163\045\162\046\161\047\156\050\155\051\153" +
    "\052\152\053\146\054\124\055\123\056\122\057\121\060" +
    "\120\061\117\062\115\063\114\064\074\065\073\066\072" +
    "\067\070\070\067\071\066\072\065\073\063\074\050\075" +
    "\047\076\046\077\044\100\042\101\041\102\036\103\035" +
    "\104\225\105\223\106\220\107\217\110\204\111\203\112" +
    "\202\113\177\114\176\115\173\116\172\117\170\120\147" +
    "\121\145\122\142\123\141\124\140\125\137\126\134\127" +
    "\133\130\113\131\112\132\111\133\110\134\107\135\106" +
    "\136\105\137\104\140\064\141\062\142\061\143\057\144" +
    "\056\145\055\146\054\147\053\150\034\151\033\152\032" +
    "\153\027\154\231\155\230\156\226\157\224\160\222\161" +
    "\221\162\216\163\215\164\132\165\131\166\130\167\127" +
    "\170\126\171\125\173\233\174\077\175\214\176\116\177" +
    "\234\200\037\201\040\202\043\203\052\204\143\205\210" +
    "\206\205\207\157\210\151\211\232\212\154\213\150\214" +
    "\227\215\075\216\076\217\100\220\101\221\102\222\103" +
    "\223\060\224\211\225\135\226\212\227\213\236\160\264" +
    "\011\267\164\271\206\273\051\275\136\001\002\000\004" +
    "\247\u01b6\001\002\000\006\022\uffeb\230\uffeb\001\002\000" +
    "\004\241\u01be\001\002\000\004\021\ufffa\001\002\000\004" +
    "\246\u01ba\001\002\000\u0114\016\144\017\166\020\071\030" +
    "\201\031\200\032\175\033\174\034\171\035\031\036\030" +
    "\037\026\040\025\041\024\042\167\043\207\044\163\045" +
    "\162\046\161\047\156\050\155\051\153\052\152\053\146" +
    "\054\124\055\123\056\122\057\121\060\120\061\117\062" +
    "\115\063\114\064\074\065\073\066\072\067\070\070\067" +
    "\071\066\072\065\073\063\074\050\075\047\076\046\077" +
    "\044\100\042\101\041\102\036\103\035\104\225\105\223" +
    "\106\220\107\217\110\204\111\203\112\202\113\177\114" +
    "\176\115\173\116\172\117\170\120\147\121\145\122\142" +
    "\123\141\124\140\125\137\126\134\127\133\130\113\131" +
    "\112\132\111\133\110\134\107\135\106\136\105\137\104" +
    "\140\064\141\062\142\061\143\057\144\056\145\055\146" +
    "\054\147\053\150\034\151\033\152\032\153\027\154\231" +
    "\155\230\156\226\157\224\160\222\161\221\162\216\163" +
    "\215\164\132\165\131\166\130\167\127\170\126\171\125" +
    "\173\233\174\077\175\214\176\116\177\234\200\037\201" +
    "\040\202\043\203\052\204\143\205\210\206\205\207\157" +
    "\210\151\211\232\212\154\213\150\214\227\215\075\216" +
    "\076\217\100\220\101\221\102\222\103\223\060\224\211" +
    "\225\135\226\212\227\213\236\160\247\u01bb\264\011\267" +
    "\164\271\206\273\051\275\136\001\002\000\004\021\ufff0" +
    "\001\002\000\004\247\u01bd\001\002\000\004\021\ufff1\001" +
    "\002\000\004\242\u01bf\001\002\000\004\251\u01c0\001\002" +
    "\000\004\027\u01b9\001\002\000\004\021\ufff9\001\002\000" +
    "\004\241\u01c4\001\002\000\004\021\ufff8\001\002\000\004" +
    "\242\u01c5\001\002\000\004\251\u01c6\001\002\000\004\027" +
    "\u01b9\001\002\000\004\021\ufffb\001\002\000\006\022\uffc0" +
    "\230\uffc0\001\002\000\006\026\u01ca\027\u01b9\001\002\000" +
    "\004\241\u01cc\001\002\000\004\021\ufffd\001\002\000\004" +
    "\242\u01cd\001\002\000\004\251\u01ce\001\002\000\004\027" +
    "\u01b9\001\002\000\004\021\ufffc\001\002\000\004\250\u01d1" +
    "\001\002\000\012\004\u01a1\005\u01a2\006\u01a4\007\u01a5\001" +
    "\002\000\006\251\u01d4\252\u01d3\001\002\000\020\010\376" +
    "\011\370\012\377\270\u01d6\271\u01d5\276\371\277\366\001" +
    "\002\000\u0120\016\uffbf\017\uffbf\020\uffbf\022\uffbf\030\uffbf" +
    "\031\uffbf\032\uffbf\033\uffbf\034\uffbf\035\uffbf\036\uffbf\037" +
    "\uffbf\040\uffbf\041\uffbf\042\uffbf\043\uffbf\044\uffbf\045\uffbf" +
    "\046\uffbf\047\uffbf\050\uffbf\051\uffbf\052\uffbf\053\uffbf\054" +
    "\uffbf\055\uffbf\056\uffbf\057\uffbf\060\uffbf\061\uffbf\062\uffbf" +
    "\063\uffbf\064\uffbf\065\uffbf\066\uffbf\067\uffbf\070\uffbf\071" +
    "\uffbf\072\uffbf\073\uffbf\074\uffbf\075\uffbf\076\uffbf\077\uffbf" +
    "\100\uffbf\101\uffbf\102\uffbf\103\uffbf\104\uffbf\105\uffbf\106" +
    "\uffbf\107\uffbf\110\uffbf\111\uffbf\112\uffbf\113\uffbf\114\uffbf" +
    "\115\uffbf\116\uffbf\117\uffbf\120\uffbf\121\uffbf\122\uffbf\123" +
    "\uffbf\124\uffbf\125\uffbf\126\uffbf\127\uffbf\130\uffbf\131\uffbf" +
    "\132\uffbf\133\uffbf\134\uffbf\135\uffbf\136\uffbf\137\uffbf\140" +
    "\uffbf\141\uffbf\142\uffbf\143\uffbf\144\uffbf\145\uffbf\146\uffbf" +
    "\147\uffbf\150\uffbf\151\uffbf\152\uffbf\153\uffbf\154\uffbf\155" +
    "\uffbf\156\uffbf\157\uffbf\160\uffbf\161\uffbf\162\uffbf\163\uffbf" +
    "\164\uffbf\165\uffbf\166\uffbf\167\uffbf\170\uffbf\171\uffbf\173" +
    "\uffbf\174\uffbf\175\uffbf\176\uffbf\177\uffbf\200\uffbf\201\uffbf" +
    "\202\uffbf\203\uffbf\204\uffbf\205\uffbf\206\uffbf\207\uffbf\210" +
    "\uffbf\211\uffbf\212\uffbf\213\uffbf\214\uffbf\215\uffbf\216\uffbf" +
    "\217\uffbf\220\uffbf\221\uffbf\222\uffbf\223\uffbf\224\uffbf\225" +
    "\uffbf\226\uffbf\227\uffbf\230\uffbf\233\uffbf\234\uffbf\236\uffbf" +
    "\240\uffbf\247\uffbf\264\uffbf\267\uffbf\271\uffbf\273\uffbf\274" +
    "\uffbf\275\uffbf\001\002\000\004\251\uff8d\001\002\000\004" +
    "\251\uff8c\001\002\000\004\251\u01d8\001\002\000\u0120\016" +
    "\uffbe\017\uffbe\020\uffbe\022\uffbe\030\uffbe\031\uffbe\032\uffbe" +
    "\033\uffbe\034\uffbe\035\uffbe\036\uffbe\037\uffbe\040\uffbe\041" +
    "\uffbe\042\uffbe\043\uffbe\044\uffbe\045\uffbe\046\uffbe\047\uffbe" +
    "\050\uffbe\051\uffbe\052\uffbe\053\uffbe\054\uffbe\055\uffbe\056" +
    "\uffbe\057\uffbe\060\uffbe\061\uffbe\062\uffbe\063\uffbe\064\uffbe" +
    "\065\uffbe\066\uffbe\067\uffbe\070\uffbe\071\uffbe\072\uffbe\073" +
    "\uffbe\074\uffbe\075\uffbe\076\uffbe\077\uffbe\100\uffbe\101\uffbe" +
    "\102\uffbe\103\uffbe\104\uffbe\105\uffbe\106\uffbe\107\uffbe\110" +
    "\uffbe\111\uffbe\112\uffbe\113\uffbe\114\uffbe\115\uffbe\116\uffbe" +
    "\117\uffbe\120\uffbe\121\uffbe\122\uffbe\123\uffbe\124\uffbe\125" +
    "\uffbe\126\uffbe\127\uffbe\130\uffbe\131\uffbe\132\uffbe\133\uffbe" +
    "\134\uffbe\135\uffbe\136\uffbe\137\uffbe\140\uffbe\141\uffbe\142" +
    "\uffbe\143\uffbe\144\uffbe\145\uffbe\146\uffbe\147\uffbe\150\uffbe" +
    "\151\uffbe\152\uffbe\153\uffbe\154\uffbe\155\uffbe\156\uffbe\157" +
    "\uffbe\160\uffbe\161\uffbe\162\uffbe\163\uffbe\164\uffbe\165\uffbe" +
    "\166\uffbe\167\uffbe\170\uffbe\171\uffbe\173\uffbe\174\uffbe\175" +
    "\uffbe\176\uffbe\177\uffbe\200\uffbe\201\uffbe\202\uffbe\203\uffbe" +
    "\204\uffbe\205\uffbe\206\uffbe\207\uffbe\210\uffbe\211\uffbe\212" +
    "\uffbe\213\uffbe\214\uffbe\215\uffbe\216\uffbe\217\uffbe\220\uffbe" +
    "\221\uffbe\222\uffbe\223\uffbe\224\uffbe\225\uffbe\226\uffbe\227" +
    "\uffbe\230\uffbe\233\uffbe\234\uffbe\236\uffbe\240\uffbe\247\uffbe" +
    "\264\uffbe\267\uffbe\271\uffbe\273\uffbe\274\uffbe\275\uffbe\001" +
    "\002\000\004\002\001\001\002\000\004\246\u01db\001\002" +
    "\000\u0114\016\144\017\166\020\071\030\201\031\200\032" +
    "\175\033\174\034\171\035\031\036\030\037\026\040\025" +
    "\041\024\042\167\043\207\044\163\045\162\046\161\047" +
    "\156\050\155\051\153\052\152\053\146\054\124\055\123" +
    "\056\122\057\121\060\120\061\117\062\115\063\114\064" +
    "\074\065\073\066\072\067\070\070\067\071\066\072\065" +
    "\073\063\074\050\075\047\076\046\077\044\100\042\101" +
    "\041\102\036\103\035\104\225\105\223\106\220\107\217" +
    "\110\204\111\203\112\202\113\177\114\176\115\173\116" +
    "\172\117\170\120\147\121\145\122\142\123\141\124\140" +
    "\125\137\126\134\127\133\130\113\131\112\132\111\133" +
    "\110\134\107\135\106\136\105\137\104\140\064\141\062" +
    "\142\061\143\057\144\056\145\055\146\054\147\053\150" +
    "\034\151\033\152\032\153\027\154\231\155\230\156\226" +
    "\157\224\160\222\161\221\162\216\163\215\164\132\165" +
    "\131\166\130\167\127\170\126\171\125\173\233\174\077" +
    "\175\214\176\116\177\234\200\037\201\040\202\043\203" +
    "\052\204\143\205\210\206\205\207\157\210\151\211\232" +
    "\212\154\213\150\214\227\215\075\216\076\217\100\220" +
    "\101\221\102\222\103\223\060\224\211\225\135\226\212" +
    "\227\213\236\160\247\u01dc\264\011\267\164\271\206\273" +
    "\051\275\136\001\002\000\004\002\uffee\001\002\000\004" +
    "\247\u01de\001\002\000\004\002\uffef\001\002\000\u0100\030" +
    "\201\031\200\032\175\033\174\034\171\035\031\036\030" +
    "\037\026\040\025\041\024\042\167\043\207\044\163\045" +
    "\162\046\161\047\156\050\155\051\153\052\152\053\146" +
    "\054\124\055\123\056\122\057\121\060\120\061\117\062" +
    "\115\063\114\064\074\065\073\066\072\067\070\070\067" +
    "\071\066\072\065\073\063\074\050\075\047\076\046\077" +
    "\044\100\042\101\041\102\036\103\035\104\225\105\223" +
    "\106\220\107\217\110\204\111\203\112\202\113\177\114" +
    "\176\115\173\116\172\117\170\120\147\121\145\122\142" +
    "\123\141\124\140\125\137\126\134\127\133\130\113\131" +
    "\112\132\111\133\110\134\107\135\106\136\105\137\104" +
    "\140\064\141\062\142\061\143\057\144\056\145\055\146" +
    "\054\147\053\150\034\151\033\152\032\153\027\154\231" +
    "\155\230\156\226\157\224\160\222\161\221\162\216\163" +
    "\215\164\132\165\131\166\130\167\127\170\126\171\125" +
    "\173\233\174\077\175\214\176\116\177\234\200\037\201" +
    "\040\202\043\203\052\204\143\205\210\206\205\207\157" +
    "\210\151\211\232\212\154\213\150\214\227\215\075\216" +
    "\076\217\100\220\101\221\102\222\103\223\060\224\211" +
    "\225\135\226\212\227\213\001\002\000\u0114\016\144\017" +
    "\166\020\071\030\201\031\200\032\175\033\174\034\171" +
    "\035\031\036\030\037\026\040\025\041\024\042\167\043" +
    "\207\044\163\045\162\046\161\047\156\050\155\051\153" +
    "\052\152\053\146\054\124\055\123\056\122\057\121\060" +
    "\120\061\117\062\115\063\114\064\074\065\073\066\072" +
    "\067\070\070\067\071\066\072\065\073\063\074\050\075" +
    "\047\076\046\077\044\100\042\101\041\102\036\103\035" +
    "\104\225\105\223\106\220\107\217\110\204\111\203\112" +
    "\202\113\177\114\176\115\173\116\172\117\170\120\147" +
    "\121\145\122\142\123\141\124\140\125\137\126\134\127" +
    "\133\130\113\131\112\132\111\133\110\134\107\135\106" +
    "\136\105\137\104\140\064\141\062\142\061\143\057\144" +
    "\056\145\055\146\054\147\053\150\034\151\033\152\032" +
    "\153\027\154\231\155\230\156\226\157\224\160\222\161" +
    "\221\162\216\163\215\164\132\165\131\166\130\167\127" +
    "\170\126\171\125\173\233\174\077\175\214\176\116\177" +
    "\234\200\037\201\040\202\043\203\052\204\143\205\210" +
    "\206\205\207\157\210\151\211\232\212\154\213\150\214" +
    "\227\215\075\216\076\217\100\220\101\221\102\222\103" +
    "\223\060\224\211\225\135\226\212\227\213\236\160\247" +
    "\u01e7\264\011\267\164\271\206\273\051\275\136\001\002" +
    "\000\004\252\u01e2\001\002\000\006\024\u01e4\025\u01e3\001" +
    "\002\000\004\251\ufff2\001\002\000\004\251\ufff3\001\002" +
    "\000\004\251\u01e6\001\002\000\u0114\016\ufff5\017\ufff5\020" +
    "\ufff5\030\ufff5\031\ufff5\032\ufff5\033\ufff5\034\ufff5\035\ufff5" +
    "\036\ufff5\037\ufff5\040\ufff5\041\ufff5\042\ufff5\043\ufff5\044" +
    "\ufff5\045\ufff5\046\ufff5\047\ufff5\050\ufff5\051\ufff5\052\ufff5" +
    "\053\ufff5\054\ufff5\055\ufff5\056\ufff5\057\ufff5\060\ufff5\061" +
    "\ufff5\062\ufff5\063\ufff5\064\ufff5\065\ufff5\066\ufff5\067\ufff5" +
    "\070\ufff5\071\ufff5\072\ufff5\073\ufff5\074\ufff5\075\ufff5\076" +
    "\ufff5\077\ufff5\100\ufff5\101\ufff5\102\ufff5\103\ufff5\104\ufff5" +
    "\105\ufff5\106\ufff5\107\ufff5\110\ufff5\111\ufff5\112\ufff5\113" +
    "\ufff5\114\ufff5\115\ufff5\116\ufff5\117\ufff5\120\ufff5\121\ufff5" +
    "\122\ufff5\123\ufff5\124\ufff5\125\ufff5\126\ufff5\127\ufff5\130" +
    "\ufff5\131\ufff5\132\ufff5\133\ufff5\134\ufff5\135\ufff5\136\ufff5" +
    "\137\ufff5\140\ufff5\141\ufff5\142\ufff5\143\ufff5\144\ufff5\145" +
    "\ufff5\146\ufff5\147\ufff5\150\ufff5\151\ufff5\152\ufff5\153\ufff5" +
    "\154\ufff5\155\ufff5\156\ufff5\157\ufff5\160\ufff5\161\ufff5\162" +
    "\ufff5\163\ufff5\164\ufff5\165\ufff5\166\ufff5\167\ufff5\170\ufff5" +
    "\171\ufff5\173\ufff5\174\ufff5\175\ufff5\176\ufff5\177\ufff5\200" +
    "\ufff5\201\ufff5\202\ufff5\203\ufff5\204\ufff5\205\ufff5\206\ufff5" +
    "\207\ufff5\210\ufff5\211\ufff5\212\ufff5\213\ufff5\214\ufff5\215" +
    "\ufff5\216\ufff5\217\ufff5\220\ufff5\221\ufff5\222\ufff5\223\ufff5" +
    "\224\ufff5\225\ufff5\226\ufff5\227\ufff5\236\ufff5\247\ufff5\264" +
    "\ufff5\267\ufff5\271\ufff5\273\ufff5\275\ufff5\001\002\000\006" +
    "\026\ufff7\027\ufff7\001\002\000\006\252\u01eb\254\241\001" +
    "\002\000\004\247\u01ea\001\002\000\006\026\ufff6\027\ufff6" +
    "\001\002\000\156\024\u01e4\025\u01e3\030\256\031\255\032" +
    "\254\033\253\034\252\110\245\111\243\112\322\113\320" +
    "\114\316\115\313\116\312\117\311\120\303\121\300\122" +
    "\277\123\276\124\275\125\274\126\273\127\271\130\270" +
    "\131\267\132\266\133\263\134\262\135\261\136\260\137" +
    "\257\140\251\141\250\142\246\143\244\144\323\145\317" +
    "\146\315\147\314\150\305\151\304\152\302\153\301\205" +
    "\272\206\306\207\310\210\265\211\247\212\307\213\264" +
    "\214\242\270\325\271\326\276\327\001\002\000\004\251" +
    "\u01ed\001\002\000\u0114\016\ufff4\017\ufff4\020\ufff4\030\ufff4" +
    "\031\ufff4\032\ufff4\033\ufff4\034\ufff4\035\ufff4\036\ufff4\037" +
    "\ufff4\040\ufff4\041\ufff4\042\ufff4\043\ufff4\044\ufff4\045\ufff4" +
    "\046\ufff4\047\ufff4\050\ufff4\051\ufff4\052\ufff4\053\ufff4\054" +
    "\ufff4\055\ufff4\056\ufff4\057\ufff4\060\ufff4\061\ufff4\062\ufff4" +
    "\063\ufff4\064\ufff4\065\ufff4\066\ufff4\067\ufff4\070\ufff4\071" +
    "\ufff4\072\ufff4\073\ufff4\074\ufff4\075\ufff4\076\ufff4\077\ufff4" +
    "\100\ufff4\101\ufff4\102\ufff4\103\ufff4\104\ufff4\105\ufff4\106" +
    "\ufff4\107\ufff4\110\ufff4\111\ufff4\112\ufff4\113\ufff4\114\ufff4" +
    "\115\ufff4\116\ufff4\117\ufff4\120\ufff4\121\ufff4\122\ufff4\123" +
    "\ufff4\124\ufff4\125\ufff4\126\ufff4\127\ufff4\130\ufff4\131\ufff4" +
    "\132\ufff4\133\ufff4\134\ufff4\135\ufff4\136\ufff4\137\ufff4\140" +
    "\ufff4\141\ufff4\142\ufff4\143\ufff4\144\ufff4\145\ufff4\146\ufff4" +
    "\147\ufff4\150\ufff4\151\ufff4\152\ufff4\153\ufff4\154\ufff4\155" +
    "\ufff4\156\ufff4\157\ufff4\160\ufff4\161\ufff4\162\ufff4\163\ufff4" +
    "\164\ufff4\165\ufff4\166\ufff4\167\ufff4\170\ufff4\171\ufff4\173" +
    "\ufff4\174\ufff4\175\ufff4\176\ufff4\177\ufff4\200\ufff4\201\ufff4" +
    "\202\ufff4\203\ufff4\204\ufff4\205\ufff4\206\ufff4\207\ufff4\210" +
    "\ufff4\211\ufff4\212\ufff4\213\ufff4\214\ufff4\215\ufff4\216\ufff4" +
    "\217\ufff4\220\ufff4\221\ufff4\222\ufff4\223\ufff4\224\ufff4\225" +
    "\ufff4\226\ufff4\227\ufff4\236\ufff4\247\ufff4\264\ufff4\267\ufff4" +
    "\271\ufff4\273\ufff4\275\ufff4\001\002\000\004\241\u01f0\001" +
    "\002\000\004\021\uffff\001\002\000\004\242\u01f1\001\002" +
    "\000\004\251\u01f2\001\002\000\004\027\u01b9\001\002\000" +
    "\004\021\ufffe\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01f2\000\004\003\003\001\001\000\002\001\001\000" +
    "\014\004\007\006\005\010\011\020\012\021\013\001\001" +
    "\000\004\007\u01ee\001\001\000\002\001\001\000\004\005" +
    "\u01d8\001\001\000\002\001\001\000\004\006\u01c8\001\001" +
    "\000\006\020\012\021\u01c7\001\001\000\006\006\u01a7\010" +
    "\u01a8\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\012\235\014\234\017\164\020\044\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\012\u013a\014\234\017\164\020\044\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\015\327" +
    "\001\001\000\004\015\320\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\022\372\030\366\034\377\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\351\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u012d\001" +
    "\001\000\002\001\001\000\006\022\u0109\034\u010a\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u0104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\022\u0105\034\u0106\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\032\u011f\001\001\000\004\032\u010b\001" +
    "\001\000\006\022\u010c\034\u010d\001\001\000\012\032\u0112" +
    "\033\u010e\034\u0111\035\u011b\001\001\000\012\032\u0112\033" +
    "\u010e\034\u0111\035\u010f\001\001\000\006\032\u0118\034\u0119" +
    "\001\001\000\004\032\u0116\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\022\u0113\034\u0114\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u0117\001\001\000\002\001\001\000\004\022\u011a\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u0116\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\u0120\001\001\000\006\032\u0122\033\u0123\001" +
    "\001\000\002\001\001\000\006\022\u0113\034\u0125\001\001" +
    "\000\004\032\u0118\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\u012e\001\001\000\006\032\u012f" +
    "\033\u0130\001\001\000\004\022\u0113\001\001\000\004\032" +
    "\u0118\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\u013e\022" +
    "\u013d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u0141\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\u0144\001\001\000\002\001\001" +
    "\000\012\012\u0146\014\234\017\164\020\044\001\001\000" +
    "\002\001\001\000\012\012\u0148\014\234\017\164\020\044" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\022\u014c\001\001\000\002\001\001\000\012" +
    "\012\u014e\014\234\017\164\020\044\001\001\000\002\001" +
    "\001\000\012\012\u0150\014\234\017\164\020\044\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u0154\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\015\u0163\022\u015f" +
    "\023\u0161\024\u015d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u016b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\u0163\023\u016f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\025" +
    "\u0171\026\u0170\001\001\000\002\001\001\000\006\015\u0163" +
    "\023\u0172\001\001\000\006\025\u0171\026\u0173\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\u0176\014\234" +
    "\017\164\020\044\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\012\u017b" +
    "\014\234\017\164\020\044\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\015\u0183\023\u0161\024" +
    "\u0182\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\u0186\014\234\017\164\020\044\001" +
    "\001\000\004\037\u0187\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\u018a\014\234\017\164\020\044\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\u018e\014\234\017\164\020\044\001\001\000" +
    "\004\036\u018f\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\u0192\014\234\017\164\020\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\031\u0197\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\012\u019a\014\234\017\164\020\044" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\012" +
    "\u019d\014\234\017\164\020\044\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u01a2\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\031\u01a6\001\001\000\002\001" +
    "\001\000\004\007\u01c2\001\001\000\004\006\u01a9\001\001" +
    "\000\004\007\u01b7\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\u01ae\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\u01b1\014\234\017" +
    "\164\020\044\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\u01b4\014\234\017\164\020\044\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\u01bb\014\234\017" +
    "\164\020\044\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u01c0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u01c6\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\007\u01ca\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u01ce" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\u01d1\001\001\000\002\001\001\000\004\030\u01d6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\u01dc\014\234\017\164\020\044\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\013\u01df\014\u01e0\001\001\000\012\012\u01e8\014" +
    "\u01e7\017\164\020\044\001\001\000\002\001\001\000\004" +
    "\016\u01e4\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\015" +
    "\327\016\u01eb\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u01f2\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	static TablaDatos tabla = new TablaDatos();
	static int estado;
	StringBuffer m = new StringBuffer("");
    static StringBuffer []vec=new StringBuffer[10];
    static int i=0;
//*******************************************
   public void Documenta(int tipo)
   { m.append("Error de Sintaxis No."+tipo);
     ManejoDeErrores objeto=new ManejoDeErrores();
     String tip=objeto.Errores(tipo);
	  m.append("\n"+tip+"\n");
      vec[i++]=m;

   }
//*******************************************
   public void syntax_error(Symbol cur_token)
   {
   	estado=((Symbol)stack.peek()).parse_state;
   	  ManejoDeErrores obj = new ManejoDeErrores();
      String m=obj.analizaToken(cur_token);
      System.err.println("\n\nSimbolo actual analizado: "+m+"-->"+cur_token);
      //System.err.println("\n\nSimbolo actual analizado: "+cur_token);

   }
//******************************************
   public void report_error(String message, Object info)
   { if (info instanceof java_cup.runtime.Symbol)
     { java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
       if (s.left >= 0)
       { m.append("Linea "+ (s.left +1));
         if (s.right >= 0)
          m.append(", Columna "+(s.right)+"\n");
       }
     }
   }
/**************METODO MAIN ********/
public static void main(String[] arg)
 	{
	  /* Crea un objeto parser */
	  parser parserObj = new parser();
	  /* Asigna el Scanner */
	  Yylex miAnalizadorLexico = new Yylex(new InputStreamReader(System.in));
	  parserObj.setScanner(miAnalizadorLexico);
	  try{
		parserObj.parse();
		tabla.imprimir();
	  }
catch(Exception x){
	  parserObj.Documenta(estado);
  	  for(int j=0;j<i;j++)
		System.out.println(vec[j]);

	}

}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {



methodsTable tablaMetodos = new methodsTable();
String codigo="";
String miCodigo="";
String errores="";
String retardos="";
String auxiliar="";
String losMetodos="";
String aux="";
String auxno="";
String aux2="";
String auxsw="";
String p2="";
String p1="";
String aux3="";
String cadena_condiciones=" ";
String cadena_tipo="";
String cadena_parametros="";
String encadenamst="";
String cadena_decvar="";

	private static Stack<String>p = new Stack<String>();
	private static Stack<String>pila2 = new Stack<String>();

	private static int actualTmp=0;

	private static String nuevaTmp() {
		return "tmp"+(++actualTmp);
	}

	private static int actualEtq=0;

	private static String nuevaEtq() {
		return "etqY"+(++actualEtq);
	}



	private String generarTerceto(String terceto) {
		String tmp = nuevaTmp();
		//System.out.println("Terceto: "+tmp + terceto);
		return tmp;
	}

	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.etqVerdad = nuevaEtq();
		etqs.etqFalso = nuevaEtq();
		etqs.condicion = Rvalor1+condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
	//System.out.println("\tif "+ Rvalor1 + condicion + Rvalor2 +" goto etq Vd "+ etqs.etqVerdad);
	//RESULT=Rvalor1 + condicion + Rvalor2;
  //  System.out.println("\tgoto etq Falso: "+ etqs.etqFalso);
		return etqs;
	}

	private BloqueCondicion generarCondicion(String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.condicion = condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
		return etqs;
	}
	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2,String extra){
		BloqueCondicion etqs = new BloqueCondicion();

		etqs.condicion = Rvalor1+condicion+Rvalor2+extra;
		auxiliar="";
		return etqs;
	}




  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // puertost ::= INTCONRBIF 
            {
              String RESULT = null;
		int intrbifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbif = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbif + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // puertost ::= INTCONINTF 
            {
              String RESULT = null;
		int intintfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intintfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intintf = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intintf + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // puertost ::= INTCONT0IF 
            {
              String RESULT = null;
		int intt0ifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0if = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0if + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // puertost ::= INTCONRBIE 
            {
              String RESULT = null;
		int intrbieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbie + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // puertost ::= INTCONINTE 
            {
              String RESULT = null;
		int intinteleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intinteright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intinte = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intinte + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // puertost ::= INTCONT0IE 
            {
              String RESULT = null;
		int intt0ieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0ie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0ie + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // puertost ::= INTCONPEIE 
            {
              String RESULT = null;
		int intpeieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intpeieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intpeie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intpeie + "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // puertost ::= INTCONGIE 
            {
              String RESULT = null;
		int intgieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intgieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intgie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intgie +    "";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // puertost ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // puertost ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // puertost ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // puertost ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // puertost ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd7+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // puertost ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // puertost ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // puertost ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // puertost ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // puertost ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd2+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // puertost ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // puertost ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // puertost ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // puertost ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // puertost ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc5+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // puertost ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // puertost ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // puertost ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // puertost ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc1+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // puertost ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // puertost ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // puertost ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // puertost ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // puertost ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // puertost ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // puertost ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // puertost ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // puertost ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // puertost ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // puertost ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // puertost ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // puertost ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa4+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // puertost ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // puertost ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // puertost ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // puertost ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // puertost ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // puertost ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // puertost ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // puertost ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // puertost ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // puertos ::= ADCON1_VCFG0 
            {
              String RESULT = null;
		int adcg0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg0 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // puertos ::= ADCON1_VCFG1 
            {
              String RESULT = null;
		int adcg1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg1 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // puertos ::= ADCON1_ADFM 
            {
              String RESULT = null;
		int adc1fmleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adc1fmright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adc1fm = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adc1fm + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // puertos ::= ADCON0_ADON 
            {
              String RESULT = null;
		int adcadonleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcadonright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcadon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcadon+ " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // puertos ::= ADCON0_GO 
            {
              String RESULT = null;
		int adcgoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcgoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcgo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcgo + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // puertos ::= ADCON0_CHS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // puertos ::= ADCON0_CHS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // puertos ::= ADCON0_CHS2 
            {
              String RESULT = null;
		int adcs2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // puertos ::= ADCON0_CHS3 
            {
              String RESULT = null;
		int adcs3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // puertos ::= ADCON0_ADCS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // puertos ::= ADCON0_ADCS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // puertos ::= OPTIONREG_RBPU 
            {
              String RESULT = null;
		int oprbpuleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oprbpuright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oprbpu = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oprbpu + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // puertos ::= OPTIONREG_PS0 
            {
              String RESULT = null;
		int opps0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // puertos ::= OPTIONREG_PS1 
            {
              String RESULT = null;
		int opps1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // puertos ::= OPTIONREG_PS2 
            {
              String RESULT = null;
		int opps2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // puertos ::= OPTIONREG_PSA 
            {
              String RESULT = null;
		int oppsaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oppsa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oppsa + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // puertos ::= OPTIONREG_T0SE 
            {
              String RESULT = null;
		int opt0seleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0seright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0se = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0se + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // puertos ::= OPTIONREG_T0CS 
            {
              String RESULT = null;
		int opt0csleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0csright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0cs = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0cs + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // puertos ::= OPTIONREG_PS 
            {
              String RESULT = null;
		int oppsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // puertos ::= OPTIONREG_INTEDG 
            {
              String RESULT = null;
		int opintedgleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opintedgright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opintedg = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opintedg + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // puertos ::= INTCONRBIF 
            {
              String RESULT = null;
		int intrbifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbif = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbif + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // puertos ::= INTCONINTF 
            {
              String RESULT = null;
		int intintfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intintfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intintf = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intintf + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // puertos ::= INTCONT0IF 
            {
              String RESULT = null;
		int intt0ifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0if = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0if + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // puertos ::= INTCONRBIE 
            {
              String RESULT = null;
		int intrbieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // puertos ::= INTCONINTE 
            {
              String RESULT = null;
		int intinteleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intinteright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intinte = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intinte + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // puertos ::= INTCONT0IE 
            {
              String RESULT = null;
		int intt0ieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0ie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0ie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // puertos ::= INTCONPEIE 
            {
              String RESULT = null;
		int intpeieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intpeieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intpeie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intpeie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // puertos ::= INTCONGIE 
            {
              String RESULT = null;
		int intgieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intgieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intgie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intgie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // puertos ::= ANSELH5 
            {
              String RESULT = null;
		int anselh5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // puertos ::= ANSELH4 
            {
              String RESULT = null;
		int anselh4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // puertos ::= ANSELH3 
            {
              String RESULT = null;
		int anselh3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // puertos ::= ANSELH2 
            {
              String RESULT = null;
		int anselh2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // puertos ::= ANSELH1 
            {
              String RESULT = null;
		int anselh1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // puertos ::= ANSELH0 
            {
              String RESULT = null;
		int anselh0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // puertos ::= ANSEL7 
            {
              String RESULT = null;
		int ansel7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel7 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // puertos ::= ANSEL6 
            {
              String RESULT = null;
		int ansel6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel6 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // puertos ::= ANSEL5 
            {
              String RESULT = null;
		int ansel5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // puertos ::= ANSEL4 
            {
              String RESULT = null;
		int ansel4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // puertos ::= ANSEL3 
            {
              String RESULT = null;
		int ansel3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // puertos ::= ANSEL2 
            {
              String RESULT = null;
		int ansel2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // puertos ::= ANSEL1 
            {
              String RESULT = null;
		int ansel1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // puertos ::= ANSEL0 
            {
              String RESULT = null;
		int ansel0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // puertos ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // puertos ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // puertos ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // puertos ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // puertos ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pd7+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // puertos ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // puertos ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // puertos ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // puertos ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // puertos ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd2+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // puertos ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // puertos ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // puertos ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		     RESULT=pc7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // puertos ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pc6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // puertos ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc5+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // puertos ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // puertos ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // puertos ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // puertos ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc1+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // puertos ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // puertos ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // puertos ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // puertos ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // puertos ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // puertos ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // puertos ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // puertos ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // puertos ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // puertos ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 	RESULT=pa7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // puertos ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // puertos ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // puertos ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  	RESULT=pa4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // puertos ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // puertos ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // puertos ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // puertos ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // puertos ::= TE3 
            {
              String RESULT = null;
		int te3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // puertos ::= TE2 
            {
              String RESULT = null;
		int te2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // puertos ::= TE1 
            {
              String RESULT = null;
		int te1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // puertos ::= TE0 
            {
              String RESULT = null;
		int te0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // puertos ::= TD7 
            {
              String RESULT = null;
		int td7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // puertos ::= TD6 
            {
              String RESULT = null;
		int td6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // puertos ::= TD5 
            {
              String RESULT = null;
		int td5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // puertos ::= TD4 
            {
              String RESULT = null;
		int td4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // puertos ::= TD3 
            {
              String RESULT = null;
		int td3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // puertos ::= TD2 
            {
              String RESULT = null;
		int td2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // puertos ::= TD1 
            {
              String RESULT = null;
		int td1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // puertos ::= TD0 
            {
              String RESULT = null;
		int td0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // puertos ::= TC7 
            {
              String RESULT = null;
		int tc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // puertos ::= TC6 
            {
              String RESULT = null;
		int tc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // puertos ::= TC5 
            {
              String RESULT = null;
		int tc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // puertos ::= TC4 
            {
              String RESULT = null;
		int tc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // puertos ::= TC3 
            {
              String RESULT = null;
		int tc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // puertos ::= TC2 
            {
              String RESULT = null;
		int tc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // puertos ::= TC1 
            {
              String RESULT = null;
		int tc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // puertos ::= TC0 
            {
              String RESULT = null;
		int tc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // puertos ::= TB7 
            {
              String RESULT = null;
		int tb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // puertos ::= TB6 
            {
              String RESULT = null;
		int tb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // puertos ::= TB5 
            {
              String RESULT = null;
		int tb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // puertos ::= TB4 
            {
              String RESULT = null;
		int tb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // puertos ::= TB3 
            {
              String RESULT = null;
		int tb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // puertos ::= TB2 
            {
              String RESULT = null;
		int tb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // puertos ::= TB1 
            {
              String RESULT = null;
		int tb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // puertos ::= TB0 
            {
              String RESULT = null;
		int tb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // puertos ::= TA7 
            {
              String RESULT = null;
		int ta7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // puertos ::= TA6 
            {
              String RESULT = null;
		int ta6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // puertos ::= TA5 
            {
              String RESULT = null;
		int ta5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // puertos ::= TA4 
            {
              String RESULT = null;
		int ta4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // puertos ::= TA3 
            {
              String RESULT = null;
		int ta3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // puertos ::= TA2 
            {
              String RESULT = null;
		int ta2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // puertos ::= TA1 
            {
              String RESULT = null;
		int ta1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // puertos ::= TA0 
            {
              String RESULT = null;
		int ta0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // puertos ::= INTCON 
            {
              String RESULT = null;
		int intconleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intconright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intcon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = intcon + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // puertos ::= ANSELH 
            {
              String RESULT = null;
		int anselhleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselhright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = anselh + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // puertos ::= ANSEL 
            {
              String RESULT = null;
		int anselleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = ansel + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // puertos ::= TE 
            {
              String RESULT = null;
		int teleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int teright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=te+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // puertos ::= TD 
            {
              String RESULT = null;
		int tdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=td+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // puertos ::= TC 
            {
              String RESULT = null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=tc+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // puertos ::= TB 
            {
              String RESULT = null;
		int tbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=tb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // puertos ::= TA 
            {
              String RESULT = null;
		int taleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int taright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=ta+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // puertos ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // puertos ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // puertos ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // puertos ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // puertos ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // exprtipos ::= BINARIOCADENA 
            {
              String RESULT = null;
		int bileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int biright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String bi = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT=""+bi;
			
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // exprtipos ::= HEXACADENA 
            {
              String RESULT = null;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			 RESULT=""+hc;
			
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // exprtipos ::= CTELOGICA 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // exprtipos ::= CARACTER 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // exprtipos ::= NUMREAL 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // exprtipos ::= NUMERO 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		  
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // exprtipos ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			System.out.println("Esto es un identificador= "+id);
			 DatoSimbolo s;
			 if ((s = parser.tabla.buscar(id)) != null) {
				cadena_tipo=s.getTipo();
				RESULT =s.getValor() ;
			}else{
				System.out.println("Varible -->"+id+" no declarada");
			}

		  
              CUP$parser$result = new java_cup.runtime.Symbol(22/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // tipo ::= BOOLEAN 
            {
              String RESULT = null;
		
		  RESULT="bool";
		   
              CUP$parser$result = new java_cup.runtime.Symbol(21/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // tipo ::= CHAR 
            {
              String RESULT = null;
		
		 	RESULT="char";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(21/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // tipo ::= REAL 
            {
              String RESULT = null;
		
		 	RESULT="float";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(21/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // tipo ::= INTEGER 
            {
              String RESULT = null;
		
 		 	RESULT="int";
 		
              CUP$parser$result = new java_cup.runtime.Symbol(21/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // signo ::= AND 
            {
              String RESULT = null;
		        RESULT=" && "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // signo ::= OR 
            {
              String RESULT = null;
		         RESULT=" || "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // signo ::= DIFERENTE 
            {
              String RESULT = null;
		  RESULT=" != "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // signo ::= IGUAL2 
            {
              String RESULT = null;
		     RESULT=" == "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // signo ::= MAYORIGUAL 
            {
              String RESULT = null;
		 RESULT=" >= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // signo ::= MENORIGUAL 
            {
              String RESULT = null;
		 RESULT=" <= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // signo ::= MENOR 
            {
              String RESULT = null;
		      RESULT=" < ";  
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // signo ::= MAYOR 
            {
              String RESULT = null;
		       RESULT=" > ";  
              CUP$parser$result = new java_cup.runtime.Symbol(19/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // condicion_extra ::= signo item_condicion condicion_extra 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					cadena_condiciones =" "+sig+e1 +cadena_condiciones;
					RESULT =cadena_condiciones;
					//System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(20/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // condicion_extra ::= signo item_condicion 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					cadena_condiciones=" "+sig+e1;
					RESULT=cadena_condiciones;
					//System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(20/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // condicion ::= item_condicion signo item_condicion condicion_extra 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			 RESULT = generarCondicion(e1 ,sig, e2,c);
			
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // condicion ::= item_condicion signo item_condicion 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT = generarCondicion(e1 ,sig, e2);
			
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // item_condicion ::= HEXACADENA 
            {
              String RESULT = null;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=""+hc;
		
              CUP$parser$result = new java_cup.runtime.Symbol(17/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // item_condicion ::= BINARIOCADENA 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=""+n;
		
              CUP$parser$result = new java_cup.runtime.Symbol(17/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // item_condicion ::= puertost 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT=p;
		
              CUP$parser$result = new java_cup.runtime.Symbol(17/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // item_condicion ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT= Integer.toString(num);
		
              CUP$parser$result = new java_cup.runtime.Symbol(17/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // item_condicion ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=id;
		
              CUP$parser$result = new java_cup.runtime.Symbol(17/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // expression ::= NUMERO ID 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=n+id;
		
              CUP$parser$result = new java_cup.runtime.Symbol(16/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // expression ::= ID NUMERO 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=id+n;
		
              CUP$parser$result = new java_cup.runtime.Symbol(16/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // expression ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT= Integer.toString(num);
								//generarTerceto("="+num);
		
              CUP$parser$result = new java_cup.runtime.Symbol(16/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // expression ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=id;
              CUP$parser$result = new java_cup.runtime.Symbol(16/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // extraperamesta ::= extraperamesta operamesta expression 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					encadenamst=encadenamst+o+v;
					RESULT=encadenamst;
				
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // extraperamesta ::= operamesta expression 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT=o+v;
				
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // operamesta ::= DIVISION 
            {
              Object RESULT = null;
		RESULT="/";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // operamesta ::= MENOS 
            {
              Object RESULT = null;
		RESULT="-";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // operamesta ::= MAS 
            {
              Object RESULT = null;
		RESULT="+";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // cases ::= cases CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=c+"case "+e2+":\n";

			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // cases ::= CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT="case "+e2+":\n";

			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // cases ::= cases OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=c+"default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // cases ::= cases CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT=c+"case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // cases ::= OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		
				RESULT="default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // cases ::= CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // extraparentesis ::= extraparentesis operamesta parentesis 
            {
              String RESULT = null;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ep+op+p;
              CUP$parser$result = new java_cup.runtime.Symbol(27/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // extraparentesis ::= extraperamesta parentesis 
            {
              String RESULT = null;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ep+p;
              CUP$parser$result = new java_cup.runtime.Symbol(27/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // extraparentesis ::= parentesis 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=p;
              CUP$parser$result = new java_cup.runtime.Symbol(27/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // extraparentesis ::= operamesta parentesis 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=o+p;
              CUP$parser$result = new java_cup.runtime.Symbol(27/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // parentesis ::= LPAREN parentesis operamesta parentesis extraparentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+ep+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // parentesis ::= LPAREN parentesis operamesta expression extraparentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+ep+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // parentesis ::= LPAREN parentesis operamesta expression RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+e+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // parentesis ::= LPAREN parentesis operamesta parentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // parentesis ::= LPAREN expression operamesta expression operamesta parentesis RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int o2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int o2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+o2+p+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // parentesis ::= LPAREN expression operamesta expression extraperamesta RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String eo = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+eo+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // parentesis ::= LPAREN expression operamesta expression RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // parentesis ::= LPAREN expression RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+")";
              CUP$parser$result = new java_cup.runtime.Symbol(26/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // declvar ::= TIPOVC ID DOSPUNTOS tipo IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//RESULT = t;
				if(parser.tabla.buscar(id)!= null){
					//System.err.println(id + " redeclarada.");
				}else{
				 	//System.out.println("Mensaje "+id + "-->"+e);
				 	switch(t){
			            case "int":
			                if(Num.valInt(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			                }else{
			                	String msj="//La variable: "+id+" es una cadena "+e+" y no es compatible con un tipo de dato INT\n";
			                    RESULT= msj;
			                }
			                break;
			            case "float":
			            	if(Num.valFloat(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			            	}else{
			            		String msj="//La variable: "+id+" es una cadena "+e+" y no es compatible con un tipo de dato FLOAT\n";
			                    RESULT= msj;
			            	}
			                break;
			            case "char":
			            	if(Num.valInt(e) || Num.valFloat(e)){
				                String msj="//La variable: "+id+" es un numero "+e+" y no es compatible con un CARACTER\n";
			                    RESULT= msj;
				            }else{
				                RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
				            }
			                break;
			            case "bool":
			            	if(e.equalsIgnoreCase("TRUE") || e.equalsIgnoreCase("FALSE")){
			            		RESULT="\n\t"+t+" "+id+" ="+e.toLowerCase()+";";
			            		parser.tabla.insertar(id,t,e);
			            	}else{
			            		String msj="\n//La variable: "+id+" es un valor no compatible "+e+" se requiere TRUE o FALSE\n";
			                    RESULT= msj;
			            	}
			                break;
			            default :
			            	String msj="//Tipo de dato desconocido: "+t+"\n";
			                    RESULT= msj;
		        	}
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(14/*declvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // declvar ::= TIPOVC ID DOSPUNTOS tipo PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				DatoSimbolo ds=parser.tabla.buscar(id);
				if(ds!= null)
					System.err.println(id + " redeclarada.");
				else{
				 //	System.out.println("Mensaje "+id + "-->"+t);
				 	RESULT="\n\t"+t+" "+id+";";
					parser.tabla.insertar(id, t,"");
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(14/*declvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // muchasdeclvar ::= declvar muchasdeclvar 
            {
              String RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					cadena_decvar=dv+cadena_decvar;
					RESULT=cadena_decvar;
			
              CUP$parser$result = new java_cup.runtime.Symbol(15/*muchasdeclvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // muchasdeclvar ::= declvar 
            {
              String RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			cadena_decvar=dv;
					RESULT=cadena_decvar;
			
              CUP$parser$result = new java_cup.runtime.Symbol(15/*muchasdeclvar*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // instruccion ::= ID IGUAL parentesis operamesta expression PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+o+e+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // instruccion ::= ID IGUAL parentesis operamesta parentesis PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+o+p2+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // instruccion ::= ID IGUAL parentesis PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // instruccion ::= ID IGUAL expression operamesta expression extraperamesta PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String eo = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+v2+o+v3+eo+";\n";
				encadenamst="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // instruccion ::= ID IGUAL expression operamesta expression PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+v2+o+v3+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // instruccion ::= ID IGUAL ID RECBITSDER NUMERO PCOMA 
            {
              String RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					RESULT = var +"="+v+"<<"+n+";\n";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // instruccion ::= ID IGUAL ID RECBITSIZQ NUMERO PCOMA 
            {
              String RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					RESULT = var +"="+v+">>"+n+";\n";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // instruccion ::= ID RECBITSDER NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+">>"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // instruccion ::= ID RECBITSIZQ NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"<<"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // instruccion ::= WHILE LPAREN expression RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";
		  
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // instruccion ::= WHILE LPAREN condicion RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c.condicion+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // instruccion ::= SWITCH LPAREN puertost RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+p+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // instruccion ::= SWITCH LPAREN expression RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+e+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones NT$1 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		

					p1=pila2.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+p+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$1 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;


					pila2.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(29/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones NT$0 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		

					p1=p.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+c.condicion+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$0 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;


					p.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(28/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				aux="\n\t\tif("+p+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				aux="\n\t\tif("+c.condicion+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // instruccion ::= TMR0 IGUAL HEXACADENA PCOMA 
            {
              String RESULT = null;
		int tmleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int tmright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object tm = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT = tm+"= "+hc;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // instruccion ::= RETURN PCOMA 
            {
              String RESULT = null;
		
				RESULT="return;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // instruccion ::= ID MENOS MENOS PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=v+"--;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // instruccion ::= ID MAS MAS PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=v+"++;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // instruccion ::= puertos IGUAL puertost MAS ID PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=p+u+"+"+v+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // instruccion ::= puertos IGUAL puertost MAS NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=p+u+"+"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // instruccion ::= DELAY LLLAVE NUMERO RLLAVE PCOMA 
            {
              String RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				//retardos= retardos+c+"("+n+");\n";
	   			RESULT=c+"("+n+");\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // instruccion ::= CHALE LPAREN NUMERO RPAREN PCOMA 
            {
              String RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				//retardos= retardos+c+"("+n+");\n";
	   			RESULT=c+"("+n+");\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // instruccion ::= ID LPAREN expression RPAREN PCOMA 
            {
              String RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String ex = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				Metodos s;
				if ((s = tablaMetodos.search(i)) == null)
				{System.out.println(i+ " es una METODO no definido");}
				else
				{
					// System.out.println(i+" instrucciones del metodo => "+s.getValor());
					//System.out.println("codigo intermedio==> "+i+"();");
					RESULT="\t"+i+"("+ex+");\n";
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // instruccion ::= ID LPAREN RPAREN PCOMA 
            {
              String RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				Metodos s;
				if ((s = tablaMetodos.search(i)) == null)
				{System.out.println(i+ " es una METODO no definido");}
				else
				{
					// System.out.println(i+" instrucciones del metodo => "+s.getValor());
					//System.out.println("codigo intermedio==> "+i+"();");
					RESULT="\t"+i+"();\n";
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // instruccion ::= puertos IGUAL ID PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			//   miCodigo=p+t+u+";\n"+miCodigo;
			RESULT="\n\t"+p+n+";\n";
			//System.out.println("cadena de toggles:"+RESULT);
		
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // instruccion ::= puertos IGUAL BINARIOCADENA PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			 //   miCodigo=p+t+u+";\n"+miCodigo;
			 RESULT="\n\t"+p+n+";\n";
			 //System.out.println("cadena de toggles:"+RESULT);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // instruccion ::= puertos IGUAL NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+n+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // instruccion ::= puertos TOGGLE puertost PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+t+u+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // instruccion ::= ID IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			//System.out.println("Mensaje "+id + "-->"+t);
			DatoSimbolo ds=parser.tabla.buscar(id);
			 if(ds!= null){
			 	//System.err.println(id + " redeclarada.");
			 RESULT="\n\t"+id+"="+t+";";
			}
			 else{
			 	System.out.println("Error al Asignar valor a: "+id);
			}


			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // instruccion ::= declvar 
            {
              String RESULT = null;
		int dleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String d = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				 RESULT="\n\t"+d;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // instrucciones ::= instruccion instrucciones 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			//	System.out.println("valor de in en instrucciones:"+in);
				auxiliar=in+auxiliar;
				//RESULT=in;
                //aux=in;
			//	System.out.println("cadena de varias instrucciones en aux:"+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // instrucciones ::= instruccion 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				//System.out.println("valor de in en intruccion:"+in);
				auxiliar=in + auxiliar;
                //aux=in;
				//RESULT=in;
				//System.out.println("cadena de una istruccion en aux: "+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametros ::= ID DOSPUNTOS tipo COMA parametros 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				cadena_parametros=" "+t+" "+id+" ,"+cadena_parametros;
			
              CUP$parser$result = new java_cup.runtime.Symbol(23/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametros ::= ID DOSPUNTOS tipo 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				cadena_parametros=" "+t+" "+id;
			
              CUP$parser$result = new java_cup.runtime.Symbol(23/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // metodo ::= metodo VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // metodo ::= VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{
				s.setvalue(auxiliar);
			}
			codigo=v+i+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // metodo ::= metodo VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // metodo ::= VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
					Metodos s;
					if ((s = tablaMetodos.search(i)) == null)
						s = tablaMetodos.insert(i,auxiliar);
					else
					{
						s.setvalue(auxiliar);
					}
					codigo=v+i+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
					losMetodos=losMetodos+codigo;
				    auxiliar="";
					//System.out.println("codigo intermedio==> int "+codigo);
				
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // metodo ::= VOID INTERRUPT ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int itleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int itright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object it = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{
				s.setvalue(auxiliar);
			}
			codigo=v+""+it+i+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // main ::= MAIN LLLAVE RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n\n\t\t return; \n\t }";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // main ::= MAIN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n"+auxiliar+"\n\t\t return; \n\t }";
		    auxiliar="";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ciclo ::= CICLO LLLAVE RLLAVE 
            {
              Object RESULT = null;
		int cicloleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cicloright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object ciclo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
        	miCodigo=miCodigo+ciclo+"{\n\t \t \n\n \t\t\n\n\t}";
        
              CUP$parser$result = new java_cup.runtime.Symbol(5/*ciclo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ciclo ::= CICLO LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int cicloleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cicloright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object ciclo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+ciclo+"{\n\t \t \n\n"+ auxiliar +"\t\t\n\n\t}";
			auxiliar="";
        
              CUP$parser$result = new java_cup.runtime.Symbol(5/*ciclo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // io ::= SALIDA 
            {
              String RESULT = null;
		int salidaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int salidaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object salida = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		RESULT="0;\n";
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // io ::= ENTRADA 
            {
              String RESULT = null;
		
		RESULT="1;\n";
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // confpuertos ::= confpuertos puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
	        
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // confpuertos ::= puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
			
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // setup ::= SETUP LLLAVE confpuertos instrucciones RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
	        //System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;\n\tANSEL=0;\n"+miCodigo+auxiliar+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // setup ::= SETUP LLLAVE confpuertos RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			//System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;"+miCodigo+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // metodos ::= muchasdeclvar setup ciclo 
            {
              Object RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // metodos ::= muchasdeclvar metodo setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
				miCodigo=dv+retardo+losMetodos+miCodigo;
			
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // metodos ::= muchasdeclvar metodo setup ciclo 
            {
              Object RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				miCodigo=dv+losMetodos+miCodigo;
			
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // metodos ::= muchasdeclvar setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int dvleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int dvright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String dv = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 miCodigo=dv+retardo+miCodigo;  
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // metodos ::= metodo setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
					miCodigo=retardo+losMetodos+miCodigo;
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // metodos ::= metodo setup ciclo 
            {
              Object RESULT = null;
		
					miCodigo=losMetodos+miCodigo;
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // metodos ::= setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 miCodigo=retardo+miCodigo;  
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // metodos ::= setup ciclo 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= programa EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // programa ::= FUSES metodos main 
            {
              Object RESULT = null;
		int fusesleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int fusesright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object fuses = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
 					miCodigo=fuses+miCodigo;
              		 // System.out.println("Clase Generada\n\n"+miCodigo+"\n\n");
                File miClase;
	        	try{
	            	miClase = new File("mapic.c");
	            	if(miClase.exists())
	            		miClase.delete();
	            	if(miClase.createNewFile()){
	                	//System.out.println("Se ha creado el archivo");
	            	}
	            	FileWriter escribir=new FileWriter(miClase,true);
	            	escribir.write(miCodigo);
	            	escribir.close();
	        	}catch(IOException e){
	        		System.out.println("ERROR NO SE PUEDE CREAR EL ARCHIVO ");
	        	}


              CUP$parser$result = new java_cup.runtime.Symbol(1/*programa*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

