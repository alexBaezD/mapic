
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Wed Jul 08 03:18:19 CDT 2015
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Stack;

/** CUP v0.10k generated parser.
  * @version Wed Jul 08 03:18:19 CDT 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\374\000\002\003\005\000\002\002\004\000\002\004" +
    "\004\000\002\004\010\000\002\004\005\000\002\004\011" +
    "\000\002\006\006\000\002\006\007\000\002\013\006\000" +
    "\002\013\007\000\002\016\003\000\002\016\003\000\002" +
    "\007\006\000\002\005\006\000\002\005\005\000\002\010" +
    "\011\000\002\010\012\000\002\010\012\000\002\010\013" +
    "\000\002\027\005\000\002\027\007\000\002\012\003\000" +
    "\002\012\004\000\002\017\007\000\002\017\011\000\002" +
    "\017\006\000\002\017\006\000\002\017\006\000\002\017" +
    "\006\000\002\017\007\000\002\017\010\000\002\017\004" +
    "\000\002\017\011\000\002\017\011\000\002\032\002\000" +
    "\002\017\014\000\002\033\002\000\002\017\014\000\002" +
    "\017\012\000\002\017\012\000\002\017\012\000\002\017" +
    "\012\000\002\017\006\000\002\017\006\000\002\017\010" +
    "\000\002\017\011\000\002\011\006\000\002\011\005\000" +
    "\002\011\007\000\002\011\006\000\002\011\005\000\002" +
    "\011\006\000\002\030\003\000\002\030\003\000\002\031" +
    "\004\000\002\031\005\000\002\020\003\000\002\020\003" +
    "\000\002\021\003\000\002\021\003\000\002\021\003\000" +
    "\002\021\004\000\002\021\004\000\002\022\005\000\002" +
    "\022\006\000\002\024\004\000\002\024\005\000\002\023" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\025\003\000\002\025\003\000\002" +
    "\025\003\000\002\025\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\026\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u018b\000\004\021\005\001\002\000\004\002\u018d\001" +
    "\002\000\006\020\006\230\012\001\002\000\004\244\u017e" +
    "\001\002\000\006\024\u0178\025\u0169\001\002\000\004\017" +
    "\u0173\001\002\000\006\020\006\230\u015c\001\002\000\004" +
    "\267\013\001\002\000\004\240\014\001\002\000\006\241" +
    "\016\267\015\001\002\000\004\246\u0157\001\002\000\004" +
    "\244\u0154\001\002\000\004\241\020\001\002\000\004\244" +
    "\021\001\002\000\u010e\016\141\026\175\027\174\030\172" +
    "\031\167\032\166\033\027\034\026\035\024\036\023\037" +
    "\022\040\162\041\203\044\157\045\156\046\155\047\152" +
    "\050\151\051\147\052\146\053\144\054\120\055\117\056" +
    "\116\057\115\060\114\061\113\062\112\063\107\064\070" +
    "\065\067\066\066\067\065\070\064\071\063\072\062\073" +
    "\061\074\045\075\044\076\043\077\042\100\040\101\037" +
    "\102\034\103\032\104\221\105\217\106\215\107\213\110" +
    "\200\111\177\112\176\113\173\114\171\115\170\116\165" +
    "\117\164\120\142\121\140\122\136\123\135\124\134\125" +
    "\132\126\131\127\127\130\110\131\106\132\105\133\104" +
    "\134\103\135\102\136\101\137\100\140\060\141\057\142" +
    "\055\143\054\144\053\145\052\146\051\147\050\150\033" +
    "\151\031\152\030\153\025\154\225\155\223\156\222\157" +
    "\220\160\216\161\214\162\212\163\211\164\126\165\125" +
    "\166\124\167\123\170\122\171\121\173\227\174\073\175" +
    "\210\176\111\177\230\200\035\201\036\202\041\203\047" +
    "\204\137\205\204\206\201\207\153\210\145\211\226\212" +
    "\150\213\143\214\224\215\071\216\072\217\074\220\075" +
    "\221\076\222\077\223\056\224\205\225\130\226\206\227" +
    "\207\235\154\262\163\265\160\267\202\271\046\273\133" +
    "\001\002\000\006\250\uffa4\252\uffa4\001\002\000\006\250" +
    "\uffa5\252\uffa5\001\002\000\006\250\uffa6\252\uffa6\001\002" +
    "\000\006\250\uff59\252\uff59\001\002\000\006\250\uffa7\252" +
    "\uffa7\001\002\000\006\250\uffa8\252\uffa8\001\002\000\006" +
    "\250\uff5a\252\uff5a\001\002\000\006\250\uff5b\252\uff5b\001" +
    "\002\000\006\250\uff81\252\uff81\001\002\000\006\250\uff5c" +
    "\252\uff5c\001\002\000\006\250\uff82\252\uff82\001\002\000" +
    "\006\250\uff3d\252\uff3d\001\002\000\006\250\uff3c\252\uff3c" +
    "\001\002\000\006\250\uff83\252\uff83\001\002\000\006\250" +
    "\uff84\252\uff84\001\002\000\006\250\uff3b\252\uff3b\001\002" +
    "\000\006\250\uff85\252\uff85\001\002\000\006\250\uff86\252" +
    "\uff86\001\002\000\006\250\uff87\252\uff87\001\002\000\006" +
    "\250\uff88\252\uff88\001\002\000\004\240\u0141\001\002\000" +
    "\006\250\uff3a\252\uff3a\001\002\000\006\250\uff5d\252\uff5d" +
    "\001\002\000\006\250\uff5e\252\uff5e\001\002\000\006\250" +
    "\uff5f\252\uff5f\001\002\000\006\250\uff60\252\uff60\001\002" +
    "\000\006\250\uff61\252\uff61\001\002\000\006\250\uff62\252" +
    "\uff62\001\002\000\006\250\uff33\252\uff33\001\002\000\006" +
    "\250\uff63\252\uff63\001\002\000\006\250\uff64\252\uff64\001" +
    "\002\000\006\250\uff89\252\uff89\001\002\000\006\250\uff8a" +
    "\252\uff8a\001\002\000\006\250\uff8b\252\uff8b\001\002\000" +
    "\006\250\uff8c\252\uff8c\001\002\000\006\250\uff8d\252\uff8d" +
    "\001\002\000\006\250\uff8e\252\uff8e\001\002\000\006\250" +
    "\uff8f\252\uff8f\001\002\000\006\250\uff90\252\uff90\001\002" +
    "\000\006\250\uff39\252\uff39\001\002\000\006\250\uff38\252" +
    "\uff38\001\002\000\006\250\uff41\252\uff41\001\002\000\006" +
    "\250\uff37\252\uff37\001\002\000\006\250\uff36\252\uff36\001" +
    "\002\000\006\250\uff35\252\uff35\001\002\000\006\250\uff34" +
    "\252\uff34\001\002\000\006\250\uff65\252\uff65\001\002\000" +
    "\006\250\uff66\252\uff66\001\002\000\006\250\uff67\252\uff67" +
    "\001\002\000\006\250\uff68\252\uff68\001\002\000\006\250" +
    "\uff69\252\uff69\001\002\000\006\250\uff6a\252\uff6a\001\002" +
    "\000\006\250\uff6b\252\uff6b\001\002\000\006\250\uff91\252" +
    "\uff91\001\002\000\006\250\uff6c\252\uff6c\001\002\000\006" +
    "\250\uff3f\252\uff3f\001\002\000\006\250\uff92\252\uff92\001" +
    "\002\000\006\250\uff93\252\uff93\001\002\000\006\250\uff94" +
    "\252\uff94\001\002\000\006\250\uff95\252\uff95\001\002\000" +
    "\006\250\uff96\252\uff96\001\002\000\006\250\uff97\252\uff97" +
    "\001\002\000\006\250\uff98\252\uff98\001\002\000\006\250" +
    "\uff4b\252\uff4b\001\002\000\006\250\uff4c\252\uff4c\001\002" +
    "\000\006\250\uff4d\252\uff4d\001\002\000\006\250\uff4e\252" +
    "\uff4e\001\002\000\006\250\uff4f\252\uff4f\001\002\000\006" +
    "\250\uff50\252\uff50\001\002\000\006\250\uff6d\252\uff6d\001" +
    "\002\000\006\250\uff31\252\uff31\001\002\000\006\250\uff6e" +
    "\252\uff6e\001\002\000\006\250\uff6f\252\uff6f\001\002\000" +
    "\004\240\u011c\001\002\000\006\250\uff70\252\uff70\001\002" +
    "\000\006\250\uff71\252\uff71\001\002\000\006\250\uff72\252" +
    "\uff72\001\002\000\006\250\uffa1\252\uffa1\001\002\000\006" +
    "\250\uff73\252\uff73\001\002\000\004\240\u0118\001\002\000" +
    "\006\250\uff74\252\uff74\001\002\000\006\250\uff44\252\uff44" +
    "\001\002\000\006\250\uff99\252\uff99\001\002\000\006\250" +
    "\uff47\252\uff47\001\002\000\006\250\uff9a\252\uff9a\001\002" +
    "\000\006\250\uff9b\252\uff9b\001\002\000\006\250\uff45\252" +
    "\uff45\001\002\000\006\250\uff9c\252\uff9c\001\002\000\006" +
    "\250\uff9d\252\uff9d\001\002\000\006\250\uff48\252\uff48\001" +
    "\002\000\004\240\375\001\002\000\006\250\uff9e\252\uff9e" +
    "\001\002\000\006\250\uff9f\252\uff9f\001\002\000\006\250" +
    "\uffa0\252\uffa0\001\002\000\004\247\374\001\002\000\u0118" +
    "\016\141\026\175\027\174\030\172\031\167\032\166\033" +
    "\027\034\026\035\024\036\023\037\022\040\162\041\203" +
    "\044\157\045\156\046\155\047\152\050\151\051\147\052" +
    "\146\053\144\054\120\055\117\056\116\057\115\060\114" +
    "\061\113\062\112\063\107\064\070\065\067\066\066\067" +
    "\065\070\064\071\063\072\062\073\061\074\045\075\044" +
    "\076\043\077\042\100\040\101\037\102\034\103\032\104" +
    "\221\105\217\106\215\107\213\110\200\111\177\112\176" +
    "\113\173\114\171\115\170\116\165\117\164\120\142\121" +
    "\140\122\136\123\135\124\134\125\132\126\131\127\127" +
    "\130\110\131\106\132\105\133\104\134\103\135\102\136" +
    "\101\137\100\140\060\141\057\142\055\143\054\144\053" +
    "\145\052\146\051\147\050\150\033\151\031\152\030\153" +
    "\025\154\225\155\223\156\222\157\220\160\216\161\214" +
    "\162\212\163\211\164\126\165\125\166\124\167\123\170" +
    "\122\171\121\173\227\174\073\175\210\176\111\177\230" +
    "\200\035\201\036\202\041\203\047\204\137\205\204\206" +
    "\201\207\153\210\145\211\226\212\150\213\143\214\224" +
    "\215\071\216\072\217\074\220\075\221\076\222\077\223" +
    "\056\224\205\225\130\226\206\227\207\232\uffec\233\uffec" +
    "\235\154\237\uffec\245\uffec\262\163\265\160\267\202\271" +
    "\046\272\uffec\273\133\001\002\000\006\250\uffa3\252\uffa3" +
    "\001\002\000\004\267\356\001\002\000\006\250\uff75\252" +
    "\uff75\001\002\000\006\250\uff76\252\uff76\001\002\000\006" +
    "\250\uffa9\252\uffa9\001\002\000\006\250\uffaa\252\uffaa\001" +
    "\002\000\006\250\uff77\252\uff77\001\002\000\006\250\uff78" +
    "\252\uff78\001\002\000\006\250\uffab\252\uffab\001\002\000" +
    "\006\250\uff79\252\uff79\001\002\000\006\250\uffac\252\uffac" +
    "\001\002\000\006\250\uffad\252\uffad\001\002\000\006\250" +
    "\uff7a\252\uff7a\001\002\000\006\250\uff7b\252\uff7b\001\002" +
    "\000\006\250\uff7c\252\uff7c\001\002\000\006\250\uff49\252" +
    "\uff49\001\002\000\012\240\322\250\317\263\320\264\321" +
    "\001\002\000\006\250\uffa2\252\uffa2\001\002\000\006\250" +
    "\uff4a\252\uff4a\001\002\000\006\250\uff32\252\uff32\001\002" +
    "\000\006\250\uff30\252\uff30\001\002\000\006\250\uff2f\252" +
    "\uff2f\001\002\000\006\250\uff40\252\uff40\001\002\000\006" +
    "\250\uff51\252\uff51\001\002\000\006\250\uff52\252\uff52\001" +
    "\002\000\006\250\uff7d\252\uff7d\001\002\000\006\250\uff53" +
    "\252\uff53\001\002\000\006\250\uff7e\252\uff7e\001\002\000" +
    "\006\250\uff54\252\uff54\001\002\000\006\250\uff7f\252\uff7f" +
    "\001\002\000\006\250\uff55\252\uff55\001\002\000\006\250" +
    "\uff80\252\uff80\001\002\000\006\250\uff56\252\uff56\001\002" +
    "\000\006\250\uff57\252\uff57\001\002\000\006\250\uff43\252" +
    "\uff43\001\002\000\006\250\uff58\252\uff58\001\002\000\006" +
    "\250\uff46\252\uff46\001\002\000\006\250\uff42\252\uff42\001" +
    "\002\000\006\250\uff3e\252\uff3e\001\002\000\006\250\234" +
    "\252\235\001\002\000\004\245\233\001\002\000\006\020" +
    "\ufff0\230\ufff0\001\002\000\126\026\250\027\247\030\246" +
    "\031\245\032\244\110\240\111\236\112\307\113\303\114" +
    "\301\115\277\116\276\117\275\120\271\121\267\122\266" +
    "\123\265\124\264\125\263\126\262\127\261\130\260\131" +
    "\257\132\256\133\255\134\254\135\253\136\252\137\251" +
    "\140\243\141\242\142\241\143\237\144\305\145\304\146" +
    "\302\147\300\150\274\151\273\152\272\153\270\266\311" +
    "\001\002\000\124\026\250\027\247\030\246\031\245\032" +
    "\244\110\240\111\236\112\307\113\303\114\301\115\277" +
    "\116\276\117\275\120\271\121\267\122\266\123\265\124" +
    "\264\125\263\126\262\127\261\130\260\131\257\132\256" +
    "\133\255\134\254\135\253\136\252\137\251\140\243\141" +
    "\242\142\241\143\237\144\305\145\304\146\302\147\300" +
    "\150\274\151\273\152\272\153\270\001\002\000\030\241" +
    "\uff28\242\uff28\247\uff28\251\uff28\253\uff28\254\uff28\255\uff28" +
    "\256\uff28\257\uff28\260\uff28\261\uff28\001\002\000\030\241" +
    "\uff0e\242\uff0e\247\uff0e\251\uff0e\253\uff0e\254\uff0e\255\uff0e" +
    "\256\uff0e\257\uff0e\260\uff0e\261\uff0e\001\002\000\030\241" +
    "\uff29\242\uff29\247\uff29\251\uff29\253\uff29\254\uff29\255\uff29" +
    "\256\uff29\257\uff29\260\uff29\261\uff29\001\002\000\030\241" +
    "\uff0f\242\uff0f\247\uff0f\251\uff0f\253\uff0f\254\uff0f\255\uff0f" +
    "\256\uff0f\257\uff0f\260\uff0f\261\uff0f\001\002\000\030\241" +
    "\uff10\242\uff10\247\uff10\251\uff10\253\uff10\254\uff10\255\uff10" +
    "\256\uff10\257\uff10\260\uff10\261\uff10\001\002\000\030\241" +
    "\uff11\242\uff11\247\uff11\251\uff11\253\uff11\254\uff11\255\uff11" +
    "\256\uff11\257\uff11\260\uff11\261\uff11\001\002\000\030\241" +
    "\uff2a\242\uff2a\247\uff2a\251\uff2a\253\uff2a\254\uff2a\255\uff2a" +
    "\256\uff2a\257\uff2a\260\uff2a\261\uff2a\001\002\000\030\241" +
    "\uff2b\242\uff2b\247\uff2b\251\uff2b\253\uff2b\254\uff2b\255\uff2b" +
    "\256\uff2b\257\uff2b\260\uff2b\261\uff2b\001\002\000\030\241" +
    "\uff2c\242\uff2c\247\uff2c\251\uff2c\253\uff2c\254\uff2c\255\uff2c" +
    "\256\uff2c\257\uff2c\260\uff2c\261\uff2c\001\002\000\030\241" +
    "\uff2d\242\uff2d\247\uff2d\251\uff2d\253\uff2d\254\uff2d\255\uff2d" +
    "\256\uff2d\257\uff2d\260\uff2d\261\uff2d\001\002\000\030\241" +
    "\uff2e\242\uff2e\247\uff2e\251\uff2e\253\uff2e\254\uff2e\255\uff2e" +
    "\256\uff2e\257\uff2e\260\uff2e\261\uff2e\001\002\000\030\241" +
    "\uff12\242\uff12\247\uff12\251\uff12\253\uff12\254\uff12\255\uff12" +
    "\256\uff12\257\uff12\260\uff12\261\uff12\001\002\000\030\241" +
    "\uff13\242\uff13\247\uff13\251\uff13\253\uff13\254\uff13\255\uff13" +
    "\256\uff13\257\uff13\260\uff13\261\uff13\001\002\000\030\241" +
    "\uff14\242\uff14\247\uff14\251\uff14\253\uff14\254\uff14\255\uff14" +
    "\256\uff14\257\uff14\260\uff14\261\uff14\001\002\000\030\241" +
    "\uff15\242\uff15\247\uff15\251\uff15\253\uff15\254\uff15\255\uff15" +
    "\256\uff15\257\uff15\260\uff15\261\uff15\001\002\000\030\241" +
    "\uff16\242\uff16\247\uff16\251\uff16\253\uff16\254\uff16\255\uff16" +
    "\256\uff16\257\uff16\260\uff16\261\uff16\001\002\000\030\241" +
    "\uff17\242\uff17\247\uff17\251\uff17\253\uff17\254\uff17\255\uff17" +
    "\256\uff17\257\uff17\260\uff17\261\uff17\001\002\000\030\241" +
    "\uff18\242\uff18\247\uff18\251\uff18\253\uff18\254\uff18\255\uff18" +
    "\256\uff18\257\uff18\260\uff18\261\uff18\001\002\000\030\241" +
    "\uff19\242\uff19\247\uff19\251\uff19\253\uff19\254\uff19\255\uff19" +
    "\256\uff19\257\uff19\260\uff19\261\uff19\001\002\000\030\241" +
    "\uff1a\242\uff1a\247\uff1a\251\uff1a\253\uff1a\254\uff1a\255\uff1a" +
    "\256\uff1a\257\uff1a\260\uff1a\261\uff1a\001\002\000\030\241" +
    "\uff1b\242\uff1b\247\uff1b\251\uff1b\253\uff1b\254\uff1b\255\uff1b" +
    "\256\uff1b\257\uff1b\260\uff1b\261\uff1b\001\002\000\030\241" +
    "\uff1c\242\uff1c\247\uff1c\251\uff1c\253\uff1c\254\uff1c\255\uff1c" +
    "\256\uff1c\257\uff1c\260\uff1c\261\uff1c\001\002\000\030\241" +
    "\uff1d\242\uff1d\247\uff1d\251\uff1d\253\uff1d\254\uff1d\255\uff1d" +
    "\256\uff1d\257\uff1d\260\uff1d\261\uff1d\001\002\000\030\241" +
    "\uff1e\242\uff1e\247\uff1e\251\uff1e\253\uff1e\254\uff1e\255\uff1e" +
    "\256\uff1e\257\uff1e\260\uff1e\261\uff1e\001\002\000\030\241" +
    "\uff1f\242\uff1f\247\uff1f\251\uff1f\253\uff1f\254\uff1f\255\uff1f" +
    "\256\uff1f\257\uff1f\260\uff1f\261\uff1f\001\002\000\030\241" +
    "\uff20\242\uff20\247\uff20\251\uff20\253\uff20\254\uff20\255\uff20" +
    "\256\uff20\257\uff20\260\uff20\261\uff20\001\002\000\030\241" +
    "\uff06\242\uff06\247\uff06\251\uff06\253\uff06\254\uff06\255\uff06" +
    "\256\uff06\257\uff06\260\uff06\261\uff06\001\002\000\030\241" +
    "\uff21\242\uff21\247\uff21\251\uff21\253\uff21\254\uff21\255\uff21" +
    "\256\uff21\257\uff21\260\uff21\261\uff21\001\002\000\030\241" +
    "\uff07\242\uff07\247\uff07\251\uff07\253\uff07\254\uff07\255\uff07" +
    "\256\uff07\257\uff07\260\uff07\261\uff07\001\002\000\030\241" +
    "\uff08\242\uff08\247\uff08\251\uff08\253\uff08\254\uff08\255\uff08" +
    "\256\uff08\257\uff08\260\uff08\261\uff08\001\002\000\030\241" +
    "\uff09\242\uff09\247\uff09\251\uff09\253\uff09\254\uff09\255\uff09" +
    "\256\uff09\257\uff09\260\uff09\261\uff09\001\002\000\030\241" +
    "\uff22\242\uff22\247\uff22\251\uff22\253\uff22\254\uff22\255\uff22" +
    "\256\uff22\257\uff22\260\uff22\261\uff22\001\002\000\030\241" +
    "\uff23\242\uff23\247\uff23\251\uff23\253\uff23\254\uff23\255\uff23" +
    "\256\uff23\257\uff23\260\uff23\261\uff23\001\002\000\030\241" +
    "\uff24\242\uff24\247\uff24\251\uff24\253\uff24\254\uff24\255\uff24" +
    "\256\uff24\257\uff24\260\uff24\261\uff24\001\002\000\030\241" +
    "\uff0a\242\uff0a\247\uff0a\251\uff0a\253\uff0a\254\uff0a\255\uff0a" +
    "\256\uff0a\257\uff0a\260\uff0a\261\uff0a\001\002\000\030\241" +
    "\uff25\242\uff25\247\uff25\251\uff25\253\uff25\254\uff25\255\uff25" +
    "\256\uff25\257\uff25\260\uff25\261\uff25\001\002\000\030\241" +
    "\uff0b\242\uff0b\247\uff0b\251\uff0b\253\uff0b\254\uff0b\255\uff0b" +
    "\256\uff0b\257\uff0b\260\uff0b\261\uff0b\001\002\000\030\241" +
    "\uff26\242\uff26\247\uff26\251\uff26\253\uff26\254\uff26\255\uff26" +
    "\256\uff26\257\uff26\260\uff26\261\uff26\001\002\000\030\241" +
    "\uff0c\242\uff0c\247\uff0c\251\uff0c\253\uff0c\254\uff0c\255\uff0c" +
    "\256\uff0c\257\uff0c\260\uff0c\261\uff0c\001\002\000\030\241" +
    "\uff0d\242\uff0d\247\uff0d\251\uff0d\253\uff0d\254\uff0d\255\uff0d" +
    "\256\uff0d\257\uff0d\260\uff0d\261\uff0d\001\002\000\004\247" +
    "\310\001\002\000\030\241\uff27\242\uff27\247\uff27\251\uff27" +
    "\253\uff27\254\uff27\255\uff27\256\uff27\257\uff27\260\uff27\261" +
    "\uff27\001\002\000\u0118\016\uffe7\026\uffe7\027\uffe7\030\uffe7" +
    "\031\uffe7\032\uffe7\033\uffe7\034\uffe7\035\uffe7\036\uffe7\037" +
    "\uffe7\040\uffe7\041\uffe7\044\uffe7\045\uffe7\046\uffe7\047\uffe7" +
    "\050\uffe7\051\uffe7\052\uffe7\053\uffe7\054\uffe7\055\uffe7\056" +
    "\uffe7\057\uffe7\060\uffe7\061\uffe7\062\uffe7\063\uffe7\064\uffe7" +
    "\065\uffe7\066\uffe7\067\uffe7\070\uffe7\071\uffe7\072\uffe7\073" +
    "\uffe7\074\uffe7\075\uffe7\076\uffe7\077\uffe7\100\uffe7\101\uffe7" +
    "\102\uffe7\103\uffe7\104\uffe7\105\uffe7\106\uffe7\107\uffe7\110" +
    "\uffe7\111\uffe7\112\uffe7\113\uffe7\114\uffe7\115\uffe7\116\uffe7" +
    "\117\uffe7\120\uffe7\121\uffe7\122\uffe7\123\uffe7\124\uffe7\125" +
    "\uffe7\126\uffe7\127\uffe7\130\uffe7\131\uffe7\132\uffe7\133\uffe7" +
    "\134\uffe7\135\uffe7\136\uffe7\137\uffe7\140\uffe7\141\uffe7\142" +
    "\uffe7\143\uffe7\144\uffe7\145\uffe7\146\uffe7\147\uffe7\150\uffe7" +
    "\151\uffe7\152\uffe7\153\uffe7\154\uffe7\155\uffe7\156\uffe7\157" +
    "\uffe7\160\uffe7\161\uffe7\162\uffe7\163\uffe7\164\uffe7\165\uffe7" +
    "\166\uffe7\167\uffe7\170\uffe7\171\uffe7\173\uffe7\174\uffe7\175" +
    "\uffe7\176\uffe7\177\uffe7\200\uffe7\201\uffe7\202\uffe7\203\uffe7" +
    "\204\uffe7\205\uffe7\206\uffe7\207\uffe7\210\uffe7\211\uffe7\212" +
    "\uffe7\213\uffe7\214\uffe7\215\uffe7\216\uffe7\217\uffe7\220\uffe7" +
    "\221\uffe7\222\uffe7\223\uffe7\224\uffe7\225\uffe7\226\uffe7\227" +
    "\uffe7\232\uffe7\233\uffe7\235\uffe7\237\uffe7\245\uffe7\262\uffe7" +
    "\265\uffe7\267\uffe7\271\uffe7\272\uffe7\273\uffe7\001\002\000" +
    "\004\247\316\001\002\000\004\242\313\001\002\000\004" +
    "\266\314\001\002\000\004\247\315\001\002\000\u0118\016" +
    "\uffe3\026\uffe3\027\uffe3\030\uffe3\031\uffe3\032\uffe3\033\uffe3" +
    "\034\uffe3\035\uffe3\036\uffe3\037\uffe3\040\uffe3\041\uffe3\044" +
    "\uffe3\045\uffe3\046\uffe3\047\uffe3\050\uffe3\051\uffe3\052\uffe3" +
    "\053\uffe3\054\uffe3\055\uffe3\056\uffe3\057\uffe3\060\uffe3\061" +
    "\uffe3\062\uffe3\063\uffe3\064\uffe3\065\uffe3\066\uffe3\067\uffe3" +
    "\070\uffe3\071\uffe3\072\uffe3\073\uffe3\074\uffe3\075\uffe3\076" +
    "\uffe3\077\uffe3\100\uffe3\101\uffe3\102\uffe3\103\uffe3\104\uffe3" +
    "\105\uffe3\106\uffe3\107\uffe3\110\uffe3\111\uffe3\112\uffe3\113" +
    "\uffe3\114\uffe3\115\uffe3\116\uffe3\117\uffe3\120\uffe3\121\uffe3" +
    "\122\uffe3\123\uffe3\124\uffe3\125\uffe3\126\uffe3\127\uffe3\130" +
    "\uffe3\131\uffe3\132\uffe3\133\uffe3\134\uffe3\135\uffe3\136\uffe3" +
    "\137\uffe3\140\uffe3\141\uffe3\142\uffe3\143\uffe3\144\uffe3\145" +
    "\uffe3\146\uffe3\147\uffe3\150\uffe3\151\uffe3\152\uffe3\153\uffe3" +
    "\154\uffe3\155\uffe3\156\uffe3\157\uffe3\160\uffe3\161\uffe3\162" +
    "\uffe3\163\uffe3\164\uffe3\165\uffe3\166\uffe3\167\uffe3\170\uffe3" +
    "\171\uffe3\173\uffe3\174\uffe3\175\uffe3\176\uffe3\177\uffe3\200" +
    "\uffe3\201\uffe3\202\uffe3\203\uffe3\204\uffe3\205\uffe3\206\uffe3" +
    "\207\uffe3\210\uffe3\211\uffe3\212\uffe3\213\uffe3\214\uffe3\215" +
    "\uffe3\216\uffe3\217\uffe3\220\uffe3\221\uffe3\222\uffe3\223\uffe3" +
    "\224\uffe3\225\uffe3\226\uffe3\227\uffe3\232\uffe3\233\uffe3\235" +
    "\uffe3\237\uffe3\245\uffe3\262\uffe3\265\uffe3\267\uffe3\271\uffe3" +
    "\272\uffe3\273\uffe3\001\002\000\u0118\016\uffe6\026\uffe6\027" +
    "\uffe6\030\uffe6\031\uffe6\032\uffe6\033\uffe6\034\uffe6\035\uffe6" +
    "\036\uffe6\037\uffe6\040\uffe6\041\uffe6\044\uffe6\045\uffe6\046" +
    "\uffe6\047\uffe6\050\uffe6\051\uffe6\052\uffe6\053\uffe6\054\uffe6" +
    "\055\uffe6\056\uffe6\057\uffe6\060\uffe6\061\uffe6\062\uffe6\063" +
    "\uffe6\064\uffe6\065\uffe6\066\uffe6\067\uffe6\070\uffe6\071\uffe6" +
    "\072\uffe6\073\uffe6\074\uffe6\075\uffe6\076\uffe6\077\uffe6\100" +
    "\uffe6\101\uffe6\102\uffe6\103\uffe6\104\uffe6\105\uffe6\106\uffe6" +
    "\107\uffe6\110\uffe6\111\uffe6\112\uffe6\113\uffe6\114\uffe6\115" +
    "\uffe6\116\uffe6\117\uffe6\120\uffe6\121\uffe6\122\uffe6\123\uffe6" +
    "\124\uffe6\125\uffe6\126\uffe6\127\uffe6\130\uffe6\131\uffe6\132" +
    "\uffe6\133\uffe6\134\uffe6\135\uffe6\136\uffe6\137\uffe6\140\uffe6" +
    "\141\uffe6\142\uffe6\143\uffe6\144\uffe6\145\uffe6\146\uffe6\147" +
    "\uffe6\150\uffe6\151\uffe6\152\uffe6\153\uffe6\154\uffe6\155\uffe6" +
    "\156\uffe6\157\uffe6\160\uffe6\161\uffe6\162\uffe6\163\uffe6\164" +
    "\uffe6\165\uffe6\166\uffe6\167\uffe6\170\uffe6\171\uffe6\173\uffe6" +
    "\174\uffe6\175\uffe6\176\uffe6\177\uffe6\200\uffe6\201\uffe6\202" +
    "\uffe6\203\uffe6\204\uffe6\205\uffe6\206\uffe6\207\uffe6\210\uffe6" +
    "\211\uffe6\212\uffe6\213\uffe6\214\uffe6\215\uffe6\216\uffe6\217" +
    "\uffe6\220\uffe6\221\uffe6\222\uffe6\223\uffe6\224\uffe6\225\uffe6" +
    "\226\uffe6\227\uffe6\232\uffe6\233\uffe6\235\uffe6\237\uffe6\245" +
    "\uffe6\262\uffe6\265\uffe6\267\uffe6\271\uffe6\272\uffe6\273\uffe6" +
    "\001\002\000\014\010\334\011\335\012\333\266\332\267" +
    "\331\001\002\000\004\266\327\001\002\000\004\266\325" +
    "\001\002\000\004\241\323\001\002\000\004\247\324\001" +
    "\002\000\u0118\016\uffe5\026\uffe5\027\uffe5\030\uffe5\031\uffe5" +
    "\032\uffe5\033\uffe5\034\uffe5\035\uffe5\036\uffe5\037\uffe5\040" +
    "\uffe5\041\uffe5\044\uffe5\045\uffe5\046\uffe5\047\uffe5\050\uffe5" +
    "\051\uffe5\052\uffe5\053\uffe5\054\uffe5\055\uffe5\056\uffe5\057" +
    "\uffe5\060\uffe5\061\uffe5\062\uffe5\063\uffe5\064\uffe5\065\uffe5" +
    "\066\uffe5\067\uffe5\070\uffe5\071\uffe5\072\uffe5\073\uffe5\074" +
    "\uffe5\075\uffe5\076\uffe5\077\uffe5\100\uffe5\101\uffe5\102\uffe5" +
    "\103\uffe5\104\uffe5\105\uffe5\106\uffe5\107\uffe5\110\uffe5\111" +
    "\uffe5\112\uffe5\113\uffe5\114\uffe5\115\uffe5\116\uffe5\117\uffe5" +
    "\120\uffe5\121\uffe5\122\uffe5\123\uffe5\124\uffe5\125\uffe5\126" +
    "\uffe5\127\uffe5\130\uffe5\131\uffe5\132\uffe5\133\uffe5\134\uffe5" +
    "\135\uffe5\136\uffe5\137\uffe5\140\uffe5\141\uffe5\142\uffe5\143" +
    "\uffe5\144\uffe5\145\uffe5\146\uffe5\147\uffe5\150\uffe5\151\uffe5" +
    "\152\uffe5\153\uffe5\154\uffe5\155\uffe5\156\uffe5\157\uffe5\160" +
    "\uffe5\161\uffe5\162\uffe5\163\uffe5\164\uffe5\165\uffe5\166\uffe5" +
    "\167\uffe5\170\uffe5\171\uffe5\173\uffe5\174\uffe5\175\uffe5\176" +
    "\uffe5\177\uffe5\200\uffe5\201\uffe5\202\uffe5\203\uffe5\204\uffe5" +
    "\205\uffe5\206\uffe5\207\uffe5\210\uffe5\211\uffe5\212\uffe5\213" +
    "\uffe5\214\uffe5\215\uffe5\216\uffe5\217\uffe5\220\uffe5\221\uffe5" +
    "\222\uffe5\223\uffe5\224\uffe5\225\uffe5\226\uffe5\227\uffe5\232" +
    "\uffe5\233\uffe5\235\uffe5\237\uffe5\245\uffe5\262\uffe5\265\uffe5" +
    "\267\uffe5\271\uffe5\272\uffe5\273\uffe5\001\002\000\004\247" +
    "\326\001\002\000\u0118\016\uffd7\026\uffd7\027\uffd7\030\uffd7" +
    "\031\uffd7\032\uffd7\033\uffd7\034\uffd7\035\uffd7\036\uffd7\037" +
    "\uffd7\040\uffd7\041\uffd7\044\uffd7\045\uffd7\046\uffd7\047\uffd7" +
    "\050\uffd7\051\uffd7\052\uffd7\053\uffd7\054\uffd7\055\uffd7\056" +
    "\uffd7\057\uffd7\060\uffd7\061\uffd7\062\uffd7\063\uffd7\064\uffd7" +
    "\065\uffd7\066\uffd7\067\uffd7\070\uffd7\071\uffd7\072\uffd7\073" +
    "\uffd7\074\uffd7\075\uffd7\076\uffd7\077\uffd7\100\uffd7\101\uffd7" +
    "\102\uffd7\103\uffd7\104\uffd7\105\uffd7\106\uffd7\107\uffd7\110" +
    "\uffd7\111\uffd7\112\uffd7\113\uffd7\114\uffd7\115\uffd7\116\uffd7" +
    "\117\uffd7\120\uffd7\121\uffd7\122\uffd7\123\uffd7\124\uffd7\125" +
    "\uffd7\126\uffd7\127\uffd7\130\uffd7\131\uffd7\132\uffd7\133\uffd7" +
    "\134\uffd7\135\uffd7\136\uffd7\137\uffd7\140\uffd7\141\uffd7\142" +
    "\uffd7\143\uffd7\144\uffd7\145\uffd7\146\uffd7\147\uffd7\150\uffd7" +
    "\151\uffd7\152\uffd7\153\uffd7\154\uffd7\155\uffd7\156\uffd7\157" +
    "\uffd7\160\uffd7\161\uffd7\162\uffd7\163\uffd7\164\uffd7\165\uffd7" +
    "\166\uffd7\167\uffd7\170\uffd7\171\uffd7\173\uffd7\174\uffd7\175" +
    "\uffd7\176\uffd7\177\uffd7\200\uffd7\201\uffd7\202\uffd7\203\uffd7" +
    "\204\uffd7\205\uffd7\206\uffd7\207\uffd7\210\uffd7\211\uffd7\212" +
    "\uffd7\213\uffd7\214\uffd7\215\uffd7\216\uffd7\217\uffd7\220\uffd7" +
    "\221\uffd7\222\uffd7\223\uffd7\224\uffd7\225\uffd7\226\uffd7\227" +
    "\uffd7\232\uffd7\233\uffd7\235\uffd7\237\uffd7\245\uffd7\262\uffd7" +
    "\265\uffd7\267\uffd7\271\uffd7\272\uffd7\273\uffd7\001\002\000" +
    "\004\247\330\001\002\000\u0118\016\uffd6\026\uffd6\027\uffd6" +
    "\030\uffd6\031\uffd6\032\uffd6\033\uffd6\034\uffd6\035\uffd6\036" +
    "\uffd6\037\uffd6\040\uffd6\041\uffd6\044\uffd6\045\uffd6\046\uffd6" +
    "\047\uffd6\050\uffd6\051\uffd6\052\uffd6\053\uffd6\054\uffd6\055" +
    "\uffd6\056\uffd6\057\uffd6\060\uffd6\061\uffd6\062\uffd6\063\uffd6" +
    "\064\uffd6\065\uffd6\066\uffd6\067\uffd6\070\uffd6\071\uffd6\072" +
    "\uffd6\073\uffd6\074\uffd6\075\uffd6\076\uffd6\077\uffd6\100\uffd6" +
    "\101\uffd6\102\uffd6\103\uffd6\104\uffd6\105\uffd6\106\uffd6\107" +
    "\uffd6\110\uffd6\111\uffd6\112\uffd6\113\uffd6\114\uffd6\115\uffd6" +
    "\116\uffd6\117\uffd6\120\uffd6\121\uffd6\122\uffd6\123\uffd6\124" +
    "\uffd6\125\uffd6\126\uffd6\127\uffd6\130\uffd6\131\uffd6\132\uffd6" +
    "\133\uffd6\134\uffd6\135\uffd6\136\uffd6\137\uffd6\140\uffd6\141" +
    "\uffd6\142\uffd6\143\uffd6\144\uffd6\145\uffd6\146\uffd6\147\uffd6" +
    "\150\uffd6\151\uffd6\152\uffd6\153\uffd6\154\uffd6\155\uffd6\156" +
    "\uffd6\157\uffd6\160\uffd6\161\uffd6\162\uffd6\163\uffd6\164\uffd6" +
    "\165\uffd6\166\uffd6\167\uffd6\170\uffd6\171\uffd6\173\uffd6\174" +
    "\uffd6\175\uffd6\176\uffd6\177\uffd6\200\uffd6\201\uffd6\202\uffd6" +
    "\203\uffd6\204\uffd6\205\uffd6\206\uffd6\207\uffd6\210\uffd6\211" +
    "\uffd6\212\uffd6\213\uffd6\214\uffd6\215\uffd6\216\uffd6\217\uffd6" +
    "\220\uffd6\221\uffd6\222\uffd6\223\uffd6\224\uffd6\225\uffd6\226" +
    "\uffd6\227\uffd6\232\uffd6\233\uffd6\235\uffd6\237\uffd6\245\uffd6" +
    "\262\uffd6\265\uffd6\267\uffd6\271\uffd6\272\uffd6\273\uffd6\001" +
    "\002\000\010\242\uffc9\243\uffc9\247\uffb2\001\002\000\010" +
    "\242\uffc8\243\uffc8\247\uffb1\001\002\000\004\247\uffae\001" +
    "\002\000\004\247\uffaf\001\002\000\004\247\uffb0\001\002" +
    "\000\006\242\341\243\342\001\002\000\004\247\340\001" +
    "\002\000\u0118\016\uffe8\026\uffe8\027\uffe8\030\uffe8\031\uffe8" +
    "\032\uffe8\033\uffe8\034\uffe8\035\uffe8\036\uffe8\037\uffe8\040" +
    "\uffe8\041\uffe8\044\uffe8\045\uffe8\046\uffe8\047\uffe8\050\uffe8" +
    "\051\uffe8\052\uffe8\053\uffe8\054\uffe8\055\uffe8\056\uffe8\057" +
    "\uffe8\060\uffe8\061\uffe8\062\uffe8\063\uffe8\064\uffe8\065\uffe8" +
    "\066\uffe8\067\uffe8\070\uffe8\071\uffe8\072\uffe8\073\uffe8\074" +
    "\uffe8\075\uffe8\076\uffe8\077\uffe8\100\uffe8\101\uffe8\102\uffe8" +
    "\103\uffe8\104\uffe8\105\uffe8\106\uffe8\107\uffe8\110\uffe8\111" +
    "\uffe8\112\uffe8\113\uffe8\114\uffe8\115\uffe8\116\uffe8\117\uffe8" +
    "\120\uffe8\121\uffe8\122\uffe8\123\uffe8\124\uffe8\125\uffe8\126" +
    "\uffe8\127\uffe8\130\uffe8\131\uffe8\132\uffe8\133\uffe8\134\uffe8" +
    "\135\uffe8\136\uffe8\137\uffe8\140\uffe8\141\uffe8\142\uffe8\143" +
    "\uffe8\144\uffe8\145\uffe8\146\uffe8\147\uffe8\150\uffe8\151\uffe8" +
    "\152\uffe8\153\uffe8\154\uffe8\155\uffe8\156\uffe8\157\uffe8\160" +
    "\uffe8\161\uffe8\162\uffe8\163\uffe8\164\uffe8\165\uffe8\166\uffe8" +
    "\167\uffe8\170\uffe8\171\uffe8\173\uffe8\174\uffe8\175\uffe8\176" +
    "\uffe8\177\uffe8\200\uffe8\201\uffe8\202\uffe8\203\uffe8\204\uffe8" +
    "\205\uffe8\206\uffe8\207\uffe8\210\uffe8\211\uffe8\212\uffe8\213" +
    "\uffe8\214\uffe8\215\uffe8\216\uffe8\217\uffe8\220\uffe8\221\uffe8" +
    "\222\uffe8\223\uffe8\224\uffe8\225\uffe8\226\uffe8\227\uffe8\232" +
    "\uffe8\233\uffe8\235\uffe8\237\uffe8\245\uffe8\262\uffe8\265\uffe8" +
    "\267\uffe8\271\uffe8\272\uffe8\273\uffe8\001\002\000\006\266" +
    "\uffcd\267\uffcd\001\002\000\006\266\uffcc\267\uffcc\001\002" +
    "\000\006\266\345\267\344\001\002\000\014\241\uffc9\242" +
    "\uffc9\243\uffc9\246\uffc9\247\uffc9\001\002\000\014\241\uffc8" +
    "\242\uffc8\243\uffc8\246\uffc8\247\uffc8\001\002\000\010\242" +
    "\341\243\342\247\347\001\002\000\u0118\016\uffd5\026\uffd5" +
    "\027\uffd5\030\uffd5\031\uffd5\032\uffd5\033\uffd5\034\uffd5\035" +
    "\uffd5\036\uffd5\037\uffd5\040\uffd5\041\uffd5\044\uffd5\045\uffd5" +
    "\046\uffd5\047\uffd5\050\uffd5\051\uffd5\052\uffd5\053\uffd5\054" +
    "\uffd5\055\uffd5\056\uffd5\057\uffd5\060\uffd5\061\uffd5\062\uffd5" +
    "\063\uffd5\064\uffd5\065\uffd5\066\uffd5\067\uffd5\070\uffd5\071" +
    "\uffd5\072\uffd5\073\uffd5\074\uffd5\075\uffd5\076\uffd5\077\uffd5" +
    "\100\uffd5\101\uffd5\102\uffd5\103\uffd5\104\uffd5\105\uffd5\106" +
    "\uffd5\107\uffd5\110\uffd5\111\uffd5\112\uffd5\113\uffd5\114\uffd5" +
    "\115\uffd5\116\uffd5\117\uffd5\120\uffd5\121\uffd5\122\uffd5\123" +
    "\uffd5\124\uffd5\125\uffd5\126\uffd5\127\uffd5\130\uffd5\131\uffd5" +
    "\132\uffd5\133\uffd5\134\uffd5\135\uffd5\136\uffd5\137\uffd5\140" +
    "\uffd5\141\uffd5\142\uffd5\143\uffd5\144\uffd5\145\uffd5\146\uffd5" +
    "\147\uffd5\150\uffd5\151\uffd5\152\uffd5\153\uffd5\154\uffd5\155" +
    "\uffd5\156\uffd5\157\uffd5\160\uffd5\161\uffd5\162\uffd5\163\uffd5" +
    "\164\uffd5\165\uffd5\166\uffd5\167\uffd5\170\uffd5\171\uffd5\173" +
    "\uffd5\174\uffd5\175\uffd5\176\uffd5\177\uffd5\200\uffd5\201\uffd5" +
    "\202\uffd5\203\uffd5\204\uffd5\205\uffd5\206\uffd5\207\uffd5\210" +
    "\uffd5\211\uffd5\212\uffd5\213\uffd5\214\uffd5\215\uffd5\216\uffd5" +
    "\217\uffd5\220\uffd5\221\uffd5\222\uffd5\223\uffd5\224\uffd5\225" +
    "\uffd5\226\uffd5\227\uffd5\232\uffd5\233\uffd5\235\uffd5\237\uffd5" +
    "\245\uffd5\262\uffd5\265\uffd5\267\uffd5\271\uffd5\272\uffd5\273" +
    "\uffd5\001\002\000\006\266\345\267\344\001\002\000\010" +
    "\242\341\243\342\247\353\001\002\000\006\266\345\267" +
    "\344\001\002\000\u0118\016\uffd4\026\uffd4\027\uffd4\030\uffd4" +
    "\031\uffd4\032\uffd4\033\uffd4\034\uffd4\035\uffd4\036\uffd4\037" +
    "\uffd4\040\uffd4\041\uffd4\044\uffd4\045\uffd4\046\uffd4\047\uffd4" +
    "\050\uffd4\051\uffd4\052\uffd4\053\uffd4\054\uffd4\055\uffd4\056" +
    "\uffd4\057\uffd4\060\uffd4\061\uffd4\062\uffd4\063\uffd4\064\uffd4" +
    "\065\uffd4\066\uffd4\067\uffd4\070\uffd4\071\uffd4\072\uffd4\073" +
    "\uffd4\074\uffd4\075\uffd4\076\uffd4\077\uffd4\100\uffd4\101\uffd4" +
    "\102\uffd4\103\uffd4\104\uffd4\105\uffd4\106\uffd4\107\uffd4\110" +
    "\uffd4\111\uffd4\112\uffd4\113\uffd4\114\uffd4\115\uffd4\116\uffd4" +
    "\117\uffd4\120\uffd4\121\uffd4\122\uffd4\123\uffd4\124\uffd4\125" +
    "\uffd4\126\uffd4\127\uffd4\130\uffd4\131\uffd4\132\uffd4\133\uffd4" +
    "\134\uffd4\135\uffd4\136\uffd4\137\uffd4\140\uffd4\141\uffd4\142" +
    "\uffd4\143\uffd4\144\uffd4\145\uffd4\146\uffd4\147\uffd4\150\uffd4" +
    "\151\uffd4\152\uffd4\153\uffd4\154\uffd4\155\uffd4\156\uffd4\157" +
    "\uffd4\160\uffd4\161\uffd4\162\uffd4\163\uffd4\164\uffd4\165\uffd4" +
    "\166\uffd4\167\uffd4\170\uffd4\171\uffd4\173\uffd4\174\uffd4\175" +
    "\uffd4\176\uffd4\177\uffd4\200\uffd4\201\uffd4\202\uffd4\203\uffd4" +
    "\204\uffd4\205\uffd4\206\uffd4\207\uffd4\210\uffd4\211\uffd4\212" +
    "\uffd4\213\uffd4\214\uffd4\215\uffd4\216\uffd4\217\uffd4\220\uffd4" +
    "\221\uffd4\222\uffd4\223\uffd4\224\uffd4\225\uffd4\226\uffd4\227" +
    "\uffd4\232\uffd4\233\uffd4\235\uffd4\237\uffd4\245\uffd4\262\uffd4" +
    "\265\uffd4\267\uffd4\271\uffd4\272\uffd4\273\uffd4\001\002\000" +
    "\010\242\uffca\243\uffca\247\uffca\001\002\000\010\242\uffcb" +
    "\243\uffcb\247\uffcb\001\002\000\004\246\357\001\002\000" +
    "\012\004\360\005\362\006\363\007\364\001\002\000\012" +
    "\015\uffb6\241\uffb6\247\uffb6\250\uffb6\001\002\000\006\247" +
    "\366\250\365\001\002\000\012\015\uffb5\241\uffb5\247\uffb5" +
    "\250\uffb5\001\002\000\012\015\uffb4\241\uffb4\247\uffb4\250" +
    "\uffb4\001\002\000\012\015\uffb3\241\uffb3\247\uffb3\250\uffb3" +
    "\001\002\000\014\010\334\011\335\012\333\266\367\267" +
    "\370\001\002\000\u0118\016\uffea\026\uffea\027\uffea\030\uffea" +
    "\031\uffea\032\uffea\033\uffea\034\uffea\035\uffea\036\uffea\037" +
    "\uffea\040\uffea\041\uffea\044\uffea\045\uffea\046\uffea\047\uffea" +
    "\050\uffea\051\uffea\052\uffea\053\uffea\054\uffea\055\uffea\056" +
    "\uffea\057\uffea\060\uffea\061\uffea\062\uffea\063\uffea\064\uffea" +
    "\065\uffea\066\uffea\067\uffea\070\uffea\071\uffea\072\uffea\073" +
    "\uffea\074\uffea\075\uffea\076\uffea\077\uffea\100\uffea\101\uffea" +
    "\102\uffea\103\uffea\104\uffea\105\uffea\106\uffea\107\uffea\110" +
    "\uffea\111\uffea\112\uffea\113\uffea\114\uffea\115\uffea\116\uffea" +
    "\117\uffea\120\uffea\121\uffea\122\uffea\123\uffea\124\uffea\125" +
    "\uffea\126\uffea\127\uffea\130\uffea\131\uffea\132\uffea\133\uffea" +
    "\134\uffea\135\uffea\136\uffea\137\uffea\140\uffea\141\uffea\142" +
    "\uffea\143\uffea\144\uffea\145\uffea\146\uffea\147\uffea\150\uffea" +
    "\151\uffea\152\uffea\153\uffea\154\uffea\155\uffea\156\uffea\157" +
    "\uffea\160\uffea\161\uffea\162\uffea\163\uffea\164\uffea\165\uffea" +
    "\166\uffea\167\uffea\170\uffea\171\uffea\173\uffea\174\uffea\175" +
    "\uffea\176\uffea\177\uffea\200\uffea\201\uffea\202\uffea\203\uffea" +
    "\204\uffea\205\uffea\206\uffea\207\uffea\210\uffea\211\uffea\212" +
    "\uffea\213\uffea\214\uffea\215\uffea\216\uffea\217\uffea\220\uffea" +
    "\221\uffea\222\uffea\223\uffea\224\uffea\225\uffea\226\uffea\227" +
    "\uffea\232\uffea\233\uffea\235\uffea\237\uffea\245\uffea\262\uffea" +
    "\265\uffea\267\uffea\271\uffea\272\uffea\273\uffea\001\002\000" +
    "\004\247\uffb1\001\002\000\004\247\uffb2\001\002\000\004" +
    "\247\372\001\002\000\u0118\016\uffe9\026\uffe9\027\uffe9\030" +
    "\uffe9\031\uffe9\032\uffe9\033\uffe9\034\uffe9\035\uffe9\036\uffe9" +
    "\037\uffe9\040\uffe9\041\uffe9\044\uffe9\045\uffe9\046\uffe9\047" +
    "\uffe9\050\uffe9\051\uffe9\052\uffe9\053\uffe9\054\uffe9\055\uffe9" +
    "\056\uffe9\057\uffe9\060\uffe9\061\uffe9\062\uffe9\063\uffe9\064" +
    "\uffe9\065\uffe9\066\uffe9\067\uffe9\070\uffe9\071\uffe9\072\uffe9" +
    "\073\uffe9\074\uffe9\075\uffe9\076\uffe9\077\uffe9\100\uffe9\101" +
    "\uffe9\102\uffe9\103\uffe9\104\uffe9\105\uffe9\106\uffe9\107\uffe9" +
    "\110\uffe9\111\uffe9\112\uffe9\113\uffe9\114\uffe9\115\uffe9\116" +
    "\uffe9\117\uffe9\120\uffe9\121\uffe9\122\uffe9\123\uffe9\124\uffe9" +
    "\125\uffe9\126\uffe9\127\uffe9\130\uffe9\131\uffe9\132\uffe9\133" +
    "\uffe9\134\uffe9\135\uffe9\136\uffe9\137\uffe9\140\uffe9\141\uffe9" +
    "\142\uffe9\143\uffe9\144\uffe9\145\uffe9\146\uffe9\147\uffe9\150" +
    "\uffe9\151\uffe9\152\uffe9\153\uffe9\154\uffe9\155\uffe9\156\uffe9" +
    "\157\uffe9\160\uffe9\161\uffe9\162\uffe9\163\uffe9\164\uffe9\165" +
    "\uffe9\166\uffe9\167\uffe9\170\uffe9\171\uffe9\173\uffe9\174\uffe9" +
    "\175\uffe9\176\uffe9\177\uffe9\200\uffe9\201\uffe9\202\uffe9\203" +
    "\uffe9\204\uffe9\205\uffe9\206\uffe9\207\uffe9\210\uffe9\211\uffe9" +
    "\212\uffe9\213\uffe9\214\uffe9\215\uffe9\216\uffe9\217\uffe9\220" +
    "\uffe9\221\uffe9\222\uffe9\223\uffe9\224\uffe9\225\uffe9\226\uffe9" +
    "\227\uffe9\232\uffe9\233\uffe9\235\uffe9\237\uffe9\245\uffe9\262" +
    "\uffe9\265\uffe9\267\uffe9\271\uffe9\272\uffe9\273\uffe9\001\002" +
    "\000\014\232\uffeb\233\uffeb\237\uffeb\245\uffeb\272\uffeb\001" +
    "\002\000\u0118\016\uffe2\026\uffe2\027\uffe2\030\uffe2\031\uffe2" +
    "\032\uffe2\033\uffe2\034\uffe2\035\uffe2\036\uffe2\037\uffe2\040" +
    "\uffe2\041\uffe2\044\uffe2\045\uffe2\046\uffe2\047\uffe2\050\uffe2" +
    "\051\uffe2\052\uffe2\053\uffe2\054\uffe2\055\uffe2\056\uffe2\057" +
    "\uffe2\060\uffe2\061\uffe2\062\uffe2\063\uffe2\064\uffe2\065\uffe2" +
    "\066\uffe2\067\uffe2\070\uffe2\071\uffe2\072\uffe2\073\uffe2\074" +
    "\uffe2\075\uffe2\076\uffe2\077\uffe2\100\uffe2\101\uffe2\102\uffe2" +
    "\103\uffe2\104\uffe2\105\uffe2\106\uffe2\107\uffe2\110\uffe2\111" +
    "\uffe2\112\uffe2\113\uffe2\114\uffe2\115\uffe2\116\uffe2\117\uffe2" +
    "\120\uffe2\121\uffe2\122\uffe2\123\uffe2\124\uffe2\125\uffe2\126" +
    "\uffe2\127\uffe2\130\uffe2\131\uffe2\132\uffe2\133\uffe2\134\uffe2" +
    "\135\uffe2\136\uffe2\137\uffe2\140\uffe2\141\uffe2\142\uffe2\143" +
    "\uffe2\144\uffe2\145\uffe2\146\uffe2\147\uffe2\150\uffe2\151\uffe2" +
    "\152\uffe2\153\uffe2\154\uffe2\155\uffe2\156\uffe2\157\uffe2\160" +
    "\uffe2\161\uffe2\162\uffe2\163\uffe2\164\uffe2\165\uffe2\166\uffe2" +
    "\167\uffe2\170\uffe2\171\uffe2\173\uffe2\174\uffe2\175\uffe2\176" +
    "\uffe2\177\uffe2\200\uffe2\201\uffe2\202\uffe2\203\uffe2\204\uffe2" +
    "\205\uffe2\206\uffe2\207\uffe2\210\uffe2\211\uffe2\212\uffe2\213" +
    "\uffe2\214\uffe2\215\uffe2\216\uffe2\217\uffe2\220\uffe2\221\uffe2" +
    "\222\uffe2\223\uffe2\224\uffe2\225\uffe2\226\uffe2\227\uffe2\232" +
    "\uffe2\233\uffe2\235\uffe2\237\uffe2\245\uffe2\262\uffe2\265\uffe2" +
    "\267\uffe2\271\uffe2\272\uffe2\273\uffe2\001\002\000\130\026" +
    "\250\027\247\030\246\031\245\032\244\110\240\111\236" +
    "\112\307\113\303\114\301\115\277\116\276\117\275\120" +
    "\271\121\267\122\266\123\265\124\264\125\263\126\262" +
    "\127\261\130\260\131\257\132\256\133\255\134\254\135" +
    "\253\136\252\137\251\140\243\141\242\142\241\143\237" +
    "\144\305\145\304\146\302\147\300\150\274\151\273\152" +
    "\272\153\270\266\345\267\344\001\002\000\004\241\u0113" +
    "\001\002\000\004\241\u0100\001\002\000\004\236\u0101\001" +
    "\002\000\006\237\u0103\272\u0104\001\002\000\010\233\u010a" +
    "\237\u010b\272\u010c\001\002\000\004\246\u0108\001\002\000" +
    "\006\266\345\267\344\001\002\000\004\246\u0106\001\002" +
    "\000\u0114\016\141\026\175\027\174\030\172\031\167\032" +
    "\166\033\027\034\026\035\024\036\023\037\022\040\162" +
    "\041\203\044\157\045\156\046\155\047\152\050\151\051" +
    "\147\052\146\053\144\054\120\055\117\056\116\057\115" +
    "\060\114\061\113\062\112\063\107\064\070\065\067\066" +
    "\066\067\065\070\064\071\063\072\062\073\061\074\045" +
    "\075\044\076\043\077\042\100\040\101\037\102\034\103" +
    "\032\104\221\105\217\106\215\107\213\110\200\111\177" +
    "\112\176\113\173\114\171\115\170\116\165\117\164\120" +
    "\142\121\140\122\136\123\135\124\134\125\132\126\131" +
    "\127\127\130\110\131\106\132\105\133\104\134\103\135" +
    "\102\136\101\137\100\140\060\141\057\142\055\143\054" +
    "\144\053\145\052\146\051\147\050\150\033\151\031\152" +
    "\030\153\025\154\225\155\223\156\222\157\220\160\216" +
    "\161\214\162\212\163\211\164\126\165\125\166\124\167" +
    "\123\170\122\171\121\173\227\174\073\175\210\176\111" +
    "\177\230\200\035\201\036\202\041\203\047\204\137\205" +
    "\204\206\201\207\153\210\145\211\226\212\150\213\143" +
    "\214\224\215\071\216\072\217\074\220\075\221\076\222" +
    "\077\223\056\224\205\225\130\226\206\227\207\233\uffcf" +
    "\235\154\237\uffcf\262\163\265\160\267\202\271\046\272" +
    "\uffcf\273\133\001\002\000\010\233\uffd3\237\uffd3\272\uffd3" +
    "\001\002\000\u010e\016\141\026\175\027\174\030\172\031" +
    "\167\032\166\033\027\034\026\035\024\036\023\037\022" +
    "\040\162\041\203\044\157\045\156\046\155\047\152\050" +
    "\151\051\147\052\146\053\144\054\120\055\117\056\116" +
    "\057\115\060\114\061\113\062\112\063\107\064\070\065" +
    "\067\066\066\067\065\070\064\071\063\072\062\073\061" +
    "\074\045\075\044\076\043\077\042\100\040\101\037\102" +
    "\034\103\032\104\221\105\217\106\215\107\213\110\200" +
    "\111\177\112\176\113\173\114\171\115\170\116\165\117" +
    "\164\120\142\121\140\122\136\123\135\124\134\125\132" +
    "\126\131\127\127\130\110\131\106\132\105\133\104\134" +
    "\103\135\102\136\101\137\100\140\060\141\057\142\055" +
    "\143\054\144\053\145\052\146\051\147\050\150\033\151" +
    "\031\152\030\153\025\154\225\155\223\156\222\157\220" +
    "\160\216\161\214\162\212\163\211\164\126\165\125\166" +
    "\124\167\123\170\122\171\121\173\227\174\073\175\210" +
    "\176\111\177\230\200\035\201\036\202\041\203\047\204" +
    "\137\205\204\206\201\207\153\210\145\211\226\212\150" +
    "\213\143\214\224\215\071\216\072\217\074\220\075\221" +
    "\076\222\077\223\056\224\205\225\130\226\206\227\207" +
    "\235\154\262\163\265\160\267\202\271\046\273\133\001" +
    "\002\000\010\233\uffd2\237\uffd2\272\uffd2\001\002\000\004" +
    "\235\u0112\001\002\000\004\246\u0110\001\002\000\006\266" +
    "\345\267\344\001\002\000\004\246\u010e\001\002\000\u0114" +
    "\016\141\026\175\027\174\030\172\031\167\032\166\033" +
    "\027\034\026\035\024\036\023\037\022\040\162\041\203" +
    "\044\157\045\156\046\155\047\152\050\151\051\147\052" +
    "\146\053\144\054\120\055\117\056\116\057\115\060\114" +
    "\061\113\062\112\063\107\064\070\065\067\066\066\067" +
    "\065\070\064\071\063\072\062\073\061\074\045\075\044" +
    "\076\043\077\042\100\040\101\037\102\034\103\032\104" +
    "\221\105\217\106\215\107\213\110\200\111\177\112\176" +
    "\113\173\114\171\115\170\116\165\117\164\120\142\121" +
    "\140\122\136\123\135\124\134\125\132\126\131\127\127" +
    "\130\110\131\106\132\105\133\104\134\103\135\102\136" +
    "\101\137\100\140\060\141\057\142\055\143\054\144\053" +
    "\145\052\146\051\147\050\150\033\151\031\152\030\153" +
    "\025\154\225\155\223\156\222\157\220\160\216\161\214" +
    "\162\212\163\211\164\126\165\125\166\124\167\123\170" +
    "\122\171\121\173\227\174\073\175\210\176\111\177\230" +
    "\200\035\201\036\202\041\203\047\204\137\205\204\206" +
    "\201\207\153\210\145\211\226\212\150\213\143\214\224" +
    "\215\071\216\072\217\074\220\075\221\076\222\077\223" +
    "\056\224\205\225\130\226\206\227\207\233\uffce\235\154" +
    "\237\uffce\262\163\265\160\267\202\271\046\272\uffce\273" +
    "\133\001\002\000\010\233\uffd1\237\uffd1\272\uffd1\001\002" +
    "\000\u010e\016\141\026\175\027\174\030\172\031\167\032" +
    "\166\033\027\034\026\035\024\036\023\037\022\040\162" +
    "\041\203\044\157\045\156\046\155\047\152\050\151\051" +
    "\147\052\146\053\144\054\120\055\117\056\116\057\115" +
    "\060\114\061\113\062\112\063\107\064\070\065\067\066" +
    "\066\067\065\070\064\071\063\072\062\073\061\074\045" +
    "\075\044\076\043\077\042\100\040\101\037\102\034\103" +
    "\032\104\221\105\217\106\215\107\213\110\200\111\177" +
    "\112\176\113\173\114\171\115\170\116\165\117\164\120" +
    "\142\121\140\122\136\123\135\124\134\125\132\126\131" +
    "\127\127\130\110\131\106\132\105\133\104\134\103\135" +
    "\102\136\101\137\100\140\060\141\057\142\055\143\054" +
    "\144\053\145\052\146\051\147\050\150\033\151\031\152" +
    "\030\153\025\154\225\155\223\156\222\157\220\160\216" +
    "\161\214\162\212\163\211\164\126\165\125\166\124\167" +
    "\123\170\122\171\121\173\227\174\073\175\210\176\111" +
    "\177\230\200\035\201\036\202\041\203\047\204\137\205" +
    "\204\206\201\207\153\210\145\211\226\212\150\213\143" +
    "\214\224\215\071\216\072\217\074\220\075\221\076\222" +
    "\077\223\056\224\205\225\130\226\206\227\207\235\154" +
    "\262\163\265\160\267\202\271\046\273\133\001\002\000" +
    "\010\233\uffd0\237\uffd0\272\uffd0\001\002\000\u0118\016\uffda" +
    "\026\uffda\027\uffda\030\uffda\031\uffda\032\uffda\033\uffda\034" +
    "\uffda\035\uffda\036\uffda\037\uffda\040\uffda\041\uffda\044\uffda" +
    "\045\uffda\046\uffda\047\uffda\050\uffda\051\uffda\052\uffda\053" +
    "\uffda\054\uffda\055\uffda\056\uffda\057\uffda\060\uffda\061\uffda" +
    "\062\uffda\063\uffda\064\uffda\065\uffda\066\uffda\067\uffda\070" +
    "\uffda\071\uffda\072\uffda\073\uffda\074\uffda\075\uffda\076\uffda" +
    "\077\uffda\100\uffda\101\uffda\102\uffda\103\uffda\104\uffda\105" +
    "\uffda\106\uffda\107\uffda\110\uffda\111\uffda\112\uffda\113\uffda" +
    "\114\uffda\115\uffda\116\uffda\117\uffda\120\uffda\121\uffda\122" +
    "\uffda\123\uffda\124\uffda\125\uffda\126\uffda\127\uffda\130\uffda" +
    "\131\uffda\132\uffda\133\uffda\134\uffda\135\uffda\136\uffda\137" +
    "\uffda\140\uffda\141\uffda\142\uffda\143\uffda\144\uffda\145\uffda" +
    "\146\uffda\147\uffda\150\uffda\151\uffda\152\uffda\153\uffda\154" +
    "\uffda\155\uffda\156\uffda\157\uffda\160\uffda\161\uffda\162\uffda" +
    "\163\uffda\164\uffda\165\uffda\166\uffda\167\uffda\170\uffda\171" +
    "\uffda\173\uffda\174\uffda\175\uffda\176\uffda\177\uffda\200\uffda" +
    "\201\uffda\202\uffda\203\uffda\204\uffda\205\uffda\206\uffda\207" +
    "\uffda\210\uffda\211\uffda\212\uffda\213\uffda\214\uffda\215\uffda" +
    "\216\uffda\217\uffda\220\uffda\221\uffda\222\uffda\223\uffda\224" +
    "\uffda\225\uffda\226\uffda\227\uffda\232\uffda\233\uffda\235\uffda" +
    "\237\uffda\245\uffda\262\uffda\265\uffda\267\uffda\271\uffda\272" +
    "\uffda\273\uffda\001\002\000\004\236\u0114\001\002\000\006" +
    "\237\u0103\272\u0104\001\002\000\010\233\u0116\237\u010b\272" +
    "\u010c\001\002\000\004\235\u0117\001\002\000\u0118\016\uffdb" +
    "\026\uffdb\027\uffdb\030\uffdb\031\uffdb\032\uffdb\033\uffdb\034" +
    "\uffdb\035\uffdb\036\uffdb\037\uffdb\040\uffdb\041\uffdb\044\uffdb" +
    "\045\uffdb\046\uffdb\047\uffdb\050\uffdb\051\uffdb\052\uffdb\053" +
    "\uffdb\054\uffdb\055\uffdb\056\uffdb\057\uffdb\060\uffdb\061\uffdb" +
    "\062\uffdb\063\uffdb\064\uffdb\065\uffdb\066\uffdb\067\uffdb\070" +
    "\uffdb\071\uffdb\072\uffdb\073\uffdb\074\uffdb\075\uffdb\076\uffdb" +
    "\077\uffdb\100\uffdb\101\uffdb\102\uffdb\103\uffdb\104\uffdb\105" +
    "\uffdb\106\uffdb\107\uffdb\110\uffdb\111\uffdb\112\uffdb\113\uffdb" +
    "\114\uffdb\115\uffdb\116\uffdb\117\uffdb\120\uffdb\121\uffdb\122" +
    "\uffdb\123\uffdb\124\uffdb\125\uffdb\126\uffdb\127\uffdb\130\uffdb" +
    "\131\uffdb\132\uffdb\133\uffdb\134\uffdb\135\uffdb\136\uffdb\137" +
    "\uffdb\140\uffdb\141\uffdb\142\uffdb\143\uffdb\144\uffdb\145\uffdb" +
    "\146\uffdb\147\uffdb\150\uffdb\151\uffdb\152\uffdb\153\uffdb\154" +
    "\uffdb\155\uffdb\156\uffdb\157\uffdb\160\uffdb\161\uffdb\162\uffdb" +
    "\163\uffdb\164\uffdb\165\uffdb\166\uffdb\167\uffdb\170\uffdb\171" +
    "\uffdb\173\uffdb\174\uffdb\175\uffdb\176\uffdb\177\uffdb\200\uffdb" +
    "\201\uffdb\202\uffdb\203\uffdb\204\uffdb\205\uffdb\206\uffdb\207" +
    "\uffdb\210\uffdb\211\uffdb\212\uffdb\213\uffdb\214\uffdb\215\uffdb" +
    "\216\uffdb\217\uffdb\220\uffdb\221\uffdb\222\uffdb\223\uffdb\224" +
    "\uffdb\225\uffdb\226\uffdb\227\uffdb\232\uffdb\233\uffdb\235\uffdb" +
    "\237\uffdb\245\uffdb\262\uffdb\265\uffdb\267\uffdb\271\uffdb\272" +
    "\uffdb\273\uffdb\001\002\000\004\266\u0119\001\002\000\004" +
    "\241\u011a\001\002\000\004\247\u011b\001\002\000\u0118\016" +
    "\uffe4\026\uffe4\027\uffe4\030\uffe4\031\uffe4\032\uffe4\033\uffe4" +
    "\034\uffe4\035\uffe4\036\uffe4\037\uffe4\040\uffe4\041\uffe4\044" +
    "\uffe4\045\uffe4\046\uffe4\047\uffe4\050\uffe4\051\uffe4\052\uffe4" +
    "\053\uffe4\054\uffe4\055\uffe4\056\uffe4\057\uffe4\060\uffe4\061" +
    "\uffe4\062\uffe4\063\uffe4\064\uffe4\065\uffe4\066\uffe4\067\uffe4" +
    "\070\uffe4\071\uffe4\072\uffe4\073\uffe4\074\uffe4\075\uffe4\076" +
    "\uffe4\077\uffe4\100\uffe4\101\uffe4\102\uffe4\103\uffe4\104\uffe4" +
    "\105\uffe4\106\uffe4\107\uffe4\110\uffe4\111\uffe4\112\uffe4\113" +
    "\uffe4\114\uffe4\115\uffe4\116\uffe4\117\uffe4\120\uffe4\121\uffe4" +
    "\122\uffe4\123\uffe4\124\uffe4\125\uffe4\126\uffe4\127\uffe4\130" +
    "\uffe4\131\uffe4\132\uffe4\133\uffe4\134\uffe4\135\uffe4\136\uffe4" +
    "\137\uffe4\140\uffe4\141\uffe4\142\uffe4\143\uffe4\144\uffe4\145" +
    "\uffe4\146\uffe4\147\uffe4\150\uffe4\151\uffe4\152\uffe4\153\uffe4" +
    "\154\uffe4\155\uffe4\156\uffe4\157\uffe4\160\uffe4\161\uffe4\162" +
    "\uffe4\163\uffe4\164\uffe4\165\uffe4\166\uffe4\167\uffe4\170\uffe4" +
    "\171\uffe4\173\uffe4\174\uffe4\175\uffe4\176\uffe4\177\uffe4\200" +
    "\uffe4\201\uffe4\202\uffe4\203\uffe4\204\uffe4\205\uffe4\206\uffe4" +
    "\207\uffe4\210\uffe4\211\uffe4\212\uffe4\213\uffe4\214\uffe4\215" +
    "\uffe4\216\uffe4\217\uffe4\220\uffe4\221\uffe4\222\uffe4\223\uffe4" +
    "\224\uffe4\225\uffe4\226\uffe4\227\uffe4\232\uffe4\233\uffe4\235" +
    "\uffe4\237\uffe4\245\uffe4\262\uffe4\265\uffe4\267\uffe4\271\uffe4" +
    "\272\uffe4\273\uffe4\001\002\000\134\026\250\027\247\030" +
    "\246\031\245\032\244\042\u011e\043\u0120\110\240\111\236" +
    "\112\307\113\303\114\301\115\277\116\276\117\275\120" +
    "\271\121\267\122\266\123\265\124\264\125\263\126\262" +
    "\127\261\130\260\131\257\132\256\133\255\134\254\135" +
    "\253\136\252\137\251\140\243\141\242\142\241\143\237" +
    "\144\305\145\304\146\302\147\300\150\274\151\273\152" +
    "\272\153\270\266\u011d\267\u0121\001\002\000\024\241\uffc8" +
    "\251\uffc6\253\uffc6\254\uffc6\255\uffc6\256\uffc6\257\uffc6\260" +
    "\uffc6\261\uffc6\001\002\000\004\274\u0140\001\002\000\004" +
    "\241\u013b\001\002\000\004\275\u013a\001\002\000\024\241" +
    "\uffc9\251\uffc7\253\uffc7\254\uffc7\255\uffc7\256\uffc7\257\uffc7" +
    "\260\uffc7\261\uffc7\001\002\000\004\241\u0135\001\002\000" +
    "\022\251\u012a\253\u0129\254\u0127\255\u0128\256\u0125\257\u0126" +
    "\260\u012d\261\u012c\001\002\000\024\241\uffc5\251\uffc5\253" +
    "\uffc5\254\uffc5\255\uffc5\256\uffc5\257\uffc5\260\uffc5\261\uffc5" +
    "\001\002\000\134\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032" +
    "\uffbc\042\uffbc\043\uffbc\110\uffbc\111\uffbc\112\uffbc\113\uffbc" +
    "\114\uffbc\115\uffbc\116\uffbc\117\uffbc\120\uffbc\121\uffbc\122" +
    "\uffbc\123\uffbc\124\uffbc\125\uffbc\126\uffbc\127\uffbc\130\uffbc" +
    "\131\uffbc\132\uffbc\133\uffbc\134\uffbc\135\uffbc\136\uffbc\137" +
    "\uffbc\140\uffbc\141\uffbc\142\uffbc\143\uffbc\144\uffbc\145\uffbc" +
    "\146\uffbc\147\uffbc\150\uffbc\151\uffbc\152\uffbc\153\uffbc\266" +
    "\uffbc\267\uffbc\001\002\000\134\026\uffb7\027\uffb7\030\uffb7" +
    "\031\uffb7\032\uffb7\042\uffb7\043\uffb7\110\uffb7\111\uffb7\112" +
    "\uffb7\113\uffb7\114\uffb7\115\uffb7\116\uffb7\117\uffb7\120\uffb7" +
    "\121\uffb7\122\uffb7\123\uffb7\124\uffb7\125\uffb7\126\uffb7\127" +
    "\uffb7\130\uffb7\131\uffb7\132\uffb7\133\uffb7\134\uffb7\135\uffb7" +
    "\136\uffb7\137\uffb7\140\uffb7\141\uffb7\142\uffb7\143\uffb7\144" +
    "\uffb7\145\uffb7\146\uffb7\147\uffb7\150\uffb7\151\uffb7\152\uffb7" +
    "\153\uffb7\266\uffb7\267\uffb7\001\002\000\134\026\uffbd\027" +
    "\uffbd\030\uffbd\031\uffbd\032\uffbd\042\uffbd\043\uffbd\110\uffbd" +
    "\111\uffbd\112\uffbd\113\uffbd\114\uffbd\115\uffbd\116\uffbd\117" +
    "\uffbd\120\uffbd\121\uffbd\122\uffbd\123\uffbd\124\uffbd\125\uffbd" +
    "\126\uffbd\127\uffbd\130\uffbd\131\uffbd\132\uffbd\133\uffbd\134" +
    "\uffbd\135\uffbd\136\uffbd\137\uffbd\140\uffbd\141\uffbd\142\uffbd" +
    "\143\uffbd\144\uffbd\145\uffbd\146\uffbd\147\uffbd\150\uffbd\151" +
    "\uffbd\152\uffbd\153\uffbd\266\uffbd\267\uffbd\001\002\000\134" +
    "\026\uffbb\027\uffbb\030\uffbb\031\uffbb\032\uffbb\042\uffbb\043" +
    "\uffbb\110\uffbb\111\uffbb\112\uffbb\113\uffbb\114\uffbb\115\uffbb" +
    "\116\uffbb\117\uffbb\120\uffbb\121\uffbb\122\uffbb\123\uffbb\124" +
    "\uffbb\125\uffbb\126\uffbb\127\uffbb\130\uffbb\131\uffbb\132\uffbb" +
    "\133\uffbb\134\uffbb\135\uffbb\136\uffbb\137\uffbb\140\uffbb\141" +
    "\uffbb\142\uffbb\143\uffbb\144\uffbb\145\uffbb\146\uffbb\147\uffbb" +
    "\150\uffbb\151\uffbb\152\uffbb\153\uffbb\266\uffbb\267\uffbb\001" +
    "\002\000\134\026\uffbe\027\uffbe\030\uffbe\031\uffbe\032\uffbe" +
    "\042\uffbe\043\uffbe\110\uffbe\111\uffbe\112\uffbe\113\uffbe\114" +
    "\uffbe\115\uffbe\116\uffbe\117\uffbe\120\uffbe\121\uffbe\122\uffbe" +
    "\123\uffbe\124\uffbe\125\uffbe\126\uffbe\127\uffbe\130\uffbe\131" +
    "\uffbe\132\uffbe\133\uffbe\134\uffbe\135\uffbe\136\uffbe\137\uffbe" +
    "\140\uffbe\141\uffbe\142\uffbe\143\uffbe\144\uffbe\145\uffbe\146" +
    "\uffbe\147\uffbe\150\uffbe\151\uffbe\152\uffbe\153\uffbe\266\uffbe" +
    "\267\uffbe\001\002\000\134\026\uffba\027\uffba\030\uffba\031" +
    "\uffba\032\uffba\042\uffba\043\uffba\110\uffba\111\uffba\112\uffba" +
    "\113\uffba\114\uffba\115\uffba\116\uffba\117\uffba\120\uffba\121" +
    "\uffba\122\uffba\123\uffba\124\uffba\125\uffba\126\uffba\127\uffba" +
    "\130\uffba\131\uffba\132\uffba\133\uffba\134\uffba\135\uffba\136" +
    "\uffba\137\uffba\140\uffba\141\uffba\142\uffba\143\uffba\144\uffba" +
    "\145\uffba\146\uffba\147\uffba\150\uffba\151\uffba\152\uffba\153" +
    "\uffba\266\uffba\267\uffba\001\002\000\134\026\250\027\247" +
    "\030\246\031\245\032\244\042\u011e\043\u0120\110\240\111" +
    "\236\112\307\113\303\114\301\115\277\116\276\117\275" +
    "\120\271\121\267\122\266\123\265\124\264\125\263\126" +
    "\262\127\261\130\260\131\257\132\256\133\255\134\254" +
    "\135\253\136\252\137\251\140\243\141\242\142\241\143" +
    "\237\144\305\145\304\146\302\147\300\150\274\151\273" +
    "\152\272\153\270\266\u012e\267\u012f\001\002\000\134\026" +
    "\uffb9\027\uffb9\030\uffb9\031\uffb9\032\uffb9\042\uffb9\043\uffb9" +
    "\110\uffb9\111\uffb9\112\uffb9\113\uffb9\114\uffb9\115\uffb9\116" +
    "\uffb9\117\uffb9\120\uffb9\121\uffb9\122\uffb9\123\uffb9\124\uffb9" +
    "\125\uffb9\126\uffb9\127\uffb9\130\uffb9\131\uffb9\132\uffb9\133" +
    "\uffb9\134\uffb9\135\uffb9\136\uffb9\137\uffb9\140\uffb9\141\uffb9" +
    "\142\uffb9\143\uffb9\144\uffb9\145\uffb9\146\uffb9\147\uffb9\150" +
    "\uffb9\151\uffb9\152\uffb9\153\uffb9\266\uffb9\267\uffb9\001\002" +
    "\000\134\026\uffb8\027\uffb8\030\uffb8\031\uffb8\032\uffb8\042" +
    "\uffb8\043\uffb8\110\uffb8\111\uffb8\112\uffb8\113\uffb8\114\uffb8" +
    "\115\uffb8\116\uffb8\117\uffb8\120\uffb8\121\uffb8\122\uffb8\123" +
    "\uffb8\124\uffb8\125\uffb8\126\uffb8\127\uffb8\130\uffb8\131\uffb8" +
    "\132\uffb8\133\uffb8\134\uffb8\135\uffb8\136\uffb8\137\uffb8\140" +
    "\uffb8\141\uffb8\142\uffb8\143\uffb8\144\uffb8\145\uffb8\146\uffb8" +
    "\147\uffb8\150\uffb8\151\uffb8\152\uffb8\153\uffb8\266\uffb8\267" +
    "\uffb8\001\002\000\024\241\uffc6\251\uffc6\253\uffc6\254\uffc6" +
    "\255\uffc6\256\uffc6\257\uffc6\260\uffc6\261\uffc6\001\002\000" +
    "\024\241\uffc7\251\uffc7\253\uffc7\254\uffc7\255\uffc7\256\uffc7" +
    "\257\uffc7\260\uffc7\261\uffc7\001\002\000\024\241\uffc2\251" +
    "\u012a\253\u0129\254\u0127\255\u0128\256\u0125\257\u0126\260\u012d" +
    "\261\u012c\001\002\000\004\241\uffc1\001\002\000\134\026" +
    "\250\027\247\030\246\031\245\032\244\042\u011e\043\u0120" +
    "\110\240\111\236\112\307\113\303\114\301\115\277\116" +
    "\276\117\275\120\271\121\267\122\266\123\265\124\264" +
    "\125\263\126\262\127\261\130\260\131\257\132\256\133" +
    "\255\134\254\135\253\136\252\137\251\140\243\141\242" +
    "\142\241\143\237\144\305\145\304\146\302\147\300\150" +
    "\274\151\273\152\272\153\270\266\u012e\267\u012f\001\002" +
    "\000\024\241\uffc0\251\u012a\253\u0129\254\u0127\255\u0128\256" +
    "\u0125\257\u0126\260\u012d\261\u012c\001\002\000\004\241\uffbf" +
    "\001\002\000\004\234\u0136\001\002\000\u010e\016\141\026" +
    "\175\027\174\030\172\031\167\032\166\033\027\034\026" +
    "\035\024\036\023\037\022\040\162\041\203\044\157\045" +
    "\156\046\155\047\152\050\151\051\147\052\146\053\144" +
    "\054\120\055\117\056\116\057\115\060\114\061\113\062" +
    "\112\063\107\064\070\065\067\066\066\067\065\070\064" +
    "\071\063\072\062\073\061\074\045\075\044\076\043\077" +
    "\042\100\040\101\037\102\034\103\032\104\221\105\217" +
    "\106\215\107\213\110\200\111\177\112\176\113\173\114" +
    "\171\115\170\116\165\117\164\120\142\121\140\122\136" +
    "\123\135\124\134\125\132\126\131\127\127\130\110\131" +
    "\106\132\105\133\104\134\103\135\102\136\101\137\100" +
    "\140\060\141\057\142\055\143\054\144\053\145\052\146" +
    "\051\147\050\150\033\151\031\152\030\153\025\154\225" +
    "\155\223\156\222\157\220\160\216\161\214\162\212\163" +
    "\211\164\126\165\125\166\124\167\123\170\122\171\121" +
    "\173\227\174\073\175\210\176\111\177\230\200\035\201" +
    "\036\202\041\203\047\204\137\205\204\206\201\207\153" +
    "\210\145\211\226\212\150\213\143\214\224\215\071\216" +
    "\072\217\074\220\075\221\076\222\077\223\056\224\205" +
    "\225\130\226\206\227\207\235\154\262\163\265\160\267" +
    "\202\271\046\273\133\001\002\000\004\233\u0138\001\002" +
    "\000\004\273\u0139\001\002\000\u0118\016\uffd8\026\uffd8\027" +
    "\uffd8\030\uffd8\031\uffd8\032\uffd8\033\uffd8\034\uffd8\035\uffd8" +
    "\036\uffd8\037\uffd8\040\uffd8\041\uffd8\044\uffd8\045\uffd8\046" +
    "\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8\054\uffd8" +
    "\055\uffd8\056\uffd8\057\uffd8\060\uffd8\061\uffd8\062\uffd8\063" +
    "\uffd8\064\uffd8\065\uffd8\066\uffd8\067\uffd8\070\uffd8\071\uffd8" +
    "\072\uffd8\073\uffd8\074\uffd8\075\uffd8\076\uffd8\077\uffd8\100" +
    "\uffd8\101\uffd8\102\uffd8\103\uffd8\104\uffd8\105\uffd8\106\uffd8" +
    "\107\uffd8\110\uffd8\111\uffd8\112\uffd8\113\uffd8\114\uffd8\115" +
    "\uffd8\116\uffd8\117\uffd8\120\uffd8\121\uffd8\122\uffd8\123\uffd8" +
    "\124\uffd8\125\uffd8\126\uffd8\127\uffd8\130\uffd8\131\uffd8\132" +
    "\uffd8\133\uffd8\134\uffd8\135\uffd8\136\uffd8\137\uffd8\140\uffd8" +
    "\141\uffd8\142\uffd8\143\uffd8\144\uffd8\145\uffd8\146\uffd8\147" +
    "\uffd8\150\uffd8\151\uffd8\152\uffd8\153\uffd8\154\uffd8\155\uffd8" +
    "\156\uffd8\157\uffd8\160\uffd8\161\uffd8\162\uffd8\163\uffd8\164" +
    "\uffd8\165\uffd8\166\uffd8\167\uffd8\170\uffd8\171\uffd8\173\uffd8" +
    "\174\uffd8\175\uffd8\176\uffd8\177\uffd8\200\uffd8\201\uffd8\202" +
    "\uffd8\203\uffd8\204\uffd8\205\uffd8\206\uffd8\207\uffd8\210\uffd8" +
    "\211\uffd8\212\uffd8\213\uffd8\214\uffd8\215\uffd8\216\uffd8\217" +
    "\uffd8\220\uffd8\221\uffd8\222\uffd8\223\uffd8\224\uffd8\225\uffd8" +
    "\226\uffd8\227\uffd8\232\uffd8\233\uffd8\235\uffd8\237\uffd8\245" +
    "\uffd8\262\uffd8\265\uffd8\267\uffd8\271\uffd8\272\uffd8\273\uffd8" +
    "\001\002\000\024\241\uffc3\251\uffc3\253\uffc3\254\uffc3\255" +
    "\uffc3\256\uffc3\257\uffc3\260\uffc3\261\uffc3\001\002\000\004" +
    "\234\u013c\001\002\000\u010e\016\141\026\175\027\174\030" +
    "\172\031\167\032\166\033\027\034\026\035\024\036\023" +
    "\037\022\040\162\041\203\044\157\045\156\046\155\047" +
    "\152\050\151\051\147\052\146\053\144\054\120\055\117" +
    "\056\116\057\115\060\114\061\113\062\112\063\107\064" +
    "\070\065\067\066\066\067\065\070\064\071\063\072\062" +
    "\073\061\074\045\075\044\076\043\077\042\100\040\101" +
    "\037\102\034\103\032\104\221\105\217\106\215\107\213" +
    "\110\200\111\177\112\176\113\173\114\171\115\170\116" +
    "\165\117\164\120\142\121\140\122\136\123\135\124\134" +
    "\125\132\126\131\127\127\130\110\131\106\132\105\133" +
    "\104\134\103\135\102\136\101\137\100\140\060\141\057" +
    "\142\055\143\054\144\053\145\052\146\051\147\050\150" +
    "\033\151\031\152\030\153\025\154\225\155\223\156\222" +
    "\157\220\160\216\161\214\162\212\163\211\164\126\165" +
    "\125\166\124\167\123\170\122\171\121\173\227\174\073" +
    "\175\210\176\111\177\230\200\035\201\036\202\041\203" +
    "\047\204\137\205\204\206\201\207\153\210\145\211\226" +
    "\212\150\213\143\214\224\215\071\216\072\217\074\220" +
    "\075\221\076\222\077\223\056\224\205\225\130\226\206" +
    "\227\207\235\154\262\163\265\160\267\202\271\046\273" +
    "\133\001\002\000\004\233\u013e\001\002\000\004\273\u013f" +
    "\001\002\000\u0118\016\uffd9\026\uffd9\027\uffd9\030\uffd9\031" +
    "\uffd9\032\uffd9\033\uffd9\034\uffd9\035\uffd9\036\uffd9\037\uffd9" +
    "\040\uffd9\041\uffd9\044\uffd9\045\uffd9\046\uffd9\047\uffd9\050" +
    "\uffd9\051\uffd9\052\uffd9\053\uffd9\054\uffd9\055\uffd9\056\uffd9" +
    "\057\uffd9\060\uffd9\061\uffd9\062\uffd9\063\uffd9\064\uffd9\065" +
    "\uffd9\066\uffd9\067\uffd9\070\uffd9\071\uffd9\072\uffd9\073\uffd9" +
    "\074\uffd9\075\uffd9\076\uffd9\077\uffd9\100\uffd9\101\uffd9\102" +
    "\uffd9\103\uffd9\104\uffd9\105\uffd9\106\uffd9\107\uffd9\110\uffd9" +
    "\111\uffd9\112\uffd9\113\uffd9\114\uffd9\115\uffd9\116\uffd9\117" +
    "\uffd9\120\uffd9\121\uffd9\122\uffd9\123\uffd9\124\uffd9\125\uffd9" +
    "\126\uffd9\127\uffd9\130\uffd9\131\uffd9\132\uffd9\133\uffd9\134" +
    "\uffd9\135\uffd9\136\uffd9\137\uffd9\140\uffd9\141\uffd9\142\uffd9" +
    "\143\uffd9\144\uffd9\145\uffd9\146\uffd9\147\uffd9\150\uffd9\151" +
    "\uffd9\152\uffd9\153\uffd9\154\uffd9\155\uffd9\156\uffd9\157\uffd9" +
    "\160\uffd9\161\uffd9\162\uffd9\163\uffd9\164\uffd9\165\uffd9\166" +
    "\uffd9\167\uffd9\170\uffd9\171\uffd9\173\uffd9\174\uffd9\175\uffd9" +
    "\176\uffd9\177\uffd9\200\uffd9\201\uffd9\202\uffd9\203\uffd9\204" +
    "\uffd9\205\uffd9\206\uffd9\207\uffd9\210\uffd9\211\uffd9\212\uffd9" +
    "\213\uffd9\214\uffd9\215\uffd9\216\uffd9\217\uffd9\220\uffd9\221" +
    "\uffd9\222\uffd9\223\uffd9\224\uffd9\225\uffd9\226\uffd9\227\uffd9" +
    "\232\uffd9\233\uffd9\235\uffd9\237\uffd9\245\uffd9\262\uffd9\265" +
    "\uffd9\267\uffd9\271\uffd9\272\uffd9\273\uffd9\001\002\000\024" +
    "\241\uffc4\251\uffc4\253\uffc4\254\uffc4\255\uffc4\256\uffc4\257" +
    "\uffc4\260\uffc4\261\uffc4\001\002\000\134\026\250\027\247" +
    "\030\246\031\245\032\244\042\u011e\043\u0120\110\240\111" +
    "\236\112\307\113\303\114\301\115\277\116\276\117\275" +
    "\120\271\121\267\122\266\123\265\124\264\125\263\126" +
    "\262\127\261\130\260\131\257\132\256\133\255\134\254" +
    "\135\253\136\252\137\251\140\243\141\242\142\241\143" +
    "\237\144\305\145\304\146\302\147\300\150\274\151\273" +
    "\152\272\153\270\266\u012e\267\u012f\001\002\000\004\241" +
    "\u014c\001\002\000\024\241\u0144\251\uffc5\253\uffc5\254\uffc5" +
    "\255\uffc5\256\uffc5\257\uffc5\260\uffc5\261\uffc5\001\002\000" +
    "\004\231\u0145\001\002\000\u010e\016\141\026\175\027\174" +
    "\030\172\031\167\032\166\033\027\034\026\035\024\036" +
    "\023\037\022\040\162\041\203\044\157\045\156\046\155" +
    "\047\152\050\151\051\147\052\146\053\144\054\120\055" +
    "\117\056\116\057\115\060\114\061\113\062\112\063\107" +
    "\064\070\065\067\066\066\067\065\070\064\071\063\072" +
    "\062\073\061\074\045\075\044\076\043\077\042\100\040" +
    "\101\037\102\034\103\032\104\221\105\217\106\215\107" +
    "\213\110\200\111\177\112\176\113\173\114\171\115\170" +
    "\116\165\117\164\120\142\121\140\122\136\123\135\124" +
    "\134\125\132\126\131\127\127\130\110\131\106\132\105" +
    "\133\104\134\103\135\102\136\101\137\100\140\060\141" +
    "\057\142\055\143\054\144\053\145\052\146\051\147\050" +
    "\150\033\151\031\152\030\153\025\154\225\155\223\156" +
    "\222\157\220\160\216\161\214\162\212\163\211\164\126" +
    "\165\125\166\124\167\123\170\122\171\121\173\227\174" +
    "\073\175\210\176\111\177\230\200\035\201\036\202\041" +
    "\203\047\204\137\205\204\206\201\207\153\210\145\211" +
    "\226\212\150\213\143\214\224\215\071\216\072\217\074" +
    "\220\075\221\076\222\077\223\056\224\205\225\130\226" +
    "\206\227\207\235\154\262\163\265\160\267\202\271\046" +
    "\273\133\001\002\000\006\232\uffdd\233\u0148\001\002\000" +
    "\004\232\u0149\001\002\000\u0118\016\uffe0\026\uffe0\027\uffe0" +
    "\030\uffe0\031\uffe0\032\uffe0\033\uffe0\034\uffe0\035\uffe0\036" +
    "\uffe0\037\uffe0\040\uffe0\041\uffe0\044\uffe0\045\uffe0\046\uffe0" +
    "\047\uffe0\050\uffe0\051\uffe0\052\uffe0\053\uffe0\054\uffe0\055" +
    "\uffe0\056\uffe0\057\uffe0\060\uffe0\061\uffe0\062\uffe0\063\uffe0" +
    "\064\uffe0\065\uffe0\066\uffe0\067\uffe0\070\uffe0\071\uffe0\072" +
    "\uffe0\073\uffe0\074\uffe0\075\uffe0\076\uffe0\077\uffe0\100\uffe0" +
    "\101\uffe0\102\uffe0\103\uffe0\104\uffe0\105\uffe0\106\uffe0\107" +
    "\uffe0\110\uffe0\111\uffe0\112\uffe0\113\uffe0\114\uffe0\115\uffe0" +
    "\116\uffe0\117\uffe0\120\uffe0\121\uffe0\122\uffe0\123\uffe0\124" +
    "\uffe0\125\uffe0\126\uffe0\127\uffe0\130\uffe0\131\uffe0\132\uffe0" +
    "\133\uffe0\134\uffe0\135\uffe0\136\uffe0\137\uffe0\140\uffe0\141" +
    "\uffe0\142\uffe0\143\uffe0\144\uffe0\145\uffe0\146\uffe0\147\uffe0" +
    "\150\uffe0\151\uffe0\152\uffe0\153\uffe0\154\uffe0\155\uffe0\156" +
    "\uffe0\157\uffe0\160\uffe0\161\uffe0\162\uffe0\163\uffe0\164\uffe0" +
    "\165\uffe0\166\uffe0\167\uffe0\170\uffe0\171\uffe0\173\uffe0\174" +
    "\uffe0\175\uffe0\176\uffe0\177\uffe0\200\uffe0\201\uffe0\202\uffe0" +
    "\203\uffe0\204\uffe0\205\uffe0\206\uffe0\207\uffe0\210\uffe0\211" +
    "\uffe0\212\uffe0\213\uffe0\214\uffe0\215\uffe0\216\uffe0\217\uffe0" +
    "\220\uffe0\221\uffe0\222\uffe0\223\uffe0\224\uffe0\225\uffe0\226" +
    "\uffe0\227\uffe0\232\uffe0\233\uffe0\235\uffe0\237\uffe0\245\uffe0" +
    "\262\uffe0\265\uffe0\267\uffe0\271\uffe0\272\uffe0\273\uffe0\001" +
    "\002\000\u010e\016\141\026\175\027\174\030\172\031\167" +
    "\032\166\033\027\034\026\035\024\036\023\037\022\040" +
    "\162\041\203\044\157\045\156\046\155\047\152\050\151" +
    "\051\147\052\146\053\144\054\120\055\117\056\116\057" +
    "\115\060\114\061\113\062\112\063\107\064\070\065\067" +
    "\066\066\067\065\070\064\071\063\072\062\073\061\074" +
    "\045\075\044\076\043\077\042\100\040\101\037\102\034" +
    "\103\032\104\221\105\217\106\215\107\213\110\200\111" +
    "\177\112\176\113\173\114\171\115\170\116\165\117\164" +
    "\120\142\121\140\122\136\123\135\124\134\125\132\126" +
    "\131\127\127\130\110\131\106\132\105\133\104\134\103" +
    "\135\102\136\101\137\100\140\060\141\057\142\055\143" +
    "\054\144\053\145\052\146\051\147\050\150\033\151\031" +
    "\152\030\153\025\154\225\155\223\156\222\157\220\160" +
    "\216\161\214\162\212\163\211\164\126\165\125\166\124" +
    "\167\123\170\122\171\121\173\227\174\073\175\210\176" +
    "\111\177\230\200\035\201\036\202\041\203\047\204\137" +
    "\205\204\206\201\207\153\210\145\211\226\212\150\213" +
    "\143\214\224\215\071\216\072\217\074\220\075\221\076" +
    "\222\077\223\056\224\205\225\130\226\206\227\207\235" +
    "\154\262\163\265\160\267\202\271\046\273\133\001\002" +
    "\000\004\233\u014b\001\002\000\u0118\016\uffdc\026\uffdc\027" +
    "\uffdc\030\uffdc\031\uffdc\032\uffdc\033\uffdc\034\uffdc\035\uffdc" +
    "\036\uffdc\037\uffdc\040\uffdc\041\uffdc\044\uffdc\045\uffdc\046" +
    "\uffdc\047\uffdc\050\uffdc\051\uffdc\052\uffdc\053\uffdc\054\uffdc" +
    "\055\uffdc\056\uffdc\057\uffdc\060\uffdc\061\uffdc\062\uffdc\063" +
    "\uffdc\064\uffdc\065\uffdc\066\uffdc\067\uffdc\070\uffdc\071\uffdc" +
    "\072\uffdc\073\uffdc\074\uffdc\075\uffdc\076\uffdc\077\uffdc\100" +
    "\uffdc\101\uffdc\102\uffdc\103\uffdc\104\uffdc\105\uffdc\106\uffdc" +
    "\107\uffdc\110\uffdc\111\uffdc\112\uffdc\113\uffdc\114\uffdc\115" +
    "\uffdc\116\uffdc\117\uffdc\120\uffdc\121\uffdc\122\uffdc\123\uffdc" +
    "\124\uffdc\125\uffdc\126\uffdc\127\uffdc\130\uffdc\131\uffdc\132" +
    "\uffdc\133\uffdc\134\uffdc\135\uffdc\136\uffdc\137\uffdc\140\uffdc" +
    "\141\uffdc\142\uffdc\143\uffdc\144\uffdc\145\uffdc\146\uffdc\147" +
    "\uffdc\150\uffdc\151\uffdc\152\uffdc\153\uffdc\154\uffdc\155\uffdc" +
    "\156\uffdc\157\uffdc\160\uffdc\161\uffdc\162\uffdc\163\uffdc\164" +
    "\uffdc\165\uffdc\166\uffdc\167\uffdc\170\uffdc\171\uffdc\173\uffdc" +
    "\174\uffdc\175\uffdc\176\uffdc\177\uffdc\200\uffdc\201\uffdc\202" +
    "\uffdc\203\uffdc\204\uffdc\205\uffdc\206\uffdc\207\uffdc\210\uffdc" +
    "\211\uffdc\212\uffdc\213\uffdc\214\uffdc\215\uffdc\216\uffdc\217" +
    "\uffdc\220\uffdc\221\uffdc\222\uffdc\223\uffdc\224\uffdc\225\uffdc" +
    "\226\uffdc\227\uffdc\232\uffdc\233\uffdc\235\uffdc\237\uffdc\245" +
    "\uffdc\262\uffdc\265\uffdc\267\uffdc\271\uffdc\272\uffdc\273\uffdc" +
    "\001\002\000\004\231\u014d\001\002\000\u010e\016\141\026" +
    "\175\027\174\030\172\031\167\032\166\033\027\034\026" +
    "\035\024\036\023\037\022\040\162\041\203\044\157\045" +
    "\156\046\155\047\152\050\151\051\147\052\146\053\144" +
    "\054\120\055\117\056\116\057\115\060\114\061\113\062" +
    "\112\063\107\064\070\065\067\066\066\067\065\070\064" +
    "\071\063\072\062\073\061\074\045\075\044\076\043\077" +
    "\042\100\040\101\037\102\034\103\032\104\221\105\217" +
    "\106\215\107\213\110\200\111\177\112\176\113\173\114" +
    "\171\115\170\116\165\117\164\120\142\121\140\122\136" +
    "\123\135\124\134\125\132\126\131\127\127\130\110\131" +
    "\106\132\105\133\104\134\103\135\102\136\101\137\100" +
    "\140\060\141\057\142\055\143\054\144\053\145\052\146" +
    "\051\147\050\150\033\151\031\152\030\153\025\154\225" +
    "\155\223\156\222\157\220\160\216\161\214\162\212\163" +
    "\211\164\126\165\125\166\124\167\123\170\122\171\121" +
    "\173\227\174\073\175\210\176\111\177\230\200\035\201" +
    "\036\202\041\203\047\204\137\205\204\206\201\207\153" +
    "\210\145\211\226\212\150\213\143\214\224\215\071\216" +
    "\072\217\074\220\075\221\076\222\077\223\056\224\205" +
    "\225\130\226\206\227\207\235\154\262\163\265\160\267" +
    "\202\271\046\273\133\001\002\000\006\232\uffdf\233\u0150" +
    "\001\002\000\004\232\u0151\001\002\000\u0118\016\uffe1\026" +
    "\uffe1\027\uffe1\030\uffe1\031\uffe1\032\uffe1\033\uffe1\034\uffe1" +
    "\035\uffe1\036\uffe1\037\uffe1\040\uffe1\041\uffe1\044\uffe1\045" +
    "\uffe1\046\uffe1\047\uffe1\050\uffe1\051\uffe1\052\uffe1\053\uffe1" +
    "\054\uffe1\055\uffe1\056\uffe1\057\uffe1\060\uffe1\061\uffe1\062" +
    "\uffe1\063\uffe1\064\uffe1\065\uffe1\066\uffe1\067\uffe1\070\uffe1" +
    "\071\uffe1\072\uffe1\073\uffe1\074\uffe1\075\uffe1\076\uffe1\077" +
    "\uffe1\100\uffe1\101\uffe1\102\uffe1\103\uffe1\104\uffe1\105\uffe1" +
    "\106\uffe1\107\uffe1\110\uffe1\111\uffe1\112\uffe1\113\uffe1\114" +
    "\uffe1\115\uffe1\116\uffe1\117\uffe1\120\uffe1\121\uffe1\122\uffe1" +
    "\123\uffe1\124\uffe1\125\uffe1\126\uffe1\127\uffe1\130\uffe1\131" +
    "\uffe1\132\uffe1\133\uffe1\134\uffe1\135\uffe1\136\uffe1\137\uffe1" +
    "\140\uffe1\141\uffe1\142\uffe1\143\uffe1\144\uffe1\145\uffe1\146" +
    "\uffe1\147\uffe1\150\uffe1\151\uffe1\152\uffe1\153\uffe1\154\uffe1" +
    "\155\uffe1\156\uffe1\157\uffe1\160\uffe1\161\uffe1\162\uffe1\163" +
    "\uffe1\164\uffe1\165\uffe1\166\uffe1\167\uffe1\170\uffe1\171\uffe1" +
    "\173\uffe1\174\uffe1\175\uffe1\176\uffe1\177\uffe1\200\uffe1\201" +
    "\uffe1\202\uffe1\203\uffe1\204\uffe1\205\uffe1\206\uffe1\207\uffe1" +
    "\210\uffe1\211\uffe1\212\uffe1\213\uffe1\214\uffe1\215\uffe1\216" +
    "\uffe1\217\uffe1\220\uffe1\221\uffe1\222\uffe1\223\uffe1\224\uffe1" +
    "\225\uffe1\226\uffe1\227\uffe1\232\uffe1\233\uffe1\235\uffe1\237" +
    "\uffe1\245\uffe1\262\uffe1\265\uffe1\267\uffe1\271\uffe1\272\uffe1" +
    "\273\uffe1\001\002\000\u010e\016\141\026\175\027\174\030" +
    "\172\031\167\032\166\033\027\034\026\035\024\036\023" +
    "\037\022\040\162\041\203\044\157\045\156\046\155\047" +
    "\152\050\151\051\147\052\146\053\144\054\120\055\117" +
    "\056\116\057\115\060\114\061\113\062\112\063\107\064" +
    "\070\065\067\066\066\067\065\070\064\071\063\072\062" +
    "\073\061\074\045\075\044\076\043\077\042\100\040\101" +
    "\037\102\034\103\032\104\221\105\217\106\215\107\213" +
    "\110\200\111\177\112\176\113\173\114\171\115\170\116" +
    "\165\117\164\120\142\121\140\122\136\123\135\124\134" +
    "\125\132\126\131\127\127\130\110\131\106\132\105\133" +
    "\104\134\103\135\102\136\101\137\100\140\060\141\057" +
    "\142\055\143\054\144\053\145\052\146\051\147\050\150" +
    "\033\151\031\152\030\153\025\154\225\155\223\156\222" +
    "\157\220\160\216\161\214\162\212\163\211\164\126\165" +
    "\125\166\124\167\123\170\122\171\121\173\227\174\073" +
    "\175\210\176\111\177\230\200\035\201\036\202\041\203" +
    "\047\204\137\205\204\206\201\207\153\210\145\211\226" +
    "\212\150\213\143\214\224\215\071\216\072\217\074\220" +
    "\075\221\076\222\077\223\056\224\205\225\130\226\206" +
    "\227\207\235\154\262\163\265\160\267\202\271\046\273" +
    "\133\001\002\000\004\233\u0153\001\002\000\u0118\016\uffde" +
    "\026\uffde\027\uffde\030\uffde\031\uffde\032\uffde\033\uffde\034" +
    "\uffde\035\uffde\036\uffde\037\uffde\040\uffde\041\uffde\044\uffde" +
    "\045\uffde\046\uffde\047\uffde\050\uffde\051\uffde\052\uffde\053" +
    "\uffde\054\uffde\055\uffde\056\uffde\057\uffde\060\uffde\061\uffde" +
    "\062\uffde\063\uffde\064\uffde\065\uffde\066\uffde\067\uffde\070" +
    "\uffde\071\uffde\072\uffde\073\uffde\074\uffde\075\uffde\076\uffde" +
    "\077\uffde\100\uffde\101\uffde\102\uffde\103\uffde\104\uffde\105" +
    "\uffde\106\uffde\107\uffde\110\uffde\111\uffde\112\uffde\113\uffde" +
    "\114\uffde\115\uffde\116\uffde\117\uffde\120\uffde\121\uffde\122" +
    "\uffde\123\uffde\124\uffde\125\uffde\126\uffde\127\uffde\130\uffde" +
    "\131\uffde\132\uffde\133\uffde\134\uffde\135\uffde\136\uffde\137" +
    "\uffde\140\uffde\141\uffde\142\uffde\143\uffde\144\uffde\145\uffde" +
    "\146\uffde\147\uffde\150\uffde\151\uffde\152\uffde\153\uffde\154" +
    "\uffde\155\uffde\156\uffde\157\uffde\160\uffde\161\uffde\162\uffde" +
    "\163\uffde\164\uffde\165\uffde\166\uffde\167\uffde\170\uffde\171" +
    "\uffde\173\uffde\174\uffde\175\uffde\176\uffde\177\uffde\200\uffde" +
    "\201\uffde\202\uffde\203\uffde\204\uffde\205\uffde\206\uffde\207" +
    "\uffde\210\uffde\211\uffde\212\uffde\213\uffde\214\uffde\215\uffde" +
    "\216\uffde\217\uffde\220\uffde\221\uffde\222\uffde\223\uffde\224" +
    "\uffde\225\uffde\226\uffde\227\uffde\232\uffde\233\uffde\235\uffde" +
    "\237\uffde\245\uffde\262\uffde\265\uffde\267\uffde\271\uffde\272" +
    "\uffde\273\uffde\001\002\000\u010e\016\141\026\175\027\174" +
    "\030\172\031\167\032\166\033\027\034\026\035\024\036" +
    "\023\037\022\040\162\041\203\044\157\045\156\046\155" +
    "\047\152\050\151\051\147\052\146\053\144\054\120\055" +
    "\117\056\116\057\115\060\114\061\113\062\112\063\107" +
    "\064\070\065\067\066\066\067\065\070\064\071\063\072" +
    "\062\073\061\074\045\075\044\076\043\077\042\100\040" +
    "\101\037\102\034\103\032\104\221\105\217\106\215\107" +
    "\213\110\200\111\177\112\176\113\173\114\171\115\170" +
    "\116\165\117\164\120\142\121\140\122\136\123\135\124" +
    "\134\125\132\126\131\127\127\130\110\131\106\132\105" +
    "\133\104\134\103\135\102\136\101\137\100\140\060\141" +
    "\057\142\055\143\054\144\053\145\052\146\051\147\050" +
    "\150\033\151\031\152\030\153\025\154\225\155\223\156" +
    "\222\157\220\160\216\161\214\162\212\163\211\164\126" +
    "\165\125\166\124\167\123\170\122\171\121\173\227\174" +
    "\073\175\210\176\111\177\230\200\035\201\036\202\041" +
    "\203\047\204\137\205\204\206\201\207\153\210\145\211" +
    "\226\212\150\213\143\214\224\215\071\216\072\217\074" +
    "\220\075\221\076\222\077\223\056\224\205\225\130\226" +
    "\206\227\207\235\154\262\163\265\160\267\202\271\046" +
    "\273\133\001\002\000\004\245\u0156\001\002\000\006\020" +
    "\ufff2\230\ufff2\001\002\000\012\004\360\005\362\006\363" +
    "\007\364\001\002\000\006\015\u0159\241\uffee\001\002\000" +
    "\004\267\015\001\002\000\004\241\uffed\001\002\000\006" +
    "\024\u0168\025\u0169\001\002\000\004\267\u015d\001\002\000" +
    "\004\240\u015e\001\002\000\006\241\u015f\267\015\001\002" +
    "\000\004\244\u0165\001\002\000\004\241\u0161\001\002\000" +
    "\004\244\u0162\001\002\000\u010e\016\141\026\175\027\174" +
    "\030\172\031\167\032\166\033\027\034\026\035\024\036" +
    "\023\037\022\040\162\041\203\044\157\045\156\046\155" +
    "\047\152\050\151\051\147\052\146\053\144\054\120\055" +
    "\117\056\116\057\115\060\114\061\113\062\112\063\107" +
    "\064\070\065\067\066\066\067\065\070\064\071\063\072" +
    "\062\073\061\074\045\075\044\076\043\077\042\100\040" +
    "\101\037\102\034\103\032\104\221\105\217\106\215\107" +
    "\213\110\200\111\177\112\176\113\173\114\171\115\170" +
    "\116\165\117\164\120\142\121\140\122\136\123\135\124" +
    "\134\125\132\126\131\127\127\130\110\131\106\132\105" +
    "\133\104\134\103\135\102\136\101\137\100\140\060\141" +
    "\057\142\055\143\054\144\053\145\052\146\051\147\050" +
    "\150\033\151\031\152\030\153\025\154\225\155\223\156" +
    "\222\157\220\160\216\161\214\162\212\163\211\164\126" +
    "\165\125\166\124\167\123\170\122\171\121\173\227\174" +
    "\073\175\210\176\111\177\230\200\035\201\036\202\041" +
    "\203\047\204\137\205\204\206\201\207\153\210\145\211" +
    "\226\212\150\213\143\214\224\215\071\216\072\217\074" +
    "\220\075\221\076\222\077\223\056\224\205\225\130\226" +
    "\206\227\207\235\154\262\163\265\160\267\202\271\046" +
    "\273\133\001\002\000\004\245\u0164\001\002\000\006\020" +
    "\uffef\230\uffef\001\002\000\u010e\016\141\026\175\027\174" +
    "\030\172\031\167\032\166\033\027\034\026\035\024\036" +
    "\023\037\022\040\162\041\203\044\157\045\156\046\155" +
    "\047\152\050\151\051\147\052\146\053\144\054\120\055" +
    "\117\056\116\057\115\060\114\061\113\062\112\063\107" +
    "\064\070\065\067\066\066\067\065\070\064\071\063\072" +
    "\062\073\061\074\045\075\044\076\043\077\042\100\040" +
    "\101\037\102\034\103\032\104\221\105\217\106\215\107" +
    "\213\110\200\111\177\112\176\113\173\114\171\115\170" +
    "\116\165\117\164\120\142\121\140\122\136\123\135\124" +
    "\134\125\132\126\131\127\127\130\110\131\106\132\105" +
    "\133\104\134\103\135\102\136\101\137\100\140\060\141" +
    "\057\142\055\143\054\144\053\145\052\146\051\147\050" +
    "\150\033\151\031\152\030\153\025\154\225\155\223\156" +
    "\222\157\220\160\216\161\214\162\212\163\211\164\126" +
    "\165\125\166\124\167\123\170\122\171\121\173\227\174" +
    "\073\175\210\176\111\177\230\200\035\201\036\202\041" +
    "\203\047\204\137\205\204\206\201\207\153\210\145\211" +
    "\226\212\150\213\143\214\224\215\071\216\072\217\074" +
    "\220\075\221\076\222\077\223\056\224\205\225\130\226" +
    "\206\227\207\235\154\262\163\265\160\267\202\271\046" +
    "\273\133\001\002\000\004\245\u0167\001\002\000\006\020" +
    "\ufff1\230\ufff1\001\002\000\004\240\u016e\001\002\000\004" +
    "\244\u016b\001\002\000\004\017\ufffd\001\002\000\u010e\016" +
    "\141\026\175\027\174\030\172\031\167\032\166\033\027" +
    "\034\026\035\024\036\023\037\022\040\162\041\203\044" +
    "\157\045\156\046\155\047\152\050\151\051\147\052\146" +
    "\053\144\054\120\055\117\056\116\057\115\060\114\061" +
    "\113\062\112\063\107\064\070\065\067\066\066\067\065" +
    "\070\064\071\063\072\062\073\061\074\045\075\044\076" +
    "\043\077\042\100\040\101\037\102\034\103\032\104\221" +
    "\105\217\106\215\107\213\110\200\111\177\112\176\113" +
    "\173\114\171\115\170\116\165\117\164\120\142\121\140" +
    "\122\136\123\135\124\134\125\132\126\131\127\127\130" +
    "\110\131\106\132\105\133\104\134\103\135\102\136\101" +
    "\137\100\140\060\141\057\142\055\143\054\144\053\145" +
    "\052\146\051\147\050\150\033\151\031\152\030\153\025" +
    "\154\225\155\223\156\222\157\220\160\216\161\214\162" +
    "\212\163\211\164\126\165\125\166\124\167\123\170\122" +
    "\171\121\173\227\174\073\175\210\176\111\177\230\200" +
    "\035\201\036\202\041\203\047\204\137\205\204\206\201" +
    "\207\153\210\145\211\226\212\150\213\143\214\224\215" +
    "\071\216\072\217\074\220\075\221\076\222\077\223\056" +
    "\224\205\225\130\226\206\227\207\235\154\262\163\265" +
    "\160\267\202\271\046\273\133\001\002\000\004\245\u016d" +
    "\001\002\000\004\017\ufff5\001\002\000\004\241\u016f\001" +
    "\002\000\004\247\u0170\001\002\000\004\025\u0169\001\002" +
    "\000\004\017\ufffc\001\002\000\004\002\001\001\002\000" +
    "\004\244\u0174\001\002\000\u0110\016\141\026\175\027\174" +
    "\030\172\031\167\032\166\033\027\034\026\035\024\036" +
    "\023\037\022\040\162\041\203\044\157\045\156\046\155" +
    "\047\152\050\151\051\147\052\146\053\144\054\120\055" +
    "\117\056\116\057\115\060\114\061\113\062\112\063\107" +
    "\064\070\065\067\066\066\067\065\070\064\071\063\072" +
    "\062\073\061\074\045\075\044\076\043\077\042\100\040" +
    "\101\037\102\034\103\032\104\221\105\217\106\215\107" +
    "\213\110\200\111\177\112\176\113\173\114\171\115\170" +
    "\116\165\117\164\120\142\121\140\122\136\123\135\124" +
    "\134\125\132\126\131\127\127\130\110\131\106\132\105" +
    "\133\104\134\103\135\102\136\101\137\100\140\060\141" +
    "\057\142\055\143\054\144\053\145\052\146\051\147\050" +
    "\150\033\151\031\152\030\153\025\154\225\155\223\156" +
    "\222\157\220\160\216\161\214\162\212\163\211\164\126" +
    "\165\125\166\124\167\123\170\122\171\121\173\227\174" +
    "\073\175\210\176\111\177\230\200\035\201\036\202\041" +
    "\203\047\204\137\205\204\206\201\207\153\210\145\211" +
    "\226\212\150\213\143\214\224\215\071\216\072\217\074" +
    "\220\075\221\076\222\077\223\056\224\205\225\130\226" +
    "\206\227\207\235\154\245\u0175\262\163\265\160\267\202" +
    "\271\046\273\133\001\002\000\004\002\ufff3\001\002\000" +
    "\004\245\u0177\001\002\000\004\002\ufff4\001\002\000\004" +
    "\240\u017a\001\002\000\004\017\uffff\001\002\000\004\241" +
    "\u017b\001\002\000\004\247\u017c\001\002\000\004\025\u0169" +
    "\001\002\000\004\017\ufffe\001\002\000\u0100\026\175\027" +
    "\174\030\172\031\167\032\166\033\027\034\026\035\024" +
    "\036\023\037\022\040\162\041\203\044\157\045\156\046" +
    "\155\047\152\050\151\051\147\052\146\053\144\054\120" +
    "\055\117\056\116\057\115\060\114\061\113\062\112\063" +
    "\107\064\070\065\067\066\066\067\065\070\064\071\063" +
    "\072\062\073\061\074\045\075\044\076\043\077\042\100" +
    "\040\101\037\102\034\103\032\104\221\105\217\106\215" +
    "\107\213\110\200\111\177\112\176\113\173\114\171\115" +
    "\170\116\165\117\164\120\142\121\140\122\136\123\135" +
    "\124\134\125\132\126\131\127\127\130\110\131\106\132" +
    "\105\133\104\134\103\135\102\136\101\137\100\140\060" +
    "\141\057\142\055\143\054\144\053\145\052\146\051\147" +
    "\050\150\033\151\031\152\030\153\025\154\225\155\223" +
    "\156\222\157\220\160\216\161\214\162\212\163\211\164" +
    "\126\165\125\166\124\167\123\170\122\171\121\173\227" +
    "\174\073\175\210\176\111\177\230\200\035\201\036\202" +
    "\041\203\047\204\137\205\204\206\201\207\153\210\145" +
    "\211\226\212\150\213\143\214\224\215\071\216\072\217" +
    "\074\220\075\221\076\222\077\223\056\224\205\225\130" +
    "\226\206\227\207\001\002\000\u0110\016\141\026\175\027" +
    "\174\030\172\031\167\032\166\033\027\034\026\035\024" +
    "\036\023\037\022\040\162\041\203\044\157\045\156\046" +
    "\155\047\152\050\151\051\147\052\146\053\144\054\120" +
    "\055\117\056\116\057\115\060\114\061\113\062\112\063" +
    "\107\064\070\065\067\066\066\067\065\070\064\071\063" +
    "\072\062\073\061\074\045\075\044\076\043\077\042\100" +
    "\040\101\037\102\034\103\032\104\221\105\217\106\215" +
    "\107\213\110\200\111\177\112\176\113\173\114\171\115" +
    "\170\116\165\117\164\120\142\121\140\122\136\123\135" +
    "\124\134\125\132\126\131\127\127\130\110\131\106\132" +
    "\105\133\104\134\103\135\102\136\101\137\100\140\060" +
    "\141\057\142\055\143\054\144\053\145\052\146\051\147" +
    "\050\150\033\151\031\152\030\153\025\154\225\155\223" +
    "\156\222\157\220\160\216\161\214\162\212\163\211\164" +
    "\126\165\125\166\124\167\123\170\122\171\121\173\227" +
    "\174\073\175\210\176\111\177\230\200\035\201\036\202" +
    "\041\203\047\204\137\205\204\206\201\207\153\210\145" +
    "\211\226\212\150\213\143\214\224\215\071\216\072\217" +
    "\074\220\075\221\076\222\077\223\056\224\205\225\130" +
    "\226\206\227\207\235\154\245\u0186\262\163\265\160\267" +
    "\202\271\046\273\133\001\002\000\004\250\u0181\001\002" +
    "\000\006\022\u0184\023\u0182\001\002\000\004\247\ufff6\001" +
    "\002\000\004\247\u0185\001\002\000\004\247\ufff7\001\002" +
    "\000\u0110\016\ufff9\026\ufff9\027\ufff9\030\ufff9\031\ufff9\032" +
    "\ufff9\033\ufff9\034\ufff9\035\ufff9\036\ufff9\037\ufff9\040\ufff9" +
    "\041\ufff9\044\ufff9\045\ufff9\046\ufff9\047\ufff9\050\ufff9\051" +
    "\ufff9\052\ufff9\053\ufff9\054\ufff9\055\ufff9\056\ufff9\057\ufff9" +
    "\060\ufff9\061\ufff9\062\ufff9\063\ufff9\064\ufff9\065\ufff9\066" +
    "\ufff9\067\ufff9\070\ufff9\071\ufff9\072\ufff9\073\ufff9\074\ufff9" +
    "\075\ufff9\076\ufff9\077\ufff9\100\ufff9\101\ufff9\102\ufff9\103" +
    "\ufff9\104\ufff9\105\ufff9\106\ufff9\107\ufff9\110\ufff9\111\ufff9" +
    "\112\ufff9\113\ufff9\114\ufff9\115\ufff9\116\ufff9\117\ufff9\120" +
    "\ufff9\121\ufff9\122\ufff9\123\ufff9\124\ufff9\125\ufff9\126\ufff9" +
    "\127\ufff9\130\ufff9\131\ufff9\132\ufff9\133\ufff9\134\ufff9\135" +
    "\ufff9\136\ufff9\137\ufff9\140\ufff9\141\ufff9\142\ufff9\143\ufff9" +
    "\144\ufff9\145\ufff9\146\ufff9\147\ufff9\150\ufff9\151\ufff9\152" +
    "\ufff9\153\ufff9\154\ufff9\155\ufff9\156\ufff9\157\ufff9\160\ufff9" +
    "\161\ufff9\162\ufff9\163\ufff9\164\ufff9\165\ufff9\166\ufff9\167" +
    "\ufff9\170\ufff9\171\ufff9\173\ufff9\174\ufff9\175\ufff9\176\ufff9" +
    "\177\ufff9\200\ufff9\201\ufff9\202\ufff9\203\ufff9\204\ufff9\205" +
    "\ufff9\206\ufff9\207\ufff9\210\ufff9\211\ufff9\212\ufff9\213\ufff9" +
    "\214\ufff9\215\ufff9\216\ufff9\217\ufff9\220\ufff9\221\ufff9\222" +
    "\ufff9\223\ufff9\224\ufff9\225\ufff9\226\ufff9\227\ufff9\235\ufff9" +
    "\245\ufff9\262\ufff9\265\ufff9\267\ufff9\271\ufff9\273\ufff9\001" +
    "\002\000\006\024\ufffb\025\ufffb\001\002\000\006\250\u018a" +
    "\252\235\001\002\000\004\245\u0189\001\002\000\006\024" +
    "\ufffa\025\ufffa\001\002\000\132\022\u0184\023\u0182\026\250" +
    "\027\247\030\246\031\245\032\244\110\240\111\236\112" +
    "\307\113\303\114\301\115\277\116\276\117\275\120\271" +
    "\121\267\122\266\123\265\124\264\125\263\126\262\127" +
    "\261\130\260\131\257\132\256\133\255\134\254\135\253" +
    "\136\252\137\251\140\243\141\242\142\241\143\237\144" +
    "\305\145\304\146\302\147\300\150\274\151\273\152\272" +
    "\153\270\266\311\001\002\000\004\247\u018c\001\002\000" +
    "\u0110\016\ufff8\026\ufff8\027\ufff8\030\ufff8\031\ufff8\032\ufff8" +
    "\033\ufff8\034\ufff8\035\ufff8\036\ufff8\037\ufff8\040\ufff8\041" +
    "\ufff8\044\ufff8\045\ufff8\046\ufff8\047\ufff8\050\ufff8\051\ufff8" +
    "\052\ufff8\053\ufff8\054\ufff8\055\ufff8\056\ufff8\057\ufff8\060" +
    "\ufff8\061\ufff8\062\ufff8\063\ufff8\064\ufff8\065\ufff8\066\ufff8" +
    "\067\ufff8\070\ufff8\071\ufff8\072\ufff8\073\ufff8\074\ufff8\075" +
    "\ufff8\076\ufff8\077\ufff8\100\ufff8\101\ufff8\102\ufff8\103\ufff8" +
    "\104\ufff8\105\ufff8\106\ufff8\107\ufff8\110\ufff8\111\ufff8\112" +
    "\ufff8\113\ufff8\114\ufff8\115\ufff8\116\ufff8\117\ufff8\120\ufff8" +
    "\121\ufff8\122\ufff8\123\ufff8\124\ufff8\125\ufff8\126\ufff8\127" +
    "\ufff8\130\ufff8\131\ufff8\132\ufff8\133\ufff8\134\ufff8\135\ufff8" +
    "\136\ufff8\137\ufff8\140\ufff8\141\ufff8\142\ufff8\143\ufff8\144" +
    "\ufff8\145\ufff8\146\ufff8\147\ufff8\150\ufff8\151\ufff8\152\ufff8" +
    "\153\ufff8\154\ufff8\155\ufff8\156\ufff8\157\ufff8\160\ufff8\161" +
    "\ufff8\162\ufff8\163\ufff8\164\ufff8\165\ufff8\166\ufff8\167\ufff8" +
    "\170\ufff8\171\ufff8\173\ufff8\174\ufff8\175\ufff8\176\ufff8\177" +
    "\ufff8\200\ufff8\201\ufff8\202\ufff8\203\ufff8\204\ufff8\205\ufff8" +
    "\206\ufff8\207\ufff8\210\ufff8\211\ufff8\212\ufff8\213\ufff8\214" +
    "\ufff8\215\ufff8\216\ufff8\217\ufff8\220\ufff8\221\ufff8\222\ufff8" +
    "\223\ufff8\224\ufff8\225\ufff8\226\ufff8\227\ufff8\235\ufff8\245" +
    "\ufff8\262\ufff8\265\ufff8\267\ufff8\271\ufff8\273\ufff8\001\002" +
    "\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u018b\000\004\003\003\001\001\000\002\001\001\000" +
    "\010\004\007\006\006\010\010\001\001\000\002\001\001" +
    "\000\004\007\u0178\001\001\000\004\005\u0171\001\001\000" +
    "\004\006\u015a\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\016\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\012\231" +
    "\014\230\017\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\012\372" +
    "\014\230\017\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\015\311\001\001\000\004" +
    "\015\305\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\020\335\026\336\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\342\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\345\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\030\347\031\350\001\001\000\002\001\001" +
    "\000\004\020\354\001\001\000\004\030\351\001\001\000" +
    "\004\020\353\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\360\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\370\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\015\376\020\375\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0101\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\020\u0104\001\001\000\002\001\001\000\010\012\u0106\014" +
    "\230\017\160\001\001\000\002\001\001\000\010\012\u0108" +
    "\014\230\017\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\u010c\001\001\000\002" +
    "\001\001\000\010\012\u010e\014\230\017\160\001\001\000" +
    "\002\001\001\000\010\012\u0110\014\230\017\160\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u0114\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\015\u0123\020\u0121" +
    "\021\u0122\022\u011e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\u012a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\015\u0123\021\u012f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\023" +
    "\u0131\024\u0130\001\001\000\002\001\001\000\006\015\u0123" +
    "\021\u0132\001\001\000\006\023\u0131\024\u0133\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\012\u0136\014\230" +
    "\017\160\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\012\u013c\014\230\017\160\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\015\u0142\021\u0122\022\u0141\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\012\u0145\014\230" +
    "\017\160\001\001\000\004\033\u0146\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\012\u0149\014\230\017\160" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\u014d\014\230\017\160\001\001\000\004" +
    "\032\u014e\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\012\u0151\014\230\017\160\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\012\u0154\014\230\017\160\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\u0157" +
    "\001\001\000\002\001\001\000\004\027\u0159\001\001\000" +
    "\002\001\001\000\004\007\u0169\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\027\u015f\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\012\u0162" +
    "\014\230\017\160\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\u0165\014\230\017\160\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\012\u016b\014\230\017\160" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\007\u0170\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\u0175\014\230\017\160\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u017c" +
    "\001\001\000\002\001\001\000\006\013\u017e\014\u017f\001" +
    "\001\000\010\012\u0187\014\u0186\017\160\001\001\000\002" +
    "\001\001\000\004\016\u0182\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\015\311\016\u018a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	static TablaDatos tabla = new TablaDatos();
	static int estado;
	StringBuffer m = new StringBuffer("");
    static StringBuffer []vec=new StringBuffer[10];
    static int i=0;
//******************************************* 
   public void Documenta(int tipo)
   { m.append("Error de Sintaxis No."+tipo);
     ManejoDeErrores objeto=new ManejoDeErrores();
     String tip=objeto.Errores(tipo);
	  m.append("\nMensaje --> "+tip+"\n");
      vec[i++]=m;
     
   }
//*******************************************
   public void syntax_error(Symbol cur_token)
   { 
   	estado=((Symbol)stack.peek()).parse_state;
   	  ManejoDeErrores obj = new ManejoDeErrores();
      String m=obj.analizaToken(cur_token);
      System.err.println("\n\nSimbolo actual analizado: "+m+"-->"+cur_token);
      //System.err.println("\n\nSimbolo actual analizado: "+cur_token);

   }
//******************************************
   public void report_error(String message, Object info) 
   { if (info instanceof java_cup.runtime.Symbol)
     { java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
       if (s.left >= 0)
       { m.append("Linea "+ (s.left +1));   
         if (s.right >= 0)                    
          m.append(", Columna "+(s.right)+"\n");
       }
     }
   }
/**************METODO MAIN ********/
public static void main(String[] arg)		
 	{
	  /* Crea un objeto parser */
	  parser parserObj = new parser();
	  /* Asigna el Scanner */
	  Yylex miAnalizadorLexico = new Yylex(new InputStreamReader(System.in));
	  parserObj.setScanner(miAnalizadorLexico);
	  try{
		parserObj.parse();
		tabla.imprimir();
	  }
catch(Exception x){ 
	  parserObj.Documenta(estado);
  	  for(int j=0;j<i;j++)
		System.out.println(vec[j]);

	}

}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {



methodsTable tablaMetodos = new methodsTable();
String codigo="";
String miCodigo="";
String errores="";
String retardos="";
String auxiliar="";
String losMetodos="";
String aux="";
String auxno="";
String aux2="";
String auxsw="";
String p2="";
String p1="";
String aux3="";
frijol f2;
String cadena_condiciones=" ";
String cadena_tipo="";
String cadena_parametros="";
String encadenamst="";

	private static Stack<String>p = new Stack<String>();
	private static Stack<String>pila2 = new Stack<String>();

	private static int actualTmp=0;

	private static String nuevaTmp() {
		return "tmp"+(++actualTmp);
	}

	private static int actualEtq=0;

	private static String nuevaEtq() {
		return "etqY"+(++actualEtq);
	}
	
	

	private String generarTerceto(String terceto) {
		String tmp = nuevaTmp();
		System.out.println("Terceto: "+tmp + terceto);
		return tmp;
	}

	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.etqVerdad = nuevaEtq();
		etqs.etqFalso = nuevaEtq();
		etqs.condicion = Rvalor1+condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
	System.out.println("\tif "+ Rvalor1 + condicion + Rvalor2 +" goto etq Vd "+ etqs.etqVerdad);
	//RESULT=Rvalor1 + condicion + Rvalor2;
    System.out.println("\tgoto etq Falso: "+ etqs.etqFalso);
		return etqs;
	}

	private BloqueCondicion generarCondicion(String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.condicion = condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
		return etqs;
	}
	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2,String extra){
		BloqueCondicion etqs = new BloqueCondicion();
		
		etqs.condicion = Rvalor1+condicion+Rvalor2+extra;
		auxiliar="";
		return etqs;
	}




  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // puertost ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // puertost ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // puertost ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // puertost ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // puertost ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd7+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // puertost ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // puertost ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // puertost ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // puertost ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // puertost ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd2+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // puertost ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // puertost ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // puertost ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // puertost ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // puertost ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc5+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // puertost ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // puertost ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // puertost ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // puertost ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc1+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // puertost ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // puertost ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // puertost ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // puertost ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // puertost ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // puertost ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // puertost ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // puertost ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // puertost ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // puertost ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // puertost ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // puertost ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // puertost ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa4+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // puertost ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // puertost ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // puertost ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // puertost ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // puertost ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // puertost ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // puertost ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // puertost ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // puertost ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // puertos ::= ADCON1_VCFG0 
            {
              String RESULT = null;
		int adcg0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg0 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // puertos ::= ADCON1_VCFG1 
            {
              String RESULT = null;
		int adcg1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg1 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // puertos ::= ADCON1_ADFM 
            {
              String RESULT = null;
		int adc1fmleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adc1fmright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adc1fm = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adc1fm + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // puertos ::= ADCON0_ADON 
            {
              String RESULT = null;
		int adcadonleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcadonright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcadon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcadon+ " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // puertos ::= ADCON0_GO 
            {
              String RESULT = null;
		int adcgoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcgoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcgo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcgo + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // puertos ::= ADCON0_CHS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // puertos ::= ADCON0_CHS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // puertos ::= ADCON0_CHS2 
            {
              String RESULT = null;
		int adcs2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // puertos ::= ADCON0_CHS3 
            {
              String RESULT = null;
		int adcs3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // puertos ::= ADCON0_ADCS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // puertos ::= ADCON0_ADCS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // puertos ::= OPTIONREG_RBPU 
            {
              String RESULT = null;
		int oprbpuleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oprbpuright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oprbpu = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oprbpu + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // puertos ::= OPTIONREG_PS0 
            {
              String RESULT = null;
		int opps0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // puertos ::= OPTIONREG_PS1 
            {
              String RESULT = null;
		int opps1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // puertos ::= OPTIONREG_PS2 
            {
              String RESULT = null;
		int opps2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // puertos ::= OPTIONREG_PSA 
            {
              String RESULT = null;
		int oppsaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oppsa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oppsa + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // puertos ::= OPTIONREG_T0SE 
            {
              String RESULT = null;
		int opt0seleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0seright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0se = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0se + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // puertos ::= OPTIONREG_T0CS 
            {
              String RESULT = null;
		int opt0csleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0csright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0cs = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0cs + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // puertos ::= OPTIONREG_PS 
            {
              String RESULT = null;
		int oppsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // puertos ::= OPTIONREG_INTEDG 
            {
              String RESULT = null;
		int opintedgleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opintedgright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opintedg = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opintedg + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // puertos ::= INTCONRBIF 
            {
              String RESULT = null;
		int intrbifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbif = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbif + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // puertos ::= INTCONINTF 
            {
              String RESULT = null;
		int intintfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intintfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intintf = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intintf + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // puertos ::= INTCONT0IF 
            {
              String RESULT = null;
		int intt0ifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0if = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0if + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // puertos ::= INTCONRBIE 
            {
              String RESULT = null;
		int intrbieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // puertos ::= INTCONINTE 
            {
              String RESULT = null;
		int intinteleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intinteright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intinte = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intinte + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // puertos ::= INTCONT0IE 
            {
              String RESULT = null;
		int intt0ieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0ie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0ie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // puertos ::= INTCONPEIE 
            {
              String RESULT = null;
		int intpeieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intpeieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intpeie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intpeie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // puertos ::= INTCONGIE 
            {
              String RESULT = null;
		int intgieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intgieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intgie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intgie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // puertos ::= ANSELH5 
            {
              String RESULT = null;
		int anselh5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // puertos ::= ANSELH4 
            {
              String RESULT = null;
		int anselh4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // puertos ::= ANSELH3 
            {
              String RESULT = null;
		int anselh3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // puertos ::= ANSELH2 
            {
              String RESULT = null;
		int anselh2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // puertos ::= ANSELH1 
            {
              String RESULT = null;
		int anselh1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // puertos ::= ANSELH0 
            {
              String RESULT = null;
		int anselh0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // puertos ::= ANSEL7 
            {
              String RESULT = null;
		int ansel7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel7 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // puertos ::= ANSEL6 
            {
              String RESULT = null;
		int ansel6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel6 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // puertos ::= ANSEL5 
            {
              String RESULT = null;
		int ansel5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // puertos ::= ANSEL4 
            {
              String RESULT = null;
		int ansel4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // puertos ::= ANSEL3 
            {
              String RESULT = null;
		int ansel3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // puertos ::= ANSEL2 
            {
              String RESULT = null;
		int ansel2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // puertos ::= ANSEL1 
            {
              String RESULT = null;
		int ansel1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // puertos ::= ANSEL0 
            {
              String RESULT = null;
		int ansel0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // puertos ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // puertos ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // puertos ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // puertos ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // puertos ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pd7+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // puertos ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // puertos ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // puertos ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // puertos ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // puertos ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd2+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // puertos ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // puertos ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // puertos ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		     RESULT=pc7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // puertos ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pc6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // puertos ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc5+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // puertos ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // puertos ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // puertos ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // puertos ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc1+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // puertos ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // puertos ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // puertos ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // puertos ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // puertos ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // puertos ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // puertos ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // puertos ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // puertos ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // puertos ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 	RESULT=pa7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // puertos ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // puertos ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // puertos ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  	RESULT=pa4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // puertos ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // puertos ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // puertos ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // puertos ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // puertos ::= TE3 
            {
              String RESULT = null;
		int te3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // puertos ::= TE2 
            {
              String RESULT = null;
		int te2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // puertos ::= TE1 
            {
              String RESULT = null;
		int te1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // puertos ::= TE0 
            {
              String RESULT = null;
		int te0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // puertos ::= TD7 
            {
              String RESULT = null;
		int td7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // puertos ::= TD6 
            {
              String RESULT = null;
		int td6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // puertos ::= TD5 
            {
              String RESULT = null;
		int td5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // puertos ::= TD4 
            {
              String RESULT = null;
		int td4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // puertos ::= TD3 
            {
              String RESULT = null;
		int td3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // puertos ::= TD2 
            {
              String RESULT = null;
		int td2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // puertos ::= TD1 
            {
              String RESULT = null;
		int td1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // puertos ::= TD0 
            {
              String RESULT = null;
		int td0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // puertos ::= TC7 
            {
              String RESULT = null;
		int tc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // puertos ::= TC6 
            {
              String RESULT = null;
		int tc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // puertos ::= TC5 
            {
              String RESULT = null;
		int tc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // puertos ::= TC4 
            {
              String RESULT = null;
		int tc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // puertos ::= TC3 
            {
              String RESULT = null;
		int tc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // puertos ::= TC2 
            {
              String RESULT = null;
		int tc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // puertos ::= TC1 
            {
              String RESULT = null;
		int tc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // puertos ::= TC0 
            {
              String RESULT = null;
		int tc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // puertos ::= TB7 
            {
              String RESULT = null;
		int tb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // puertos ::= TB6 
            {
              String RESULT = null;
		int tb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // puertos ::= TB5 
            {
              String RESULT = null;
		int tb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // puertos ::= TB4 
            {
              String RESULT = null;
		int tb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // puertos ::= TB3 
            {
              String RESULT = null;
		int tb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // puertos ::= TB2 
            {
              String RESULT = null;
		int tb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // puertos ::= TB1 
            {
              String RESULT = null;
		int tb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // puertos ::= TB0 
            {
              String RESULT = null;
		int tb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // puertos ::= TA7 
            {
              String RESULT = null;
		int ta7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // puertos ::= TA6 
            {
              String RESULT = null;
		int ta6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // puertos ::= TA5 
            {
              String RESULT = null;
		int ta5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // puertos ::= TA4 
            {
              String RESULT = null;
		int ta4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // puertos ::= TA3 
            {
              String RESULT = null;
		int ta3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // puertos ::= TA2 
            {
              String RESULT = null;
		int ta2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // puertos ::= TA1 
            {
              String RESULT = null;
		int ta1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // puertos ::= TA0 
            {
              String RESULT = null;
		int ta0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // puertos ::= INTCON 
            {
              String RESULT = null;
		int intconleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intconright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intcon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = intcon + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // puertos ::= ANSELH 
            {
              String RESULT = null;
		int anselhleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselhright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = anselh + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // puertos ::= ANSEL 
            {
              String RESULT = null;
		int anselleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = ansel + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // puertos ::= TE 
            {
              String RESULT = null;
		int teleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int teright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=te+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // puertos ::= TD 
            {
              String RESULT = null;
		int tdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=td+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // puertos ::= TC 
            {
              String RESULT = null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=tc+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // puertos ::= TB 
            {
              String RESULT = null;
		int tbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=tb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // puertos ::= TA 
            {
              String RESULT = null;
		int taleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int taright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=ta+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // puertos ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // puertos ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // puertos ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // puertos ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // puertos ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // exprtipos ::= CTELOGICA 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // exprtipos ::= CARACTER 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // exprtipos ::= NUMREAL 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // exprtipos ::= NUMERO 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		  
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // exprtipos ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			System.out.println("Esto es un identificador= "+id);
			 DatoSimbolo s;
			 if ((s = parser.tabla.buscar(id)) != null) {
				cadena_tipo=s.getTipo();
				RESULT =s.getValor() ;
			}else{
				System.out.println("Varible -->"+id+" no declarada");
			} 

		  
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // tipo ::= BOOLEAN 
            {
              String RESULT = null;
		
		  RESULT="bool";
		   
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // tipo ::= CHAR 
            {
              String RESULT = null;
		 
		 	RESULT="char";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // tipo ::= REAL 
            {
              String RESULT = null;
		 
		 	RESULT="float";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // tipo ::= INTEGER 
            {
              String RESULT = null;
		
 		 	RESULT="int";
 		
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // signo ::= AND 
            {
              String RESULT = null;
		        RESULT=" && "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // signo ::= OR 
            {
              String RESULT = null;
		         RESULT=" || "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // signo ::= DIFERENTE 
            {
              String RESULT = null;
		  RESULT=" != "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // signo ::= IGUAL2 
            {
              String RESULT = null;
		     RESULT=" == "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // signo ::= MAYORIGUAL 
            {
              String RESULT = null;
		 RESULT=" >= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // signo ::= MENORIGUAL 
            {
              String RESULT = null;
		 RESULT=" <= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // signo ::= MENOR 
            {
              String RESULT = null;
		      RESULT=" < ";  
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // signo ::= MAYOR 
            {
              String RESULT = null;
		       RESULT=" > ";  
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // condicion_extra ::= signo item_condicion condicion_extra 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					cadena_condiciones =" "+sig+e1 +cadena_condiciones;
					RESULT =cadena_condiciones;
					System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // condicion_extra ::= signo item_condicion 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					cadena_condiciones=" "+sig+e1;
					RESULT=cadena_condiciones;
					System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // condicion ::= item_condicion signo item_condicion condicion_extra 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			 RESULT = generarCondicion(e1 ,sig, e2,c);
			
              CUP$parser$result = new java_cup.runtime.Symbol(16/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // condicion ::= item_condicion signo item_condicion 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT = generarCondicion(e1 ,sig, e2);
			
              CUP$parser$result = new java_cup.runtime.Symbol(16/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // item_condicion ::= HEXA HEXACADENA 
            {
              String RESULT = null;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT="0x"+hc;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // item_condicion ::= BINARIO CADENA 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT="0b"+n;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // item_condicion ::= puertost 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT=p;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // item_condicion ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 
			RESULT= Integer.toString(num); 
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // item_condicion ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=id;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // expression ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT= Integer.toString(num); 
								//generarTerceto("="+num);
			
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // expression ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=id;
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // extraperamesta ::= extraperamesta operamesta expression 
            {
              Object RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					
					encadenamst=encadenamst+o+v;
					RESULT=encadenamst;

				
              CUP$parser$result = new java_cup.runtime.Symbol(23/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // extraperamesta ::= operamesta expression 
            {
              Object RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT=o+v;
				
              CUP$parser$result = new java_cup.runtime.Symbol(23/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // operamesta ::= MENOS 
            {
              Object RESULT = null;
		RESULT="-";
              CUP$parser$result = new java_cup.runtime.Symbol(22/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // operamesta ::= MAS 
            {
              Object RESULT = null;
		RESULT="+";
              CUP$parser$result = new java_cup.runtime.Symbol(22/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // cases ::= cases CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=c+"case "+e2+":\n";
				
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // cases ::= CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT="case "+e2+":\n";
				
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // cases ::= cases OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=c+"default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // cases ::= cases CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT=c+"case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // cases ::= OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		
				RESULT="default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // cases ::= CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // instruccion ::= ID IGUAL expression operamesta expression extraperamesta PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object eo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		

				RESULT=v+"="+v2+o+v3+eo+";\n";
				encadenamst="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // instruccion ::= ID IGUAL expression operamesta expression PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+v2+o+v3+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // instruccion ::= ID RECBITSDER NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+">>"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // instruccion ::= ID RECBITSIZQ NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"<<"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // instruccion ::= WHILE LPAREN expression RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";	
		  
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // instruccion ::= WHILE LPAREN condicion RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c.condicion+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";	
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // instruccion ::= SWITCH LPAREN puertost RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+p+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // instruccion ::= SWITCH LPAREN expression RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+e+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones NT$1 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		
					//f2=pila2.pop();
					//p1=f2.getInstruccion();
					p1=pila2.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+p+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // NT$1 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

					//frijol f=new frijol("",auxiliar);
					pila2.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(25/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones NT$0 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		
					/*f2=p.pop();
					p1=f2.getInstruccion();*/
					p1=p.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+c.condicion+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // NT$0 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

					//frijol f=new frijol("",auxiliar);
					p.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(24/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
			
				aux="\n\t\tif("+p+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
			
				aux="\n\t\tif("+c.condicion+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // instruccion ::= RETURN PCOMA 
            {
              String RESULT = null;
		
				RESULT="return;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // instruccion ::= puertos IGUAL puertost MAS NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=p+u+"+"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // instruccion ::= CHALE LPAREN NUMERO RPAREN PCOMA 
            {
              String RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				//retardos= retardos+c+"("+n+");\n";
	   			RESULT=c+"("+n+");\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // instruccion ::= ID LPAREN RPAREN PCOMA 
            {
              String RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		  
				Metodos s;
				if ((s = tablaMetodos.search(i)) == null)
				{System.out.println(i+ " es una METODO no definido");}			
				else
				{
					// System.out.println(i+" instrucciones del metodo => "+s.getValor());
					//System.out.println("codigo intermedio==> "+i+"();");
					RESULT="\t"+i+"();\n";
				}	
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // instruccion ::= puertos IGUAL NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+n+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // instruccion ::= puertos TOGGLE puertost PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+t+u+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // instruccion ::= ID IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			System.out.println("Mensaje "+id + "-->"+t);
			DatoSimbolo ds=parser.tabla.buscar(id);
			 if(ds!= null){
			 	System.err.println(id + " redeclarada.");
			 RESULT="\n\t"+id+"="+t+";";
			}
			 else{
			 	System.out.println("Error al Asignar valor a: "+id);
			}

			
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // instruccion ::= TIPOVC ID DOSPUNTOS tipo IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//RESULT = t;
				if(parser.tabla.buscar(id)!= null){
					System.err.println(id + " redeclarada.");
				}else{
				 	System.out.println("Mensaje "+id + "-->"+e);
				 	switch(t){
			            case "int":
			                if(Num.valInt(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			                }else{
			                	String msj="//La variable: "+id+" es una cadena y no es compatible\n";
			                    RESULT= msj;
			                }
			                break;
			            case "float":
			            	if(Num.valFloat(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			            	}else{
			            		String msj="//La variable: "+id+" es una cadena y no es compatible\n";
			                    RESULT= msj;
			            	}
			                break;
			            case "char":
			            	if(Num.valInt(e) || Num.valFloat(e)){
				                String msj="//La variable: "+id+" es un numero y no es compatible\n";
			                    RESULT= msj;
				            }else{
				                RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
				            }
			                break;
			            case "bool":
			                break;
		        	}
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // instruccion ::= TIPOVC ID DOSPUNTOS tipo PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				DatoSimbolo ds=parser.tabla.buscar(id);
				if(ds!= null)
					System.err.println(id + " redeclarada.");
				else{
				 	System.out.println("Mensaje "+id + "-->"+t);
				 	RESULT="\n\t"+t+" "+id+";";
					parser.tabla.insertar(id, t,"");
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // instrucciones ::= instruccion instrucciones 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				System.out.println("valor de in en instrucciones:"+in);
				auxiliar=in+auxiliar;
				//RESULT=in;
                //aux=in;
				System.out.println("cadena de varias instrucciones en aux:"+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // instrucciones ::= instruccion 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				System.out.println("valor de in en intruccion:"+in);
				auxiliar=in + auxiliar;
                //aux=in;
				//RESULT=in;
				System.out.println("cadena de una istruccion en aux: "+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros ::= ID DOSPUNTOS tipo COMA parametros 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				cadena_parametros=" "+t+" "+id+" ,"+cadena_parametros;
			
              CUP$parser$result = new java_cup.runtime.Symbol(21/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parametros ::= ID DOSPUNTOS tipo 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				cadena_parametros=" "+t+" "+id;
			
              CUP$parser$result = new java_cup.runtime.Symbol(21/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // metodo ::= metodo VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // metodo ::= VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{ 
				s.setvalue(auxiliar);
			}			
			codigo=v+i+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // metodo ::= metodo VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // metodo ::= VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{ 
				s.setvalue(auxiliar);
			}			
			codigo=v+i+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // main ::= MAIN LLLAVE RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n\n\t\t return; \n\t }";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // main ::= MAIN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n"+auxiliar+"\n\t\t return; \n\t }";
		    auxiliar="";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ciclo ::= CICLO LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int cicloleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cicloright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object ciclo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+ciclo+"{\n\t \twhile(1){\n\n"+ auxiliar +"\t\t}\n\n\t}";
			auxiliar="";
        
              CUP$parser$result = new java_cup.runtime.Symbol(5/*ciclo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // io ::= SALIDA 
            {
              String RESULT = null;
		int salidaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int salidaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object salida = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 
		RESULT="0;\n"; 
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // io ::= ENTRADA 
            {
              String RESULT = null;
		 
		RESULT="1;\n";  
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // confpuertos ::= confpuertos puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
	        
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // confpuertos ::= puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
			
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // setup ::= SETUP LLLAVE confpuertos instrucciones RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
	        //System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;\n\tANSEL=0;\n"+miCodigo+auxiliar+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // setup ::= SETUP LLLAVE confpuertos RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			//System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;"+miCodigo+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // metodos ::= metodo setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 
					miCodigo=retardo+losMetodos+miCodigo;  
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // metodos ::= metodo setup ciclo 
            {
              Object RESULT = null;
		 
					miCodigo=losMetodos+miCodigo;  
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // metodos ::= setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 miCodigo=retardo+miCodigo;  
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // metodos ::= setup ciclo 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= programa EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // programa ::= FUSES metodos main 
            {
              Object RESULT = null;
		int fusesleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int fusesright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object fuses = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
 					miCodigo=fuses+miCodigo;
              		 // System.out.println("Clase Generada\n\n"+miCodigo+"\n\n");
                File miClase;
	        	try{
	            	miClase = new File("mapic.c");
	            	if(miClase.exists())
	            		miClase.delete();
	            	if(miClase.createNewFile()){
	                	//System.out.println("Se ha creado el archivo");
	            	}
	            	FileWriter escribir=new FileWriter(miClase,true);
	            	escribir.write(miCodigo);
	            	escribir.close();
	        	}catch(IOException e){
	        		System.out.println("ERROR NO SE PUEDE ");
	        	}
             

              CUP$parser$result = new java_cup.runtime.Symbol(1/*programa*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

