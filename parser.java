
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sun Aug 02 19:22:22 CDT 2015
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Stack;

/** CUP v0.10k generated parser.
  * @version Sun Aug 02 19:22:22 CDT 2015
  */
public class parser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0115\000\002\003\005\000\002\002\004\000\002\004" +
    "\004\000\002\004\010\000\002\004\005\000\002\004\011" +
    "\000\002\006\006\000\002\006\007\000\002\013\006\000" +
    "\002\013\007\000\002\016\003\000\002\016\003\000\002" +
    "\007\006\000\002\005\006\000\002\005\005\000\002\010" +
    "\011\000\002\010\012\000\002\010\012\000\002\010\013" +
    "\000\002\027\005\000\002\027\007\000\002\012\003\000" +
    "\002\012\004\000\002\017\007\000\002\017\011\000\002" +
    "\017\006\000\002\017\006\000\002\017\006\000\002\017" +
    "\006\000\002\017\007\000\002\017\007\000\002\017\010" +
    "\000\002\017\010\000\002\017\006\000\002\017\006\000" +
    "\002\017\004\000\002\017\006\000\002\017\011\000\002" +
    "\017\011\000\002\034\002\000\002\017\014\000\002\035" +
    "\002\000\002\017\014\000\002\017\012\000\002\017\012" +
    "\000\002\017\012\000\002\017\012\000\002\017\006\000" +
    "\002\017\006\000\002\017\010\000\002\017\010\000\002" +
    "\017\010\000\002\017\011\000\002\017\006\000\002\017" +
    "\010\000\002\017\010\000\002\032\005\000\002\032\007" +
    "\000\002\032\010\000\002\032\011\000\002\032\007\000" +
    "\002\032\007\000\002\032\010\000\002\032\010\000\002" +
    "\033\004\000\002\033\003\000\002\033\004\000\002\033" +
    "\005\000\002\011\006\000\002\011\005\000\002\011\007" +
    "\000\002\011\006\000\002\011\005\000\002\011\006\000" +
    "\002\030\003\000\002\030\003\000\002\030\003\000\002" +
    "\031\004\000\002\031\005\000\002\020\003\000\002\020" +
    "\003\000\002\020\004\000\002\020\004\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\021\004\000" +
    "\002\021\004\000\002\022\005\000\002\022\006\000\002" +
    "\024\004\000\002\024\005\000\002\023\003\000\002\023" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\025\003\000\002\025\003\000\002\025\003\000\002" +
    "\025\003\000\002\026\003\000\002\026\003\000\002\026" +
    "\003\000\002\026\003\000\002\026\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01c8\000\004\023\005\001\002\000\004\002\u01ca\001" +
    "\002\000\006\022\006\232\012\001\002\000\004\247\u01bb" +
    "\001\002\000\006\026\u01b5\027\u01a6\001\002\000\004\021" +
    "\u01b0\001\002\000\006\022\006\232\u0199\001\002\000\004" +
    "\272\013\001\002\000\004\242\014\001\002\000\006\243" +
    "\016\272\015\001\002\000\004\251\u0194\001\002\000\004" +
    "\247\u0191\001\002\000\004\243\020\001\002\000\004\247" +
    "\021\001\002\000\u0112\016\142\017\163\020\066\030\177" +
    "\031\176\032\174\033\171\034\170\035\027\036\026\037" +
    "\024\040\023\041\022\042\164\043\205\046\160\047\157" +
    "\050\156\051\153\052\152\053\150\054\147\055\145\056" +
    "\121\057\120\060\117\061\116\062\115\063\114\064\112" +
    "\065\110\066\071\067\070\070\067\071\065\072\064\073" +
    "\063\074\062\075\061\076\045\077\044\100\043\101\042" +
    "\102\040\103\037\104\034\105\032\106\223\107\221\110" +
    "\217\111\215\112\202\113\201\114\200\115\175\116\173" +
    "\117\172\120\167\121\166\122\143\123\141\124\137\125" +
    "\136\126\135\127\133\130\132\131\130\132\111\133\107" +
    "\134\106\135\105\136\104\137\103\140\102\141\101\142" +
    "\060\143\057\144\055\145\054\146\053\147\052\150\051" +
    "\151\050\152\033\153\031\154\030\155\025\156\227\157" +
    "\225\160\224\161\222\162\220\163\216\164\214\165\213" +
    "\166\127\167\126\170\125\171\124\172\123\173\122\175" +
    "\231\176\074\177\212\200\113\201\232\202\035\203\036" +
    "\204\041\205\047\206\140\207\206\210\203\211\154\212" +
    "\146\213\230\214\151\215\144\216\226\217\072\220\073" +
    "\221\075\222\076\223\077\224\100\225\056\226\207\227" +
    "\131\230\210\231\211\237\155\265\165\270\161\272\204" +
    "\274\046\276\134\001\002\000\006\253\uff8b\255\uff8b\001" +
    "\002\000\006\253\uff8c\255\uff8c\001\002\000\006\253\uff8d" +
    "\255\uff8d\001\002\000\006\253\uff40\255\uff40\001\002\000" +
    "\006\253\uff8e\255\uff8e\001\002\000\006\253\uff8f\255\uff8f" +
    "\001\002\000\006\253\uff41\255\uff41\001\002\000\006\253" +
    "\uff42\255\uff42\001\002\000\006\253\uff68\255\uff68\001\002" +
    "\000\006\253\uff43\255\uff43\001\002\000\006\253\uff69\255" +
    "\uff69\001\002\000\006\253\uff24\255\uff24\001\002\000\006" +
    "\253\uff23\255\uff23\001\002\000\006\253\uff6a\255\uff6a\001" +
    "\002\000\006\253\uff6b\255\uff6b\001\002\000\006\253\uff22" +
    "\255\uff22\001\002\000\006\253\uff6c\255\uff6c\001\002\000" +
    "\006\253\uff6d\255\uff6d\001\002\000\006\253\uff6e\255\uff6e" +
    "\001\002\000\006\253\uff6f\255\uff6f\001\002\000\004\242" +
    "\u017e\001\002\000\006\253\uff21\255\uff21\001\002\000\006" +
    "\253\uff44\255\uff44\001\002\000\006\253\uff45\255\uff45\001" +
    "\002\000\006\253\uff46\255\uff46\001\002\000\006\253\uff47" +
    "\255\uff47\001\002\000\006\253\uff48\255\uff48\001\002\000" +
    "\006\253\uff49\255\uff49\001\002\000\006\253\uff1a\255\uff1a" +
    "\001\002\000\006\253\uff4a\255\uff4a\001\002\000\006\253" +
    "\uff4b\255\uff4b\001\002\000\006\253\uff70\255\uff70\001\002" +
    "\000\006\253\uff71\255\uff71\001\002\000\006\253\uff72\255" +
    "\uff72\001\002\000\006\253\uff73\255\uff73\001\002\000\006" +
    "\253\uff74\255\uff74\001\002\000\004\253\u017b\001\002\000" +
    "\006\253\uff75\255\uff75\001\002\000\006\253\uff76\255\uff76" +
    "\001\002\000\006\253\uff77\255\uff77\001\002\000\006\253" +
    "\uff20\255\uff20\001\002\000\006\253\uff1f\255\uff1f\001\002" +
    "\000\006\253\uff28\255\uff28\001\002\000\006\253\uff1e\255" +
    "\uff1e\001\002\000\006\253\uff1d\255\uff1d\001\002\000\006" +
    "\253\uff1c\255\uff1c\001\002\000\006\253\uff1b\255\uff1b\001" +
    "\002\000\006\253\uff4c\255\uff4c\001\002\000\006\253\uff4d" +
    "\255\uff4d\001\002\000\006\253\uff4e\255\uff4e\001\002\000" +
    "\006\253\uff4f\255\uff4f\001\002\000\006\253\uff50\255\uff50" +
    "\001\002\000\006\253\uff51\255\uff51\001\002\000\006\253" +
    "\uff52\255\uff52\001\002\000\006\253\uff78\255\uff78\001\002" +
    "\000\006\253\uff53\255\uff53\001\002\000\006\253\uff79\255" +
    "\uff79\001\002\000\006\253\uff26\255\uff26\001\002\000\006" +
    "\253\uff7a\255\uff7a\001\002\000\006\253\uff7b\255\uff7b\001" +
    "\002\000\006\253\uff7c\255\uff7c\001\002\000\006\253\uff7d" +
    "\255\uff7d\001\002\000\006\253\uff7e\255\uff7e\001\002\000" +
    "\006\253\uff7f\255\uff7f\001\002\000\006\253\uff32\255\uff32" +
    "\001\002\000\006\253\uff33\255\uff33\001\002\000\006\253" +
    "\uff34\255\uff34\001\002\000\006\253\uff35\255\uff35\001\002" +
    "\000\006\253\uff36\255\uff36\001\002\000\006\253\uff37\255" +
    "\uff37\001\002\000\006\253\uff54\255\uff54\001\002\000\006" +
    "\253\uff18\255\uff18\001\002\000\006\253\uff55\255\uff55\001" +
    "\002\000\006\253\uff56\255\uff56\001\002\000\004\242\u0156" +
    "\001\002\000\006\253\uff57\255\uff57\001\002\000\006\253" +
    "\uff58\255\uff58\001\002\000\006\253\uff59\255\uff59\001\002" +
    "\000\006\253\uff88\255\uff88\001\002\000\006\253\uff5a\255" +
    "\uff5a\001\002\000\004\242\u0152\001\002\000\006\253\uff5b" +
    "\255\uff5b\001\002\000\006\253\uff2b\255\uff2b\001\002\000" +
    "\006\253\uff80\255\uff80\001\002\000\006\253\uff2e\255\uff2e" +
    "\001\002\000\006\253\uff81\255\uff81\001\002\000\006\253" +
    "\uff82\255\uff82\001\002\000\006\253\uff2c\255\uff2c\001\002" +
    "\000\006\253\uff83\255\uff83\001\002\000\006\253\uff84\255" +
    "\uff84\001\002\000\006\253\uff2f\255\uff2f\001\002\000\004" +
    "\242\u0137\001\002\000\006\253\uff85\255\uff85\001\002\000" +
    "\006\253\uff86\255\uff86\001\002\000\006\253\uff87\255\uff87" +
    "\001\002\000\004\252\u0136\001\002\000\u011c\016\142\017" +
    "\163\020\066\030\177\031\176\032\174\033\171\034\170" +
    "\035\027\036\026\037\024\040\023\041\022\042\164\043" +
    "\205\046\160\047\157\050\156\051\153\052\152\053\150" +
    "\054\147\055\145\056\121\057\120\060\117\061\116\062" +
    "\115\063\114\064\112\065\110\066\071\067\070\070\067" +
    "\071\065\072\064\073\063\074\062\075\061\076\045\077" +
    "\044\100\043\101\042\102\040\103\037\104\034\105\032" +
    "\106\223\107\221\110\217\111\215\112\202\113\201\114" +
    "\200\115\175\116\173\117\172\120\167\121\166\122\143" +
    "\123\141\124\137\125\136\126\135\127\133\130\132\131" +
    "\130\132\111\133\107\134\106\135\105\136\104\137\103" +
    "\140\102\141\101\142\060\143\057\144\055\145\054\146" +
    "\053\147\052\150\051\151\050\152\033\153\031\154\030" +
    "\155\025\156\227\157\225\160\224\161\222\162\220\163" +
    "\216\164\214\165\213\166\127\167\126\170\125\171\124" +
    "\172\123\173\122\175\231\176\074\177\212\200\113\201" +
    "\232\202\035\203\036\204\041\205\047\206\140\207\206" +
    "\210\203\211\154\212\146\213\230\214\151\215\144\216" +
    "\226\217\072\220\073\221\075\222\076\223\077\224\100" +
    "\225\056\226\207\227\131\230\210\231\211\234\uffec\235" +
    "\uffec\237\155\241\uffec\250\uffec\265\165\270\161\272\204" +
    "\274\046\275\uffec\276\134\001\002\000\004\247\u0131\001" +
    "\002\000\006\253\uff8a\255\uff8a\001\002\000\004\272\u0124" +
    "\001\002\000\006\253\uff5c\255\uff5c\001\002\000\006\253" +
    "\uff5d\255\uff5d\001\002\000\006\253\uff90\255\uff90\001\002" +
    "\000\006\253\uff91\255\uff91\001\002\000\006\253\uff5e\255" +
    "\uff5e\001\002\000\006\253\uff5f\255\uff5f\001\002\000\006" +
    "\253\uff92\255\uff92\001\002\000\006\253\uff60\255\uff60\001" +
    "\002\000\006\253\uff93\255\uff93\001\002\000\006\253\uff94" +
    "\255\uff94\001\002\000\006\253\uff61\255\uff61\001\002\000" +
    "\006\253\uff62\255\uff62\001\002\000\006\253\uff63\255\uff63" +
    "\001\002\000\006\253\uff30\255\uff30\001\002\000\016\242" +
    "\330\244\323\245\327\253\324\266\325\267\326\001\002" +
    "\000\006\253\uff89\255\uff89\001\002\000\006\253\uff31\255" +
    "\uff31\001\002\000\006\253\uff19\255\uff19\001\002\000\006" +
    "\253\uff17\255\uff17\001\002\000\006\253\uff16\255\uff16\001" +
    "\002\000\006\253\uff27\255\uff27\001\002\000\006\253\uff38" +
    "\255\uff38\001\002\000\006\253\uff39\255\uff39\001\002\000" +
    "\006\253\uff64\255\uff64\001\002\000\006\253\uff3a\255\uff3a" +
    "\001\002\000\006\253\uff65\255\uff65\001\002\000\006\253" +
    "\uff3b\255\uff3b\001\002\000\006\253\uff66\255\uff66\001\002" +
    "\000\006\253\uff3c\255\uff3c\001\002\000\006\253\uff67\255" +
    "\uff67\001\002\000\006\253\uff3d\255\uff3d\001\002\000\006" +
    "\253\uff3e\255\uff3e\001\002\000\006\253\uff2a\255\uff2a\001" +
    "\002\000\006\253\uff3f\255\uff3f\001\002\000\006\253\uff2d" +
    "\255\uff2d\001\002\000\006\253\uff29\255\uff29\001\002\000" +
    "\006\253\uff25\255\uff25\001\002\000\006\253\236\255\237" +
    "\001\002\000\004\250\235\001\002\000\006\022\ufff0\232" +
    "\ufff0\001\002\000\126\030\252\031\251\032\250\033\247" +
    "\034\246\112\242\113\240\114\310\115\305\116\304\117" +
    "\301\120\300\121\277\122\273\123\271\124\270\125\267" +
    "\126\266\127\265\130\264\131\263\132\262\133\261\134" +
    "\260\135\257\136\256\137\255\140\254\141\253\142\245" +
    "\143\244\144\243\145\241\146\311\147\306\150\303\151" +
    "\302\152\276\153\275\154\274\155\272\271\313\001\002" +
    "\000\124\030\252\031\251\032\250\033\247\034\246\112" +
    "\242\113\240\114\310\115\305\116\304\117\301\120\300" +
    "\121\277\122\273\123\271\124\270\125\267\126\266\127" +
    "\265\130\264\131\263\132\262\133\261\134\260\135\257" +
    "\136\256\137\255\140\254\141\253\142\245\143\244\144" +
    "\243\145\241\146\311\147\306\150\303\151\302\152\276" +
    "\153\275\154\274\155\272\001\002\000\030\243\uff0f\244" +
    "\uff0f\252\uff0f\254\uff0f\256\uff0f\257\uff0f\260\uff0f\261\uff0f" +
    "\262\uff0f\263\uff0f\264\uff0f\001\002\000\030\243\ufef5\244" +
    "\ufef5\252\ufef5\254\ufef5\256\ufef5\257\ufef5\260\ufef5\261\ufef5" +
    "\262\ufef5\263\ufef5\264\ufef5\001\002\000\030\243\uff10\244" +
    "\uff10\252\uff10\254\uff10\256\uff10\257\uff10\260\uff10\261\uff10" +
    "\262\uff10\263\uff10\264\uff10\001\002\000\030\243\ufef6\244" +
    "\ufef6\252\ufef6\254\ufef6\256\ufef6\257\ufef6\260\ufef6\261\ufef6" +
    "\262\ufef6\263\ufef6\264\ufef6\001\002\000\030\243\ufef7\244" +
    "\ufef7\252\ufef7\254\ufef7\256\ufef7\257\ufef7\260\ufef7\261\ufef7" +
    "\262\ufef7\263\ufef7\264\ufef7\001\002\000\030\243\ufef8\244" +
    "\ufef8\252\ufef8\254\ufef8\256\ufef8\257\ufef8\260\ufef8\261\ufef8" +
    "\262\ufef8\263\ufef8\264\ufef8\001\002\000\030\243\uff11\244" +
    "\uff11\252\uff11\254\uff11\256\uff11\257\uff11\260\uff11\261\uff11" +
    "\262\uff11\263\uff11\264\uff11\001\002\000\030\243\uff12\244" +
    "\uff12\252\uff12\254\uff12\256\uff12\257\uff12\260\uff12\261\uff12" +
    "\262\uff12\263\uff12\264\uff12\001\002\000\030\243\uff13\244" +
    "\uff13\252\uff13\254\uff13\256\uff13\257\uff13\260\uff13\261\uff13" +
    "\262\uff13\263\uff13\264\uff13\001\002\000\030\243\uff14\244" +
    "\uff14\252\uff14\254\uff14\256\uff14\257\uff14\260\uff14\261\uff14" +
    "\262\uff14\263\uff14\264\uff14\001\002\000\030\243\uff15\244" +
    "\uff15\252\uff15\254\uff15\256\uff15\257\uff15\260\uff15\261\uff15" +
    "\262\uff15\263\uff15\264\uff15\001\002\000\030\243\ufef9\244" +
    "\ufef9\252\ufef9\254\ufef9\256\ufef9\257\ufef9\260\ufef9\261\ufef9" +
    "\262\ufef9\263\ufef9\264\ufef9\001\002\000\030\243\ufefa\244" +
    "\ufefa\252\ufefa\254\ufefa\256\ufefa\257\ufefa\260\ufefa\261\ufefa" +
    "\262\ufefa\263\ufefa\264\ufefa\001\002\000\030\243\ufefb\244" +
    "\ufefb\252\ufefb\254\ufefb\256\ufefb\257\ufefb\260\ufefb\261\ufefb" +
    "\262\ufefb\263\ufefb\264\ufefb\001\002\000\030\243\ufefc\244" +
    "\ufefc\252\ufefc\254\ufefc\256\ufefc\257\ufefc\260\ufefc\261\ufefc" +
    "\262\ufefc\263\ufefc\264\ufefc\001\002\000\030\243\ufefd\244" +
    "\ufefd\252\ufefd\254\ufefd\256\ufefd\257\ufefd\260\ufefd\261\ufefd" +
    "\262\ufefd\263\ufefd\264\ufefd\001\002\000\030\243\ufefe\244" +
    "\ufefe\252\ufefe\254\ufefe\256\ufefe\257\ufefe\260\ufefe\261\ufefe" +
    "\262\ufefe\263\ufefe\264\ufefe\001\002\000\030\243\ufeff\244" +
    "\ufeff\252\ufeff\254\ufeff\256\ufeff\257\ufeff\260\ufeff\261\ufeff" +
    "\262\ufeff\263\ufeff\264\ufeff\001\002\000\030\243\uff00\244" +
    "\uff00\252\uff00\254\uff00\256\uff00\257\uff00\260\uff00\261\uff00" +
    "\262\uff00\263\uff00\264\uff00\001\002\000\030\243\uff01\244" +
    "\uff01\252\uff01\254\uff01\256\uff01\257\uff01\260\uff01\261\uff01" +
    "\262\uff01\263\uff01\264\uff01\001\002\000\030\243\uff02\244" +
    "\uff02\252\uff02\254\uff02\256\uff02\257\uff02\260\uff02\261\uff02" +
    "\262\uff02\263\uff02\264\uff02\001\002\000\030\243\uff03\244" +
    "\uff03\252\uff03\254\uff03\256\uff03\257\uff03\260\uff03\261\uff03" +
    "\262\uff03\263\uff03\264\uff03\001\002\000\030\243\uff04\244" +
    "\uff04\252\uff04\254\uff04\256\uff04\257\uff04\260\uff04\261\uff04" +
    "\262\uff04\263\uff04\264\uff04\001\002\000\030\243\uff05\244" +
    "\uff05\252\uff05\254\uff05\256\uff05\257\uff05\260\uff05\261\uff05" +
    "\262\uff05\263\uff05\264\uff05\001\002\000\030\243\uff06\244" +
    "\uff06\252\uff06\254\uff06\256\uff06\257\uff06\260\uff06\261\uff06" +
    "\262\uff06\263\uff06\264\uff06\001\002\000\030\243\uff07\244" +
    "\uff07\252\uff07\254\uff07\256\uff07\257\uff07\260\uff07\261\uff07" +
    "\262\uff07\263\uff07\264\uff07\001\002\000\030\243\ufeed\244" +
    "\ufeed\252\ufeed\254\ufeed\256\ufeed\257\ufeed\260\ufeed\261\ufeed" +
    "\262\ufeed\263\ufeed\264\ufeed\001\002\000\030\243\uff08\244" +
    "\uff08\252\uff08\254\uff08\256\uff08\257\uff08\260\uff08\261\uff08" +
    "\262\uff08\263\uff08\264\uff08\001\002\000\030\243\ufeee\244" +
    "\ufeee\252\ufeee\254\ufeee\256\ufeee\257\ufeee\260\ufeee\261\ufeee" +
    "\262\ufeee\263\ufeee\264\ufeee\001\002\000\030\243\ufeef\244" +
    "\ufeef\252\ufeef\254\ufeef\256\ufeef\257\ufeef\260\ufeef\261\ufeef" +
    "\262\ufeef\263\ufeef\264\ufeef\001\002\000\030\243\ufef0\244" +
    "\ufef0\252\ufef0\254\ufef0\256\ufef0\257\ufef0\260\ufef0\261\ufef0" +
    "\262\ufef0\263\ufef0\264\ufef0\001\002\000\030\243\uff09\244" +
    "\uff09\252\uff09\254\uff09\256\uff09\257\uff09\260\uff09\261\uff09" +
    "\262\uff09\263\uff09\264\uff09\001\002\000\030\243\uff0a\244" +
    "\uff0a\252\uff0a\254\uff0a\256\uff0a\257\uff0a\260\uff0a\261\uff0a" +
    "\262\uff0a\263\uff0a\264\uff0a\001\002\000\030\243\uff0b\244" +
    "\uff0b\252\uff0b\254\uff0b\256\uff0b\257\uff0b\260\uff0b\261\uff0b" +
    "\262\uff0b\263\uff0b\264\uff0b\001\002\000\030\243\ufef1\244" +
    "\ufef1\252\ufef1\254\ufef1\256\ufef1\257\ufef1\260\ufef1\261\ufef1" +
    "\262\ufef1\263\ufef1\264\ufef1\001\002\000\030\243\ufef2\244" +
    "\ufef2\252\ufef2\254\ufef2\256\ufef2\257\ufef2\260\ufef2\261\ufef2" +
    "\262\ufef2\263\ufef2\264\ufef2\001\002\000\030\243\uff0c\244" +
    "\uff0c\252\uff0c\254\uff0c\256\uff0c\257\uff0c\260\uff0c\261\uff0c" +
    "\262\uff0c\263\uff0c\264\uff0c\001\002\000\030\243\uff0d\244" +
    "\uff0d\252\uff0d\254\uff0d\256\uff0d\257\uff0d\260\uff0d\261\uff0d" +
    "\262\uff0d\263\uff0d\264\uff0d\001\002\000\030\243\ufef3\244" +
    "\ufef3\252\ufef3\254\ufef3\256\ufef3\257\ufef3\260\ufef3\261\ufef3" +
    "\262\ufef3\263\ufef3\264\ufef3\001\002\000\004\252\312\001" +
    "\002\000\030\243\uff0e\244\uff0e\252\uff0e\254\uff0e\256\uff0e" +
    "\257\uff0e\260\uff0e\261\uff0e\262\uff0e\263\uff0e\264\uff0e\001" +
    "\002\000\030\243\ufef4\244\ufef4\252\ufef4\254\ufef4\256\ufef4" +
    "\257\ufef4\260\ufef4\261\ufef4\262\ufef4\263\ufef4\264\ufef4\001" +
    "\002\000\u011c\016\uffe7\017\uffe7\020\uffe7\030\uffe7\031\uffe7" +
    "\032\uffe7\033\uffe7\034\uffe7\035\uffe7\036\uffe7\037\uffe7\040" +
    "\uffe7\041\uffe7\042\uffe7\043\uffe7\046\uffe7\047\uffe7\050\uffe7" +
    "\051\uffe7\052\uffe7\053\uffe7\054\uffe7\055\uffe7\056\uffe7\057" +
    "\uffe7\060\uffe7\061\uffe7\062\uffe7\063\uffe7\064\uffe7\065\uffe7" +
    "\066\uffe7\067\uffe7\070\uffe7\071\uffe7\072\uffe7\073\uffe7\074" +
    "\uffe7\075\uffe7\076\uffe7\077\uffe7\100\uffe7\101\uffe7\102\uffe7" +
    "\103\uffe7\104\uffe7\105\uffe7\106\uffe7\107\uffe7\110\uffe7\111" +
    "\uffe7\112\uffe7\113\uffe7\114\uffe7\115\uffe7\116\uffe7\117\uffe7" +
    "\120\uffe7\121\uffe7\122\uffe7\123\uffe7\124\uffe7\125\uffe7\126" +
    "\uffe7\127\uffe7\130\uffe7\131\uffe7\132\uffe7\133\uffe7\134\uffe7" +
    "\135\uffe7\136\uffe7\137\uffe7\140\uffe7\141\uffe7\142\uffe7\143" +
    "\uffe7\144\uffe7\145\uffe7\146\uffe7\147\uffe7\150\uffe7\151\uffe7" +
    "\152\uffe7\153\uffe7\154\uffe7\155\uffe7\156\uffe7\157\uffe7\160" +
    "\uffe7\161\uffe7\162\uffe7\163\uffe7\164\uffe7\165\uffe7\166\uffe7" +
    "\167\uffe7\170\uffe7\171\uffe7\172\uffe7\173\uffe7\175\uffe7\176" +
    "\uffe7\177\uffe7\200\uffe7\201\uffe7\202\uffe7\203\uffe7\204\uffe7" +
    "\205\uffe7\206\uffe7\207\uffe7\210\uffe7\211\uffe7\212\uffe7\213" +
    "\uffe7\214\uffe7\215\uffe7\216\uffe7\217\uffe7\220\uffe7\221\uffe7" +
    "\222\uffe7\223\uffe7\224\uffe7\225\uffe7\226\uffe7\227\uffe7\230" +
    "\uffe7\231\uffe7\234\uffe7\235\uffe7\237\uffe7\241\uffe7\250\uffe7" +
    "\265\uffe7\270\uffe7\272\uffe7\274\uffe7\275\uffe7\276\uffe7\001" +
    "\002\000\004\252\322\001\002\000\004\244\315\001\002" +
    "\000\006\271\317\272\316\001\002\000\004\252\321\001" +
    "\002\000\004\252\320\001\002\000\u011c\016\uffe2\017\uffe2" +
    "\020\uffe2\030\uffe2\031\uffe2\032\uffe2\033\uffe2\034\uffe2\035" +
    "\uffe2\036\uffe2\037\uffe2\040\uffe2\041\uffe2\042\uffe2\043\uffe2" +
    "\046\uffe2\047\uffe2\050\uffe2\051\uffe2\052\uffe2\053\uffe2\054" +
    "\uffe2\055\uffe2\056\uffe2\057\uffe2\060\uffe2\061\uffe2\062\uffe2" +
    "\063\uffe2\064\uffe2\065\uffe2\066\uffe2\067\uffe2\070\uffe2\071" +
    "\uffe2\072\uffe2\073\uffe2\074\uffe2\075\uffe2\076\uffe2\077\uffe2" +
    "\100\uffe2\101\uffe2\102\uffe2\103\uffe2\104\uffe2\105\uffe2\106" +
    "\uffe2\107\uffe2\110\uffe2\111\uffe2\112\uffe2\113\uffe2\114\uffe2" +
    "\115\uffe2\116\uffe2\117\uffe2\120\uffe2\121\uffe2\122\uffe2\123" +
    "\uffe2\124\uffe2\125\uffe2\126\uffe2\127\uffe2\130\uffe2\131\uffe2" +
    "\132\uffe2\133\uffe2\134\uffe2\135\uffe2\136\uffe2\137\uffe2\140" +
    "\uffe2\141\uffe2\142\uffe2\143\uffe2\144\uffe2\145\uffe2\146\uffe2" +
    "\147\uffe2\150\uffe2\151\uffe2\152\uffe2\153\uffe2\154\uffe2\155" +
    "\uffe2\156\uffe2\157\uffe2\160\uffe2\161\uffe2\162\uffe2\163\uffe2" +
    "\164\uffe2\165\uffe2\166\uffe2\167\uffe2\170\uffe2\171\uffe2\172" +
    "\uffe2\173\uffe2\175\uffe2\176\uffe2\177\uffe2\200\uffe2\201\uffe2" +
    "\202\uffe2\203\uffe2\204\uffe2\205\uffe2\206\uffe2\207\uffe2\210" +
    "\uffe2\211\uffe2\212\uffe2\213\uffe2\214\uffe2\215\uffe2\216\uffe2" +
    "\217\uffe2\220\uffe2\221\uffe2\222\uffe2\223\uffe2\224\uffe2\225" +
    "\uffe2\226\uffe2\227\uffe2\230\uffe2\231\uffe2\234\uffe2\235\uffe2" +
    "\237\uffe2\241\uffe2\250\uffe2\265\uffe2\270\uffe2\272\uffe2\274" +
    "\uffe2\275\uffe2\276\uffe2\001\002\000\u011c\016\uffe1\017\uffe1" +
    "\020\uffe1\030\uffe1\031\uffe1\032\uffe1\033\uffe1\034\uffe1\035" +
    "\uffe1\036\uffe1\037\uffe1\040\uffe1\041\uffe1\042\uffe1\043\uffe1" +
    "\046\uffe1\047\uffe1\050\uffe1\051\uffe1\052\uffe1\053\uffe1\054" +
    "\uffe1\055\uffe1\056\uffe1\057\uffe1\060\uffe1\061\uffe1\062\uffe1" +
    "\063\uffe1\064\uffe1\065\uffe1\066\uffe1\067\uffe1\070\uffe1\071" +
    "\uffe1\072\uffe1\073\uffe1\074\uffe1\075\uffe1\076\uffe1\077\uffe1" +
    "\100\uffe1\101\uffe1\102\uffe1\103\uffe1\104\uffe1\105\uffe1\106" +
    "\uffe1\107\uffe1\110\uffe1\111\uffe1\112\uffe1\113\uffe1\114\uffe1" +
    "\115\uffe1\116\uffe1\117\uffe1\120\uffe1\121\uffe1\122\uffe1\123" +
    "\uffe1\124\uffe1\125\uffe1\126\uffe1\127\uffe1\130\uffe1\131\uffe1" +
    "\132\uffe1\133\uffe1\134\uffe1\135\uffe1\136\uffe1\137\uffe1\140" +
    "\uffe1\141\uffe1\142\uffe1\143\uffe1\144\uffe1\145\uffe1\146\uffe1" +
    "\147\uffe1\150\uffe1\151\uffe1\152\uffe1\153\uffe1\154\uffe1\155" +
    "\uffe1\156\uffe1\157\uffe1\160\uffe1\161\uffe1\162\uffe1\163\uffe1" +
    "\164\uffe1\165\uffe1\166\uffe1\167\uffe1\170\uffe1\171\uffe1\172" +
    "\uffe1\173\uffe1\175\uffe1\176\uffe1\177\uffe1\200\uffe1\201\uffe1" +
    "\202\uffe1\203\uffe1\204\uffe1\205\uffe1\206\uffe1\207\uffe1\210" +
    "\uffe1\211\uffe1\212\uffe1\213\uffe1\214\uffe1\215\uffe1\216\uffe1" +
    "\217\uffe1\220\uffe1\221\uffe1\222\uffe1\223\uffe1\224\uffe1\225" +
    "\uffe1\226\uffe1\227\uffe1\230\uffe1\231\uffe1\234\uffe1\235\uffe1" +
    "\237\uffe1\241\uffe1\250\uffe1\265\uffe1\270\uffe1\272\uffe1\274" +
    "\uffe1\275\uffe1\276\uffe1\001\002\000\u011c\016\uffe6\017\uffe6" +
    "\020\uffe6\030\uffe6\031\uffe6\032\uffe6\033\uffe6\034\uffe6\035" +
    "\uffe6\036\uffe6\037\uffe6\040\uffe6\041\uffe6\042\uffe6\043\uffe6" +
    "\046\uffe6\047\uffe6\050\uffe6\051\uffe6\052\uffe6\053\uffe6\054" +
    "\uffe6\055\uffe6\056\uffe6\057\uffe6\060\uffe6\061\uffe6\062\uffe6" +
    "\063\uffe6\064\uffe6\065\uffe6\066\uffe6\067\uffe6\070\uffe6\071" +
    "\uffe6\072\uffe6\073\uffe6\074\uffe6\075\uffe6\076\uffe6\077\uffe6" +
    "\100\uffe6\101\uffe6\102\uffe6\103\uffe6\104\uffe6\105\uffe6\106" +
    "\uffe6\107\uffe6\110\uffe6\111\uffe6\112\uffe6\113\uffe6\114\uffe6" +
    "\115\uffe6\116\uffe6\117\uffe6\120\uffe6\121\uffe6\122\uffe6\123" +
    "\uffe6\124\uffe6\125\uffe6\126\uffe6\127\uffe6\130\uffe6\131\uffe6" +
    "\132\uffe6\133\uffe6\134\uffe6\135\uffe6\136\uffe6\137\uffe6\140" +
    "\uffe6\141\uffe6\142\uffe6\143\uffe6\144\uffe6\145\uffe6\146\uffe6" +
    "\147\uffe6\150\uffe6\151\uffe6\152\uffe6\153\uffe6\154\uffe6\155" +
    "\uffe6\156\uffe6\157\uffe6\160\uffe6\161\uffe6\162\uffe6\163\uffe6" +
    "\164\uffe6\165\uffe6\166\uffe6\167\uffe6\170\uffe6\171\uffe6\172" +
    "\uffe6\173\uffe6\175\uffe6\176\uffe6\177\uffe6\200\uffe6\201\uffe6" +
    "\202\uffe6\203\uffe6\204\uffe6\205\uffe6\206\uffe6\207\uffe6\210" +
    "\uffe6\211\uffe6\212\uffe6\213\uffe6\214\uffe6\215\uffe6\216\uffe6" +
    "\217\uffe6\220\uffe6\221\uffe6\222\uffe6\223\uffe6\224\uffe6\225" +
    "\uffe6\226\uffe6\227\uffe6\230\uffe6\231\uffe6\234\uffe6\235\uffe6" +
    "\237\uffe6\241\uffe6\250\uffe6\265\uffe6\270\uffe6\272\uffe6\274" +
    "\uffe6\275\uffe6\276\uffe6\001\002\000\004\244\u0122\001\002" +
    "\000\016\010\347\011\342\012\351\242\346\271\343\272" +
    "\345\001\002\000\004\271\337\001\002\000\004\271\335" +
    "\001\002\000\004\245\333\001\002\000\004\243\331\001" +
    "\002\000\004\252\332\001\002\000\u011c\016\uffe5\017\uffe5" +
    "\020\uffe5\030\uffe5\031\uffe5\032\uffe5\033\uffe5\034\uffe5\035" +
    "\uffe5\036\uffe5\037\uffe5\040\uffe5\041\uffe5\042\uffe5\043\uffe5" +
    "\046\uffe5\047\uffe5\050\uffe5\051\uffe5\052\uffe5\053\uffe5\054" +
    "\uffe5\055\uffe5\056\uffe5\057\uffe5\060\uffe5\061\uffe5\062\uffe5" +
    "\063\uffe5\064\uffe5\065\uffe5\066\uffe5\067\uffe5\070\uffe5\071" +
    "\uffe5\072\uffe5\073\uffe5\074\uffe5\075\uffe5\076\uffe5\077\uffe5" +
    "\100\uffe5\101\uffe5\102\uffe5\103\uffe5\104\uffe5\105\uffe5\106" +
    "\uffe5\107\uffe5\110\uffe5\111\uffe5\112\uffe5\113\uffe5\114\uffe5" +
    "\115\uffe5\116\uffe5\117\uffe5\120\uffe5\121\uffe5\122\uffe5\123" +
    "\uffe5\124\uffe5\125\uffe5\126\uffe5\127\uffe5\130\uffe5\131\uffe5" +
    "\132\uffe5\133\uffe5\134\uffe5\135\uffe5\136\uffe5\137\uffe5\140" +
    "\uffe5\141\uffe5\142\uffe5\143\uffe5\144\uffe5\145\uffe5\146\uffe5" +
    "\147\uffe5\150\uffe5\151\uffe5\152\uffe5\153\uffe5\154\uffe5\155" +
    "\uffe5\156\uffe5\157\uffe5\160\uffe5\161\uffe5\162\uffe5\163\uffe5" +
    "\164\uffe5\165\uffe5\166\uffe5\167\uffe5\170\uffe5\171\uffe5\172" +
    "\uffe5\173\uffe5\175\uffe5\176\uffe5\177\uffe5\200\uffe5\201\uffe5" +
    "\202\uffe5\203\uffe5\204\uffe5\205\uffe5\206\uffe5\207\uffe5\210" +
    "\uffe5\211\uffe5\212\uffe5\213\uffe5\214\uffe5\215\uffe5\216\uffe5" +
    "\217\uffe5\220\uffe5\221\uffe5\222\uffe5\223\uffe5\224\uffe5\225" +
    "\uffe5\226\uffe5\227\uffe5\230\uffe5\231\uffe5\234\uffe5\235\uffe5" +
    "\237\uffe5\241\uffe5\250\uffe5\265\uffe5\270\uffe5\272\uffe5\274" +
    "\uffe5\275\uffe5\276\uffe5\001\002\000\004\252\334\001\002" +
    "\000\u011c\016\uffdf\017\uffdf\020\uffdf\030\uffdf\031\uffdf\032" +
    "\uffdf\033\uffdf\034\uffdf\035\uffdf\036\uffdf\037\uffdf\040\uffdf" +
    "\041\uffdf\042\uffdf\043\uffdf\046\uffdf\047\uffdf\050\uffdf\051" +
    "\uffdf\052\uffdf\053\uffdf\054\uffdf\055\uffdf\056\uffdf\057\uffdf" +
    "\060\uffdf\061\uffdf\062\uffdf\063\uffdf\064\uffdf\065\uffdf\066" +
    "\uffdf\067\uffdf\070\uffdf\071\uffdf\072\uffdf\073\uffdf\074\uffdf" +
    "\075\uffdf\076\uffdf\077\uffdf\100\uffdf\101\uffdf\102\uffdf\103" +
    "\uffdf\104\uffdf\105\uffdf\106\uffdf\107\uffdf\110\uffdf\111\uffdf" +
    "\112\uffdf\113\uffdf\114\uffdf\115\uffdf\116\uffdf\117\uffdf\120" +
    "\uffdf\121\uffdf\122\uffdf\123\uffdf\124\uffdf\125\uffdf\126\uffdf" +
    "\127\uffdf\130\uffdf\131\uffdf\132\uffdf\133\uffdf\134\uffdf\135" +
    "\uffdf\136\uffdf\137\uffdf\140\uffdf\141\uffdf\142\uffdf\143\uffdf" +
    "\144\uffdf\145\uffdf\146\uffdf\147\uffdf\150\uffdf\151\uffdf\152" +
    "\uffdf\153\uffdf\154\uffdf\155\uffdf\156\uffdf\157\uffdf\160\uffdf" +
    "\161\uffdf\162\uffdf\163\uffdf\164\uffdf\165\uffdf\166\uffdf\167" +
    "\uffdf\170\uffdf\171\uffdf\172\uffdf\173\uffdf\175\uffdf\176\uffdf" +
    "\177\uffdf\200\uffdf\201\uffdf\202\uffdf\203\uffdf\204\uffdf\205" +
    "\uffdf\206\uffdf\207\uffdf\210\uffdf\211\uffdf\212\uffdf\213\uffdf" +
    "\214\uffdf\215\uffdf\216\uffdf\217\uffdf\220\uffdf\221\uffdf\222" +
    "\uffdf\223\uffdf\224\uffdf\225\uffdf\226\uffdf\227\uffdf\230\uffdf" +
    "\231\uffdf\234\uffdf\235\uffdf\237\uffdf\241\uffdf\250\uffdf\265" +
    "\uffdf\270\uffdf\272\uffdf\274\uffdf\275\uffdf\276\uffdf\001\002" +
    "\000\004\252\336\001\002\000\u011c\016\uffd2\017\uffd2\020" +
    "\uffd2\030\uffd2\031\uffd2\032\uffd2\033\uffd2\034\uffd2\035\uffd2" +
    "\036\uffd2\037\uffd2\040\uffd2\041\uffd2\042\uffd2\043\uffd2\046" +
    "\uffd2\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2" +
    "\055\uffd2\056\uffd2\057\uffd2\060\uffd2\061\uffd2\062\uffd2\063" +
    "\uffd2\064\uffd2\065\uffd2\066\uffd2\067\uffd2\070\uffd2\071\uffd2" +
    "\072\uffd2\073\uffd2\074\uffd2\075\uffd2\076\uffd2\077\uffd2\100" +
    "\uffd2\101\uffd2\102\uffd2\103\uffd2\104\uffd2\105\uffd2\106\uffd2" +
    "\107\uffd2\110\uffd2\111\uffd2\112\uffd2\113\uffd2\114\uffd2\115" +
    "\uffd2\116\uffd2\117\uffd2\120\uffd2\121\uffd2\122\uffd2\123\uffd2" +
    "\124\uffd2\125\uffd2\126\uffd2\127\uffd2\130\uffd2\131\uffd2\132" +
    "\uffd2\133\uffd2\134\uffd2\135\uffd2\136\uffd2\137\uffd2\140\uffd2" +
    "\141\uffd2\142\uffd2\143\uffd2\144\uffd2\145\uffd2\146\uffd2\147" +
    "\uffd2\150\uffd2\151\uffd2\152\uffd2\153\uffd2\154\uffd2\155\uffd2" +
    "\156\uffd2\157\uffd2\160\uffd2\161\uffd2\162\uffd2\163\uffd2\164" +
    "\uffd2\165\uffd2\166\uffd2\167\uffd2\170\uffd2\171\uffd2\172\uffd2" +
    "\173\uffd2\175\uffd2\176\uffd2\177\uffd2\200\uffd2\201\uffd2\202" +
    "\uffd2\203\uffd2\204\uffd2\205\uffd2\206\uffd2\207\uffd2\210\uffd2" +
    "\211\uffd2\212\uffd2\213\uffd2\214\uffd2\215\uffd2\216\uffd2\217" +
    "\uffd2\220\uffd2\221\uffd2\222\uffd2\223\uffd2\224\uffd2\225\uffd2" +
    "\226\uffd2\227\uffd2\230\uffd2\231\uffd2\234\uffd2\235\uffd2\237" +
    "\uffd2\241\uffd2\250\uffd2\265\uffd2\270\uffd2\272\uffd2\274\uffd2" +
    "\275\uffd2\276\uffd2\001\002\000\004\252\340\001\002\000" +
    "\u011c\016\uffd1\017\uffd1\020\uffd1\030\uffd1\031\uffd1\032\uffd1" +
    "\033\uffd1\034\uffd1\035\uffd1\036\uffd1\037\uffd1\040\uffd1\041" +
    "\uffd1\042\uffd1\043\uffd1\046\uffd1\047\uffd1\050\uffd1\051\uffd1" +
    "\052\uffd1\053\uffd1\054\uffd1\055\uffd1\056\uffd1\057\uffd1\060" +
    "\uffd1\061\uffd1\062\uffd1\063\uffd1\064\uffd1\065\uffd1\066\uffd1" +
    "\067\uffd1\070\uffd1\071\uffd1\072\uffd1\073\uffd1\074\uffd1\075" +
    "\uffd1\076\uffd1\077\uffd1\100\uffd1\101\uffd1\102\uffd1\103\uffd1" +
    "\104\uffd1\105\uffd1\106\uffd1\107\uffd1\110\uffd1\111\uffd1\112" +
    "\uffd1\113\uffd1\114\uffd1\115\uffd1\116\uffd1\117\uffd1\120\uffd1" +
    "\121\uffd1\122\uffd1\123\uffd1\124\uffd1\125\uffd1\126\uffd1\127" +
    "\uffd1\130\uffd1\131\uffd1\132\uffd1\133\uffd1\134\uffd1\135\uffd1" +
    "\136\uffd1\137\uffd1\140\uffd1\141\uffd1\142\uffd1\143\uffd1\144" +
    "\uffd1\145\uffd1\146\uffd1\147\uffd1\150\uffd1\151\uffd1\152\uffd1" +
    "\153\uffd1\154\uffd1\155\uffd1\156\uffd1\157\uffd1\160\uffd1\161" +
    "\uffd1\162\uffd1\163\uffd1\164\uffd1\165\uffd1\166\uffd1\167\uffd1" +
    "\170\uffd1\171\uffd1\172\uffd1\173\uffd1\175\uffd1\176\uffd1\177" +
    "\uffd1\200\uffd1\201\uffd1\202\uffd1\203\uffd1\204\uffd1\205\uffd1" +
    "\206\uffd1\207\uffd1\210\uffd1\211\uffd1\212\uffd1\213\uffd1\214" +
    "\uffd1\215\uffd1\216\uffd1\217\uffd1\220\uffd1\221\uffd1\222\uffd1" +
    "\223\uffd1\224\uffd1\225\uffd1\226\uffd1\227\uffd1\230\uffd1\231" +
    "\uffd1\234\uffd1\235\uffd1\237\uffd1\241\uffd1\250\uffd1\265\uffd1" +
    "\270\uffd1\272\uffd1\274\uffd1\275\uffd1\276\uffd1\001\002\000" +
    "\004\252\u0121\001\002\000\004\252\uff97\001\002\000\014" +
    "\244\uffb1\245\uffb1\246\uffb1\252\uff98\272\365\001\002\000" +
    "\010\244\352\245\353\246\354\001\002\000\020\244\uffb2" +
    "\245\uffb2\246\uffb2\252\uff99\266\u0115\267\u0116\271\366\001" +
    "\002\000\010\242\346\271\360\272\357\001\002\000\004" +
    "\252\uff96\001\002\000\012\244\352\245\353\246\354\252" +
    "\355\001\002\000\004\252\uff95\001\002\000\010\242\uffb7" +
    "\271\uffb7\272\uffb7\001\002\000\010\242\uffb6\271\uffb6\272" +
    "\uffb6\001\002\000\010\242\uffb5\271\uffb5\272\uffb5\001\002" +
    "\000\u011c\016\uffcc\017\uffcc\020\uffcc\030\uffcc\031\uffcc\032" +
    "\uffcc\033\uffcc\034\uffcc\035\uffcc\036\uffcc\037\uffcc\040\uffcc" +
    "\041\uffcc\042\uffcc\043\uffcc\046\uffcc\047\uffcc\050\uffcc\051" +
    "\uffcc\052\uffcc\053\uffcc\054\uffcc\055\uffcc\056\uffcc\057\uffcc" +
    "\060\uffcc\061\uffcc\062\uffcc\063\uffcc\064\uffcc\065\uffcc\066" +
    "\uffcc\067\uffcc\070\uffcc\071\uffcc\072\uffcc\073\uffcc\074\uffcc" +
    "\075\uffcc\076\uffcc\077\uffcc\100\uffcc\101\uffcc\102\uffcc\103" +
    "\uffcc\104\uffcc\105\uffcc\106\uffcc\107\uffcc\110\uffcc\111\uffcc" +
    "\112\uffcc\113\uffcc\114\uffcc\115\uffcc\116\uffcc\117\uffcc\120" +
    "\uffcc\121\uffcc\122\uffcc\123\uffcc\124\uffcc\125\uffcc\126\uffcc" +
    "\127\uffcc\130\uffcc\131\uffcc\132\uffcc\133\uffcc\134\uffcc\135" +
    "\uffcc\136\uffcc\137\uffcc\140\uffcc\141\uffcc\142\uffcc\143\uffcc" +
    "\144\uffcc\145\uffcc\146\uffcc\147\uffcc\150\uffcc\151\uffcc\152" +
    "\uffcc\153\uffcc\154\uffcc\155\uffcc\156\uffcc\157\uffcc\160\uffcc" +
    "\161\uffcc\162\uffcc\163\uffcc\164\uffcc\165\uffcc\166\uffcc\167" +
    "\uffcc\170\uffcc\171\uffcc\172\uffcc\173\uffcc\175\uffcc\176\uffcc" +
    "\177\uffcc\200\uffcc\201\uffcc\202\uffcc\203\uffcc\204\uffcc\205" +
    "\uffcc\206\uffcc\207\uffcc\210\uffcc\211\uffcc\212\uffcc\213\uffcc" +
    "\214\uffcc\215\uffcc\216\uffcc\217\uffcc\220\uffcc\221\uffcc\222" +
    "\uffcc\223\uffcc\224\uffcc\225\uffcc\226\uffcc\227\uffcc\230\uffcc" +
    "\231\uffcc\234\uffcc\235\uffcc\237\uffcc\241\uffcc\250\uffcc\265" +
    "\uffcc\270\uffcc\272\uffcc\274\uffcc\275\uffcc\276\uffcc\001\002" +
    "\000\010\242\346\271\360\272\357\001\002\000\022\242" +
    "\uffb2\243\uffb2\244\uffb2\245\uffb2\246\uffb2\251\uffb2\252\uffb2" +
    "\271\366\001\002\000\022\242\uffb1\243\uffb1\244\uffb1\245" +
    "\uffb1\246\uffb1\251\uffb1\252\uffb1\272\365\001\002\000\004" +
    "\252\364\001\002\000\004\252\363\001\002\000\u011c\016" +
    "\uffcb\017\uffcb\020\uffcb\030\uffcb\031\uffcb\032\uffcb\033\uffcb" +
    "\034\uffcb\035\uffcb\036\uffcb\037\uffcb\040\uffcb\041\uffcb\042" +
    "\uffcb\043\uffcb\046\uffcb\047\uffcb\050\uffcb\051\uffcb\052\uffcb" +
    "\053\uffcb\054\uffcb\055\uffcb\056\uffcb\057\uffcb\060\uffcb\061" +
    "\uffcb\062\uffcb\063\uffcb\064\uffcb\065\uffcb\066\uffcb\067\uffcb" +
    "\070\uffcb\071\uffcb\072\uffcb\073\uffcb\074\uffcb\075\uffcb\076" +
    "\uffcb\077\uffcb\100\uffcb\101\uffcb\102\uffcb\103\uffcb\104\uffcb" +
    "\105\uffcb\106\uffcb\107\uffcb\110\uffcb\111\uffcb\112\uffcb\113" +
    "\uffcb\114\uffcb\115\uffcb\116\uffcb\117\uffcb\120\uffcb\121\uffcb" +
    "\122\uffcb\123\uffcb\124\uffcb\125\uffcb\126\uffcb\127\uffcb\130" +
    "\uffcb\131\uffcb\132\uffcb\133\uffcb\134\uffcb\135\uffcb\136\uffcb" +
    "\137\uffcb\140\uffcb\141\uffcb\142\uffcb\143\uffcb\144\uffcb\145" +
    "\uffcb\146\uffcb\147\uffcb\150\uffcb\151\uffcb\152\uffcb\153\uffcb" +
    "\154\uffcb\155\uffcb\156\uffcb\157\uffcb\160\uffcb\161\uffcb\162" +
    "\uffcb\163\uffcb\164\uffcb\165\uffcb\166\uffcb\167\uffcb\170\uffcb" +
    "\171\uffcb\172\uffcb\173\uffcb\175\uffcb\176\uffcb\177\uffcb\200" +
    "\uffcb\201\uffcb\202\uffcb\203\uffcb\204\uffcb\205\uffcb\206\uffcb" +
    "\207\uffcb\210\uffcb\211\uffcb\212\uffcb\213\uffcb\214\uffcb\215" +
    "\uffcb\216\uffcb\217\uffcb\220\uffcb\221\uffcb\222\uffcb\223\uffcb" +
    "\224\uffcb\225\uffcb\226\uffcb\227\uffcb\230\uffcb\231\uffcb\234" +
    "\uffcb\235\uffcb\237\uffcb\241\uffcb\250\uffcb\265\uffcb\270\uffcb" +
    "\272\uffcb\274\uffcb\275\uffcb\276\uffcb\001\002\000\u011c\016" +
    "\uffca\017\uffca\020\uffca\030\uffca\031\uffca\032\uffca\033\uffca" +
    "\034\uffca\035\uffca\036\uffca\037\uffca\040\uffca\041\uffca\042" +
    "\uffca\043\uffca\046\uffca\047\uffca\050\uffca\051\uffca\052\uffca" +
    "\053\uffca\054\uffca\055\uffca\056\uffca\057\uffca\060\uffca\061" +
    "\uffca\062\uffca\063\uffca\064\uffca\065\uffca\066\uffca\067\uffca" +
    "\070\uffca\071\uffca\072\uffca\073\uffca\074\uffca\075\uffca\076" +
    "\uffca\077\uffca\100\uffca\101\uffca\102\uffca\103\uffca\104\uffca" +
    "\105\uffca\106\uffca\107\uffca\110\uffca\111\uffca\112\uffca\113" +
    "\uffca\114\uffca\115\uffca\116\uffca\117\uffca\120\uffca\121\uffca" +
    "\122\uffca\123\uffca\124\uffca\125\uffca\126\uffca\127\uffca\130" +
    "\uffca\131\uffca\132\uffca\133\uffca\134\uffca\135\uffca\136\uffca" +
    "\137\uffca\140\uffca\141\uffca\142\uffca\143\uffca\144\uffca\145" +
    "\uffca\146\uffca\147\uffca\150\uffca\151\uffca\152\uffca\153\uffca" +
    "\154\uffca\155\uffca\156\uffca\157\uffca\160\uffca\161\uffca\162" +
    "\uffca\163\uffca\164\uffca\165\uffca\166\uffca\167\uffca\170\uffca" +
    "\171\uffca\172\uffca\173\uffca\175\uffca\176\uffca\177\uffca\200" +
    "\uffca\201\uffca\202\uffca\203\uffca\204\uffca\205\uffca\206\uffca" +
    "\207\uffca\210\uffca\211\uffca\212\uffca\213\uffca\214\uffca\215" +
    "\uffca\216\uffca\217\uffca\220\uffca\221\uffca\222\uffca\223\uffca" +
    "\224\uffca\225\uffca\226\uffca\227\uffca\230\uffca\231\uffca\234" +
    "\uffca\235\uffca\237\uffca\241\uffca\250\uffca\265\uffca\270\uffca" +
    "\272\uffca\274\uffca\275\uffca\276\uffca\001\002\000\020\242" +
    "\uffaf\243\uffaf\244\uffaf\245\uffaf\246\uffaf\251\uffaf\252\uffaf" +
    "\001\002\000\020\242\uffb0\243\uffb0\244\uffb0\245\uffb0\246" +
    "\uffb0\251\uffb0\252\uffb0\001\002\000\012\243\u010c\244\352" +
    "\245\353\246\354\001\002\000\010\244\352\245\353\246" +
    "\354\001\002\000\010\242\346\271\360\272\357\001\002" +
    "\000\014\242\346\243\u010a\244\352\245\353\246\354\001" +
    "\002\000\014\242\346\243\376\244\352\245\353\246\354" +
    "\001\002\000\012\242\346\244\352\245\353\246\354\001" +
    "\002\000\012\243\u0103\244\352\245\353\246\354\001\002" +
    "\000\016\242\uffc5\243\uffc5\244\uffc5\245\uffc5\246\uffc5\252" +
    "\uffc5\001\002\000\012\243\uffc0\244\uffc0\245\uffc0\246\uffc0" +
    "\001\002\000\010\242\346\271\360\272\357\001\002\000" +
    "\016\242\uffb4\243\uffb4\244\uffb4\245\uffb4\246\uffb4\252\uffb4" +
    "\001\002\000\012\243\uffc1\244\uffc1\245\uffc1\246\uffc1\001" +
    "\002\000\016\242\uffc2\243\uffc2\244\uffc2\245\uffc2\246\uffc2" +
    "\252\uffc2\001\002\000\004\242\346\001\002\000\012\243" +
    "\uffbe\244\uffbe\245\uffbe\246\uffbe\001\002\000\006\271\360" +
    "\272\357\001\002\000\012\243\uffbf\244\uffbf\245\uffbf\246" +
    "\uffbf\001\002\000\016\242\uffb3\243\uffb3\244\uffb3\245\uffb3" +
    "\246\uffb3\252\uffb3\001\002\000\012\243\u010b\244\352\245" +
    "\353\246\354\001\002\000\016\242\uffc4\243\uffc4\244\uffc4" +
    "\245\uffc4\246\uffc4\252\uffc4\001\002\000\016\242\uffc3\243" +
    "\uffc3\244\uffc3\245\uffc3\246\uffc3\252\uffc3\001\002\000\016" +
    "\242\uffc9\243\uffc9\244\uffc9\245\uffc9\246\uffc9\252\uffc9\001" +
    "\002\000\006\271\360\272\357\001\002\000\012\243\u010f" +
    "\244\352\245\353\246\354\001\002\000\016\242\uffc8\243" +
    "\uffc8\244\uffc8\245\uffc8\246\uffc8\252\uffc8\001\002\000\012" +
    "\243\u0114\244\352\245\353\246\354\001\002\000\010\242" +
    "\346\271\360\272\357\001\002\000\004\243\u0113\001\002" +
    "\000\016\242\uffc6\243\uffc6\244\uffc6\245\uffc6\246\uffc6\252" +
    "\uffc6\001\002\000\016\242\uffc7\243\uffc7\244\uffc7\245\uffc7" +
    "\246\uffc7\252\uffc7\001\002\000\004\271\u0119\001\002\000" +
    "\004\271\u0117\001\002\000\004\252\u0118\001\002\000\u011c" +
    "\016\uffd0\017\uffd0\020\uffd0\030\uffd0\031\uffd0\032\uffd0\033" +
    "\uffd0\034\uffd0\035\uffd0\036\uffd0\037\uffd0\040\uffd0\041\uffd0" +
    "\042\uffd0\043\uffd0\046\uffd0\047\uffd0\050\uffd0\051\uffd0\052" +
    "\uffd0\053\uffd0\054\uffd0\055\uffd0\056\uffd0\057\uffd0\060\uffd0" +
    "\061\uffd0\062\uffd0\063\uffd0\064\uffd0\065\uffd0\066\uffd0\067" +
    "\uffd0\070\uffd0\071\uffd0\072\uffd0\073\uffd0\074\uffd0\075\uffd0" +
    "\076\uffd0\077\uffd0\100\uffd0\101\uffd0\102\uffd0\103\uffd0\104" +
    "\uffd0\105\uffd0\106\uffd0\107\uffd0\110\uffd0\111\uffd0\112\uffd0" +
    "\113\uffd0\114\uffd0\115\uffd0\116\uffd0\117\uffd0\120\uffd0\121" +
    "\uffd0\122\uffd0\123\uffd0\124\uffd0\125\uffd0\126\uffd0\127\uffd0" +
    "\130\uffd0\131\uffd0\132\uffd0\133\uffd0\134\uffd0\135\uffd0\136" +
    "\uffd0\137\uffd0\140\uffd0\141\uffd0\142\uffd0\143\uffd0\144\uffd0" +
    "\145\uffd0\146\uffd0\147\uffd0\150\uffd0\151\uffd0\152\uffd0\153" +
    "\uffd0\154\uffd0\155\uffd0\156\uffd0\157\uffd0\160\uffd0\161\uffd0" +
    "\162\uffd0\163\uffd0\164\uffd0\165\uffd0\166\uffd0\167\uffd0\170" +
    "\uffd0\171\uffd0\172\uffd0\173\uffd0\175\uffd0\176\uffd0\177\uffd0" +
    "\200\uffd0\201\uffd0\202\uffd0\203\uffd0\204\uffd0\205\uffd0\206" +
    "\uffd0\207\uffd0\210\uffd0\211\uffd0\212\uffd0\213\uffd0\214\uffd0" +
    "\215\uffd0\216\uffd0\217\uffd0\220\uffd0\221\uffd0\222\uffd0\223" +
    "\uffd0\224\uffd0\225\uffd0\226\uffd0\227\uffd0\230\uffd0\231\uffd0" +
    "\234\uffd0\235\uffd0\237\uffd0\241\uffd0\250\uffd0\265\uffd0\270" +
    "\uffd0\272\uffd0\274\uffd0\275\uffd0\276\uffd0\001\002\000\004" +
    "\252\u011a\001\002\000\u011c\016\uffcf\017\uffcf\020\uffcf\030" +
    "\uffcf\031\uffcf\032\uffcf\033\uffcf\034\uffcf\035\uffcf\036\uffcf" +
    "\037\uffcf\040\uffcf\041\uffcf\042\uffcf\043\uffcf\046\uffcf\047" +
    "\uffcf\050\uffcf\051\uffcf\052\uffcf\053\uffcf\054\uffcf\055\uffcf" +
    "\056\uffcf\057\uffcf\060\uffcf\061\uffcf\062\uffcf\063\uffcf\064" +
    "\uffcf\065\uffcf\066\uffcf\067\uffcf\070\uffcf\071\uffcf\072\uffcf" +
    "\073\uffcf\074\uffcf\075\uffcf\076\uffcf\077\uffcf\100\uffcf\101" +
    "\uffcf\102\uffcf\103\uffcf\104\uffcf\105\uffcf\106\uffcf\107\uffcf" +
    "\110\uffcf\111\uffcf\112\uffcf\113\uffcf\114\uffcf\115\uffcf\116" +
    "\uffcf\117\uffcf\120\uffcf\121\uffcf\122\uffcf\123\uffcf\124\uffcf" +
    "\125\uffcf\126\uffcf\127\uffcf\130\uffcf\131\uffcf\132\uffcf\133" +
    "\uffcf\134\uffcf\135\uffcf\136\uffcf\137\uffcf\140\uffcf\141\uffcf" +
    "\142\uffcf\143\uffcf\144\uffcf\145\uffcf\146\uffcf\147\uffcf\150" +
    "\uffcf\151\uffcf\152\uffcf\153\uffcf\154\uffcf\155\uffcf\156\uffcf" +
    "\157\uffcf\160\uffcf\161\uffcf\162\uffcf\163\uffcf\164\uffcf\165" +
    "\uffcf\166\uffcf\167\uffcf\170\uffcf\171\uffcf\172\uffcf\173\uffcf" +
    "\175\uffcf\176\uffcf\177\uffcf\200\uffcf\201\uffcf\202\uffcf\203" +
    "\uffcf\204\uffcf\205\uffcf\206\uffcf\207\uffcf\210\uffcf\211\uffcf" +
    "\212\uffcf\213\uffcf\214\uffcf\215\uffcf\216\uffcf\217\uffcf\220" +
    "\uffcf\221\uffcf\222\uffcf\223\uffcf\224\uffcf\225\uffcf\226\uffcf" +
    "\227\uffcf\230\uffcf\231\uffcf\234\uffcf\235\uffcf\237\uffcf\241" +
    "\uffcf\250\uffcf\265\uffcf\270\uffcf\272\uffcf\274\uffcf\275\uffcf" +
    "\276\uffcf\001\002\000\006\271\360\272\357\001\002\000" +
    "\012\244\352\245\353\246\354\252\u011d\001\002\000\u011c" +
    "\016\uffce\017\uffce\020\uffce\030\uffce\031\uffce\032\uffce\033" +
    "\uffce\034\uffce\035\uffce\036\uffce\037\uffce\040\uffce\041\uffce" +
    "\042\uffce\043\uffce\046\uffce\047\uffce\050\uffce\051\uffce\052" +
    "\uffce\053\uffce\054\uffce\055\uffce\056\uffce\057\uffce\060\uffce" +
    "\061\uffce\062\uffce\063\uffce\064\uffce\065\uffce\066\uffce\067" +
    "\uffce\070\uffce\071\uffce\072\uffce\073\uffce\074\uffce\075\uffce" +
    "\076\uffce\077\uffce\100\uffce\101\uffce\102\uffce\103\uffce\104" +
    "\uffce\105\uffce\106\uffce\107\uffce\110\uffce\111\uffce\112\uffce" +
    "\113\uffce\114\uffce\115\uffce\116\uffce\117\uffce\120\uffce\121" +
    "\uffce\122\uffce\123\uffce\124\uffce\125\uffce\126\uffce\127\uffce" +
    "\130\uffce\131\uffce\132\uffce\133\uffce\134\uffce\135\uffce\136" +
    "\uffce\137\uffce\140\uffce\141\uffce\142\uffce\143\uffce\144\uffce" +
    "\145\uffce\146\uffce\147\uffce\150\uffce\151\uffce\152\uffce\153" +
    "\uffce\154\uffce\155\uffce\156\uffce\157\uffce\160\uffce\161\uffce" +
    "\162\uffce\163\uffce\164\uffce\165\uffce\166\uffce\167\uffce\170" +
    "\uffce\171\uffce\172\uffce\173\uffce\175\uffce\176\uffce\177\uffce" +
    "\200\uffce\201\uffce\202\uffce\203\uffce\204\uffce\205\uffce\206" +
    "\uffce\207\uffce\210\uffce\211\uffce\212\uffce\213\uffce\214\uffce" +
    "\215\uffce\216\uffce\217\uffce\220\uffce\221\uffce\222\uffce\223" +
    "\uffce\224\uffce\225\uffce\226\uffce\227\uffce\230\uffce\231\uffce" +
    "\234\uffce\235\uffce\237\uffce\241\uffce\250\uffce\265\uffce\270" +
    "\uffce\272\uffce\274\uffce\275\uffce\276\uffce\001\002\000\006" +
    "\271\360\272\357\001\002\000\012\244\352\245\353\246" +
    "\354\252\u0120\001\002\000\u011c\016\uffcd\017\uffcd\020\uffcd" +
    "\030\uffcd\031\uffcd\032\uffcd\033\uffcd\034\uffcd\035\uffcd\036" +
    "\uffcd\037\uffcd\040\uffcd\041\uffcd\042\uffcd\043\uffcd\046\uffcd" +
    "\047\uffcd\050\uffcd\051\uffcd\052\uffcd\053\uffcd\054\uffcd\055" +
    "\uffcd\056\uffcd\057\uffcd\060\uffcd\061\uffcd\062\uffcd\063\uffcd" +
    "\064\uffcd\065\uffcd\066\uffcd\067\uffcd\070\uffcd\071\uffcd\072" +
    "\uffcd\073\uffcd\074\uffcd\075\uffcd\076\uffcd\077\uffcd\100\uffcd" +
    "\101\uffcd\102\uffcd\103\uffcd\104\uffcd\105\uffcd\106\uffcd\107" +
    "\uffcd\110\uffcd\111\uffcd\112\uffcd\113\uffcd\114\uffcd\115\uffcd" +
    "\116\uffcd\117\uffcd\120\uffcd\121\uffcd\122\uffcd\123\uffcd\124" +
    "\uffcd\125\uffcd\126\uffcd\127\uffcd\130\uffcd\131\uffcd\132\uffcd" +
    "\133\uffcd\134\uffcd\135\uffcd\136\uffcd\137\uffcd\140\uffcd\141" +
    "\uffcd\142\uffcd\143\uffcd\144\uffcd\145\uffcd\146\uffcd\147\uffcd" +
    "\150\uffcd\151\uffcd\152\uffcd\153\uffcd\154\uffcd\155\uffcd\156" +
    "\uffcd\157\uffcd\160\uffcd\161\uffcd\162\uffcd\163\uffcd\164\uffcd" +
    "\165\uffcd\166\uffcd\167\uffcd\170\uffcd\171\uffcd\172\uffcd\173" +
    "\uffcd\175\uffcd\176\uffcd\177\uffcd\200\uffcd\201\uffcd\202\uffcd" +
    "\203\uffcd\204\uffcd\205\uffcd\206\uffcd\207\uffcd\210\uffcd\211" +
    "\uffcd\212\uffcd\213\uffcd\214\uffcd\215\uffcd\216\uffcd\217\uffcd" +
    "\220\uffcd\221\uffcd\222\uffcd\223\uffcd\224\uffcd\225\uffcd\226" +
    "\uffcd\227\uffcd\230\uffcd\231\uffcd\234\uffcd\235\uffcd\237\uffcd" +
    "\241\uffcd\250\uffcd\265\uffcd\270\uffcd\272\uffcd\274\uffcd\275" +
    "\uffcd\276\uffcd\001\002\000\u011c\016\uffe8\017\uffe8\020\uffe8" +
    "\030\uffe8\031\uffe8\032\uffe8\033\uffe8\034\uffe8\035\uffe8\036" +
    "\uffe8\037\uffe8\040\uffe8\041\uffe8\042\uffe8\043\uffe8\046\uffe8" +
    "\047\uffe8\050\uffe8\051\uffe8\052\uffe8\053\uffe8\054\uffe8\055" +
    "\uffe8\056\uffe8\057\uffe8\060\uffe8\061\uffe8\062\uffe8\063\uffe8" +
    "\064\uffe8\065\uffe8\066\uffe8\067\uffe8\070\uffe8\071\uffe8\072" +
    "\uffe8\073\uffe8\074\uffe8\075\uffe8\076\uffe8\077\uffe8\100\uffe8" +
    "\101\uffe8\102\uffe8\103\uffe8\104\uffe8\105\uffe8\106\uffe8\107" +
    "\uffe8\110\uffe8\111\uffe8\112\uffe8\113\uffe8\114\uffe8\115\uffe8" +
    "\116\uffe8\117\uffe8\120\uffe8\121\uffe8\122\uffe8\123\uffe8\124" +
    "\uffe8\125\uffe8\126\uffe8\127\uffe8\130\uffe8\131\uffe8\132\uffe8" +
    "\133\uffe8\134\uffe8\135\uffe8\136\uffe8\137\uffe8\140\uffe8\141" +
    "\uffe8\142\uffe8\143\uffe8\144\uffe8\145\uffe8\146\uffe8\147\uffe8" +
    "\150\uffe8\151\uffe8\152\uffe8\153\uffe8\154\uffe8\155\uffe8\156" +
    "\uffe8\157\uffe8\160\uffe8\161\uffe8\162\uffe8\163\uffe8\164\uffe8" +
    "\165\uffe8\166\uffe8\167\uffe8\170\uffe8\171\uffe8\172\uffe8\173" +
    "\uffe8\175\uffe8\176\uffe8\177\uffe8\200\uffe8\201\uffe8\202\uffe8" +
    "\203\uffe8\204\uffe8\205\uffe8\206\uffe8\207\uffe8\210\uffe8\211" +
    "\uffe8\212\uffe8\213\uffe8\214\uffe8\215\uffe8\216\uffe8\217\uffe8" +
    "\220\uffe8\221\uffe8\222\uffe8\223\uffe8\224\uffe8\225\uffe8\226" +
    "\uffe8\227\uffe8\230\uffe8\231\uffe8\234\uffe8\235\uffe8\237\uffe8" +
    "\241\uffe8\250\uffe8\265\uffe8\270\uffe8\272\uffe8\274\uffe8\275" +
    "\uffe8\276\uffe8\001\002\000\004\252\u0123\001\002\000\u011c" +
    "\016\uffe0\017\uffe0\020\uffe0\030\uffe0\031\uffe0\032\uffe0\033" +
    "\uffe0\034\uffe0\035\uffe0\036\uffe0\037\uffe0\040\uffe0\041\uffe0" +
    "\042\uffe0\043\uffe0\046\uffe0\047\uffe0\050\uffe0\051\uffe0\052" +
    "\uffe0\053\uffe0\054\uffe0\055\uffe0\056\uffe0\057\uffe0\060\uffe0" +
    "\061\uffe0\062\uffe0\063\uffe0\064\uffe0\065\uffe0\066\uffe0\067" +
    "\uffe0\070\uffe0\071\uffe0\072\uffe0\073\uffe0\074\uffe0\075\uffe0" +
    "\076\uffe0\077\uffe0\100\uffe0\101\uffe0\102\uffe0\103\uffe0\104" +
    "\uffe0\105\uffe0\106\uffe0\107\uffe0\110\uffe0\111\uffe0\112\uffe0" +
    "\113\uffe0\114\uffe0\115\uffe0\116\uffe0\117\uffe0\120\uffe0\121" +
    "\uffe0\122\uffe0\123\uffe0\124\uffe0\125\uffe0\126\uffe0\127\uffe0" +
    "\130\uffe0\131\uffe0\132\uffe0\133\uffe0\134\uffe0\135\uffe0\136" +
    "\uffe0\137\uffe0\140\uffe0\141\uffe0\142\uffe0\143\uffe0\144\uffe0" +
    "\145\uffe0\146\uffe0\147\uffe0\150\uffe0\151\uffe0\152\uffe0\153" +
    "\uffe0\154\uffe0\155\uffe0\156\uffe0\157\uffe0\160\uffe0\161\uffe0" +
    "\162\uffe0\163\uffe0\164\uffe0\165\uffe0\166\uffe0\167\uffe0\170" +
    "\uffe0\171\uffe0\172\uffe0\173\uffe0\175\uffe0\176\uffe0\177\uffe0" +
    "\200\uffe0\201\uffe0\202\uffe0\203\uffe0\204\uffe0\205\uffe0\206" +
    "\uffe0\207\uffe0\210\uffe0\211\uffe0\212\uffe0\213\uffe0\214\uffe0" +
    "\215\uffe0\216\uffe0\217\uffe0\220\uffe0\221\uffe0\222\uffe0\223" +
    "\uffe0\224\uffe0\225\uffe0\226\uffe0\227\uffe0\230\uffe0\231\uffe0" +
    "\234\uffe0\235\uffe0\237\uffe0\241\uffe0\250\uffe0\265\uffe0\270" +
    "\uffe0\272\uffe0\274\uffe0\275\uffe0\276\uffe0\001\002\000\004" +
    "\251\u0125\001\002\000\012\004\u0126\005\u0128\006\u0129\007" +
    "\u012a\001\002\000\012\015\uff9d\243\uff9d\252\uff9d\253\uff9d" +
    "\001\002\000\006\252\u012c\253\u012b\001\002\000\012\015" +
    "\uff9c\243\uff9c\252\uff9c\253\uff9c\001\002\000\012\015\uff9b" +
    "\243\uff9b\252\uff9b\253\uff9b\001\002\000\012\015\uff9a\243" +
    "\uff9a\252\uff9a\253\uff9a\001\002\000\014\010\347\011\342" +
    "\012\351\271\u012d\272\u012e\001\002\000\u011c\016\uffea\017" +
    "\uffea\020\uffea\030\uffea\031\uffea\032\uffea\033\uffea\034\uffea" +
    "\035\uffea\036\uffea\037\uffea\040\uffea\041\uffea\042\uffea\043" +
    "\uffea\046\uffea\047\uffea\050\uffea\051\uffea\052\uffea\053\uffea" +
    "\054\uffea\055\uffea\056\uffea\057\uffea\060\uffea\061\uffea\062" +
    "\uffea\063\uffea\064\uffea\065\uffea\066\uffea\067\uffea\070\uffea" +
    "\071\uffea\072\uffea\073\uffea\074\uffea\075\uffea\076\uffea\077" +
    "\uffea\100\uffea\101\uffea\102\uffea\103\uffea\104\uffea\105\uffea" +
    "\106\uffea\107\uffea\110\uffea\111\uffea\112\uffea\113\uffea\114" +
    "\uffea\115\uffea\116\uffea\117\uffea\120\uffea\121\uffea\122\uffea" +
    "\123\uffea\124\uffea\125\uffea\126\uffea\127\uffea\130\uffea\131" +
    "\uffea\132\uffea\133\uffea\134\uffea\135\uffea\136\uffea\137\uffea" +
    "\140\uffea\141\uffea\142\uffea\143\uffea\144\uffea\145\uffea\146" +
    "\uffea\147\uffea\150\uffea\151\uffea\152\uffea\153\uffea\154\uffea" +
    "\155\uffea\156\uffea\157\uffea\160\uffea\161\uffea\162\uffea\163" +
    "\uffea\164\uffea\165\uffea\166\uffea\167\uffea\170\uffea\171\uffea" +
    "\172\uffea\173\uffea\175\uffea\176\uffea\177\uffea\200\uffea\201" +
    "\uffea\202\uffea\203\uffea\204\uffea\205\uffea\206\uffea\207\uffea" +
    "\210\uffea\211\uffea\212\uffea\213\uffea\214\uffea\215\uffea\216" +
    "\uffea\217\uffea\220\uffea\221\uffea\222\uffea\223\uffea\224\uffea" +
    "\225\uffea\226\uffea\227\uffea\230\uffea\231\uffea\234\uffea\235" +
    "\uffea\237\uffea\241\uffea\250\uffea\265\uffea\270\uffea\272\uffea" +
    "\274\uffea\275\uffea\276\uffea\001\002\000\004\252\uff98\001" +
    "\002\000\004\252\uff99\001\002\000\004\252\u0130\001\002" +
    "\000\u011c\016\uffe9\017\uffe9\020\uffe9\030\uffe9\031\uffe9\032" +
    "\uffe9\033\uffe9\034\uffe9\035\uffe9\036\uffe9\037\uffe9\040\uffe9" +
    "\041\uffe9\042\uffe9\043\uffe9\046\uffe9\047\uffe9\050\uffe9\051" +
    "\uffe9\052\uffe9\053\uffe9\054\uffe9\055\uffe9\056\uffe9\057\uffe9" +
    "\060\uffe9\061\uffe9\062\uffe9\063\uffe9\064\uffe9\065\uffe9\066" +
    "\uffe9\067\uffe9\070\uffe9\071\uffe9\072\uffe9\073\uffe9\074\uffe9" +
    "\075\uffe9\076\uffe9\077\uffe9\100\uffe9\101\uffe9\102\uffe9\103" +
    "\uffe9\104\uffe9\105\uffe9\106\uffe9\107\uffe9\110\uffe9\111\uffe9" +
    "\112\uffe9\113\uffe9\114\uffe9\115\uffe9\116\uffe9\117\uffe9\120" +
    "\uffe9\121\uffe9\122\uffe9\123\uffe9\124\uffe9\125\uffe9\126\uffe9" +
    "\127\uffe9\130\uffe9\131\uffe9\132\uffe9\133\uffe9\134\uffe9\135" +
    "\uffe9\136\uffe9\137\uffe9\140\uffe9\141\uffe9\142\uffe9\143\uffe9" +
    "\144\uffe9\145\uffe9\146\uffe9\147\uffe9\150\uffe9\151\uffe9\152" +
    "\uffe9\153\uffe9\154\uffe9\155\uffe9\156\uffe9\157\uffe9\160\uffe9" +
    "\161\uffe9\162\uffe9\163\uffe9\164\uffe9\165\uffe9\166\uffe9\167" +
    "\uffe9\170\uffe9\171\uffe9\172\uffe9\173\uffe9\175\uffe9\176\uffe9" +
    "\177\uffe9\200\uffe9\201\uffe9\202\uffe9\203\uffe9\204\uffe9\205" +
    "\uffe9\206\uffe9\207\uffe9\210\uffe9\211\uffe9\212\uffe9\213\uffe9" +
    "\214\uffe9\215\uffe9\216\uffe9\217\uffe9\220\uffe9\221\uffe9\222" +
    "\uffe9\223\uffe9\224\uffe9\225\uffe9\226\uffe9\227\uffe9\230\uffe9" +
    "\231\uffe9\234\uffe9\235\uffe9\237\uffe9\241\uffe9\250\uffe9\265" +
    "\uffe9\270\uffe9\272\uffe9\274\uffe9\275\uffe9\276\uffe9\001\002" +
    "\000\004\271\u0132\001\002\000\004\250\u0133\001\002\000" +
    "\004\252\u0134\001\002\000\u011c\016\uffe3\017\uffe3\020\uffe3" +
    "\030\uffe3\031\uffe3\032\uffe3\033\uffe3\034\uffe3\035\uffe3\036" +
    "\uffe3\037\uffe3\040\uffe3\041\uffe3\042\uffe3\043\uffe3\046\uffe3" +
    "\047\uffe3\050\uffe3\051\uffe3\052\uffe3\053\uffe3\054\uffe3\055" +
    "\uffe3\056\uffe3\057\uffe3\060\uffe3\061\uffe3\062\uffe3\063\uffe3" +
    "\064\uffe3\065\uffe3\066\uffe3\067\uffe3\070\uffe3\071\uffe3\072" +
    "\uffe3\073\uffe3\074\uffe3\075\uffe3\076\uffe3\077\uffe3\100\uffe3" +
    "\101\uffe3\102\uffe3\103\uffe3\104\uffe3\105\uffe3\106\uffe3\107" +
    "\uffe3\110\uffe3\111\uffe3\112\uffe3\113\uffe3\114\uffe3\115\uffe3" +
    "\116\uffe3\117\uffe3\120\uffe3\121\uffe3\122\uffe3\123\uffe3\124" +
    "\uffe3\125\uffe3\126\uffe3\127\uffe3\130\uffe3\131\uffe3\132\uffe3" +
    "\133\uffe3\134\uffe3\135\uffe3\136\uffe3\137\uffe3\140\uffe3\141" +
    "\uffe3\142\uffe3\143\uffe3\144\uffe3\145\uffe3\146\uffe3\147\uffe3" +
    "\150\uffe3\151\uffe3\152\uffe3\153\uffe3\154\uffe3\155\uffe3\156" +
    "\uffe3\157\uffe3\160\uffe3\161\uffe3\162\uffe3\163\uffe3\164\uffe3" +
    "\165\uffe3\166\uffe3\167\uffe3\170\uffe3\171\uffe3\172\uffe3\173" +
    "\uffe3\175\uffe3\176\uffe3\177\uffe3\200\uffe3\201\uffe3\202\uffe3" +
    "\203\uffe3\204\uffe3\205\uffe3\206\uffe3\207\uffe3\210\uffe3\211" +
    "\uffe3\212\uffe3\213\uffe3\214\uffe3\215\uffe3\216\uffe3\217\uffe3" +
    "\220\uffe3\221\uffe3\222\uffe3\223\uffe3\224\uffe3\225\uffe3\226" +
    "\uffe3\227\uffe3\230\uffe3\231\uffe3\234\uffe3\235\uffe3\237\uffe3" +
    "\241\uffe3\250\uffe3\265\uffe3\270\uffe3\272\uffe3\274\uffe3\275" +
    "\uffe3\276\uffe3\001\002\000\014\234\uffeb\235\uffeb\241\uffeb" +
    "\250\uffeb\275\uffeb\001\002\000\u011c\016\uffde\017\uffde\020" +
    "\uffde\030\uffde\031\uffde\032\uffde\033\uffde\034\uffde\035\uffde" +
    "\036\uffde\037\uffde\040\uffde\041\uffde\042\uffde\043\uffde\046" +
    "\uffde\047\uffde\050\uffde\051\uffde\052\uffde\053\uffde\054\uffde" +
    "\055\uffde\056\uffde\057\uffde\060\uffde\061\uffde\062\uffde\063" +
    "\uffde\064\uffde\065\uffde\066\uffde\067\uffde\070\uffde\071\uffde" +
    "\072\uffde\073\uffde\074\uffde\075\uffde\076\uffde\077\uffde\100" +
    "\uffde\101\uffde\102\uffde\103\uffde\104\uffde\105\uffde\106\uffde" +
    "\107\uffde\110\uffde\111\uffde\112\uffde\113\uffde\114\uffde\115" +
    "\uffde\116\uffde\117\uffde\120\uffde\121\uffde\122\uffde\123\uffde" +
    "\124\uffde\125\uffde\126\uffde\127\uffde\130\uffde\131\uffde\132" +
    "\uffde\133\uffde\134\uffde\135\uffde\136\uffde\137\uffde\140\uffde" +
    "\141\uffde\142\uffde\143\uffde\144\uffde\145\uffde\146\uffde\147" +
    "\uffde\150\uffde\151\uffde\152\uffde\153\uffde\154\uffde\155\uffde" +
    "\156\uffde\157\uffde\160\uffde\161\uffde\162\uffde\163\uffde\164" +
    "\uffde\165\uffde\166\uffde\167\uffde\170\uffde\171\uffde\172\uffde" +
    "\173\uffde\175\uffde\176\uffde\177\uffde\200\uffde\201\uffde\202" +
    "\uffde\203\uffde\204\uffde\205\uffde\206\uffde\207\uffde\210\uffde" +
    "\211\uffde\212\uffde\213\uffde\214\uffde\215\uffde\216\uffde\217" +
    "\uffde\220\uffde\221\uffde\222\uffde\223\uffde\224\uffde\225\uffde" +
    "\226\uffde\227\uffde\230\uffde\231\uffde\234\uffde\235\uffde\237" +
    "\uffde\241\uffde\250\uffde\265\uffde\270\uffde\272\uffde\274\uffde" +
    "\275\uffde\276\uffde\001\002\000\130\030\252\031\251\032" +
    "\250\033\247\034\246\112\242\113\240\114\310\115\305" +
    "\116\304\117\301\120\300\121\277\122\273\123\271\124" +
    "\270\125\267\126\266\127\265\130\264\131\263\132\262" +
    "\133\261\134\260\135\257\136\256\137\255\140\254\141" +
    "\253\142\245\143\244\144\243\145\241\146\311\147\306" +
    "\150\303\151\302\152\276\153\275\154\274\155\272\271" +
    "\360\272\357\001\002\000\004\243\u014d\001\002\000\004" +
    "\243\u013a\001\002\000\004\240\u013b\001\002\000\006\241" +
    "\u013d\275\u013e\001\002\000\010\235\u0144\241\u0145\275\u0146" +
    "\001\002\000\004\251\u0142\001\002\000\006\271\360\272" +
    "\357\001\002\000\004\251\u0140\001\002\000\u0118\016\142" +
    "\017\163\020\066\030\177\031\176\032\174\033\171\034" +
    "\170\035\027\036\026\037\024\040\023\041\022\042\164" +
    "\043\205\046\160\047\157\050\156\051\153\052\152\053" +
    "\150\054\147\055\145\056\121\057\120\060\117\061\116" +
    "\062\115\063\114\064\112\065\110\066\071\067\070\070" +
    "\067\071\065\072\064\073\063\074\062\075\061\076\045" +
    "\077\044\100\043\101\042\102\040\103\037\104\034\105" +
    "\032\106\223\107\221\110\217\111\215\112\202\113\201" +
    "\114\200\115\175\116\173\117\172\120\167\121\166\122" +
    "\143\123\141\124\137\125\136\126\135\127\133\130\132" +
    "\131\130\132\111\133\107\134\106\135\105\136\104\137" +
    "\103\140\102\141\101\142\060\143\057\144\055\145\054" +
    "\146\053\147\052\150\051\151\050\152\033\153\031\154" +
    "\030\155\025\156\227\157\225\160\224\161\222\162\220" +
    "\163\216\164\214\165\213\166\127\167\126\170\125\171" +
    "\124\172\123\173\122\175\231\176\074\177\212\200\113" +
    "\201\232\202\035\203\036\204\041\205\047\206\140\207" +
    "\206\210\203\211\154\212\146\213\230\214\151\215\144" +
    "\216\226\217\072\220\073\221\075\222\076\223\077\224" +
    "\100\225\056\226\207\227\131\230\210\231\211\235\uffb9" +
    "\237\155\241\uffb9\265\165\270\161\272\204\274\046\275" +
    "\uffb9\276\134\001\002\000\010\235\uffbd\241\uffbd\275\uffbd" +
    "\001\002\000\u0112\016\142\017\163\020\066\030\177\031" +
    "\176\032\174\033\171\034\170\035\027\036\026\037\024" +
    "\040\023\041\022\042\164\043\205\046\160\047\157\050" +
    "\156\051\153\052\152\053\150\054\147\055\145\056\121" +
    "\057\120\060\117\061\116\062\115\063\114\064\112\065" +
    "\110\066\071\067\070\070\067\071\065\072\064\073\063" +
    "\074\062\075\061\076\045\077\044\100\043\101\042\102" +
    "\040\103\037\104\034\105\032\106\223\107\221\110\217" +
    "\111\215\112\202\113\201\114\200\115\175\116\173\117" +
    "\172\120\167\121\166\122\143\123\141\124\137\125\136" +
    "\126\135\127\133\130\132\131\130\132\111\133\107\134" +
    "\106\135\105\136\104\137\103\140\102\141\101\142\060" +
    "\143\057\144\055\145\054\146\053\147\052\150\051\151" +
    "\050\152\033\153\031\154\030\155\025\156\227\157\225" +
    "\160\224\161\222\162\220\163\216\164\214\165\213\166" +
    "\127\167\126\170\125\171\124\172\123\173\122\175\231" +
    "\176\074\177\212\200\113\201\232\202\035\203\036\204" +
    "\041\205\047\206\140\207\206\210\203\211\154\212\146" +
    "\213\230\214\151\215\144\216\226\217\072\220\073\221" +
    "\075\222\076\223\077\224\100\225\056\226\207\227\131" +
    "\230\210\231\211\237\155\265\165\270\161\272\204\274" +
    "\046\276\134\001\002\000\010\235\uffbc\241\uffbc\275\uffbc" +
    "\001\002\000\004\237\u014c\001\002\000\004\251\u014a\001" +
    "\002\000\006\271\360\272\357\001\002\000\004\251\u0148" +
    "\001\002\000\u0118\016\142\017\163\020\066\030\177\031" +
    "\176\032\174\033\171\034\170\035\027\036\026\037\024" +
    "\040\023\041\022\042\164\043\205\046\160\047\157\050" +
    "\156\051\153\052\152\053\150\054\147\055\145\056\121" +
    "\057\120\060\117\061\116\062\115\063\114\064\112\065" +
    "\110\066\071\067\070\070\067\071\065\072\064\073\063" +
    "\074\062\075\061\076\045\077\044\100\043\101\042\102" +
    "\040\103\037\104\034\105\032\106\223\107\221\110\217" +
    "\111\215\112\202\113\201\114\200\115\175\116\173\117" +
    "\172\120\167\121\166\122\143\123\141\124\137\125\136" +
    "\126\135\127\133\130\132\131\130\132\111\133\107\134" +
    "\106\135\105\136\104\137\103\140\102\141\101\142\060" +
    "\143\057\144\055\145\054\146\053\147\052\150\051\151" +
    "\050\152\033\153\031\154\030\155\025\156\227\157\225" +
    "\160\224\161\222\162\220\163\216\164\214\165\213\166" +
    "\127\167\126\170\125\171\124\172\123\173\122\175\231" +
    "\176\074\177\212\200\113\201\232\202\035\203\036\204" +
    "\041\205\047\206\140\207\206\210\203\211\154\212\146" +
    "\213\230\214\151\215\144\216\226\217\072\220\073\221" +
    "\075\222\076\223\077\224\100\225\056\226\207\227\131" +
    "\230\210\231\211\235\uffb8\237\155\241\uffb8\265\165\270" +
    "\161\272\204\274\046\275\uffb8\276\134\001\002\000\010" +
    "\235\uffbb\241\uffbb\275\uffbb\001\002\000\u0112\016\142\017" +
    "\163\020\066\030\177\031\176\032\174\033\171\034\170" +
    "\035\027\036\026\037\024\040\023\041\022\042\164\043" +
    "\205\046\160\047\157\050\156\051\153\052\152\053\150" +
    "\054\147\055\145\056\121\057\120\060\117\061\116\062" +
    "\115\063\114\064\112\065\110\066\071\067\070\070\067" +
    "\071\065\072\064\073\063\074\062\075\061\076\045\077" +
    "\044\100\043\101\042\102\040\103\037\104\034\105\032" +
    "\106\223\107\221\110\217\111\215\112\202\113\201\114" +
    "\200\115\175\116\173\117\172\120\167\121\166\122\143" +
    "\123\141\124\137\125\136\126\135\127\133\130\132\131" +
    "\130\132\111\133\107\134\106\135\105\136\104\137\103" +
    "\140\102\141\101\142\060\143\057\144\055\145\054\146" +
    "\053\147\052\150\051\151\050\152\033\153\031\154\030" +
    "\155\025\156\227\157\225\160\224\161\222\162\220\163" +
    "\216\164\214\165\213\166\127\167\126\170\125\171\124" +
    "\172\123\173\122\175\231\176\074\177\212\200\113\201" +
    "\232\202\035\203\036\204\041\205\047\206\140\207\206" +
    "\210\203\211\154\212\146\213\230\214\151\215\144\216" +
    "\226\217\072\220\073\221\075\222\076\223\077\224\100" +
    "\225\056\226\207\227\131\230\210\231\211\237\155\265" +
    "\165\270\161\272\204\274\046\276\134\001\002\000\010" +
    "\235\uffba\241\uffba\275\uffba\001\002\000\u011c\016\uffd5\017" +
    "\uffd5\020\uffd5\030\uffd5\031\uffd5\032\uffd5\033\uffd5\034\uffd5" +
    "\035\uffd5\036\uffd5\037\uffd5\040\uffd5\041\uffd5\042\uffd5\043" +
    "\uffd5\046\uffd5\047\uffd5\050\uffd5\051\uffd5\052\uffd5\053\uffd5" +
    "\054\uffd5\055\uffd5\056\uffd5\057\uffd5\060\uffd5\061\uffd5\062" +
    "\uffd5\063\uffd5\064\uffd5\065\uffd5\066\uffd5\067\uffd5\070\uffd5" +
    "\071\uffd5\072\uffd5\073\uffd5\074\uffd5\075\uffd5\076\uffd5\077" +
    "\uffd5\100\uffd5\101\uffd5\102\uffd5\103\uffd5\104\uffd5\105\uffd5" +
    "\106\uffd5\107\uffd5\110\uffd5\111\uffd5\112\uffd5\113\uffd5\114" +
    "\uffd5\115\uffd5\116\uffd5\117\uffd5\120\uffd5\121\uffd5\122\uffd5" +
    "\123\uffd5\124\uffd5\125\uffd5\126\uffd5\127\uffd5\130\uffd5\131" +
    "\uffd5\132\uffd5\133\uffd5\134\uffd5\135\uffd5\136\uffd5\137\uffd5" +
    "\140\uffd5\141\uffd5\142\uffd5\143\uffd5\144\uffd5\145\uffd5\146" +
    "\uffd5\147\uffd5\150\uffd5\151\uffd5\152\uffd5\153\uffd5\154\uffd5" +
    "\155\uffd5\156\uffd5\157\uffd5\160\uffd5\161\uffd5\162\uffd5\163" +
    "\uffd5\164\uffd5\165\uffd5\166\uffd5\167\uffd5\170\uffd5\171\uffd5" +
    "\172\uffd5\173\uffd5\175\uffd5\176\uffd5\177\uffd5\200\uffd5\201" +
    "\uffd5\202\uffd5\203\uffd5\204\uffd5\205\uffd5\206\uffd5\207\uffd5" +
    "\210\uffd5\211\uffd5\212\uffd5\213\uffd5\214\uffd5\215\uffd5\216" +
    "\uffd5\217\uffd5\220\uffd5\221\uffd5\222\uffd5\223\uffd5\224\uffd5" +
    "\225\uffd5\226\uffd5\227\uffd5\230\uffd5\231\uffd5\234\uffd5\235" +
    "\uffd5\237\uffd5\241\uffd5\250\uffd5\265\uffd5\270\uffd5\272\uffd5" +
    "\274\uffd5\275\uffd5\276\uffd5\001\002\000\004\240\u014e\001" +
    "\002\000\006\241\u013d\275\u013e\001\002\000\010\235\u0150" +
    "\241\u0145\275\u0146\001\002\000\004\237\u0151\001\002\000" +
    "\u011c\016\uffd6\017\uffd6\020\uffd6\030\uffd6\031\uffd6\032\uffd6" +
    "\033\uffd6\034\uffd6\035\uffd6\036\uffd6\037\uffd6\040\uffd6\041" +
    "\uffd6\042\uffd6\043\uffd6\046\uffd6\047\uffd6\050\uffd6\051\uffd6" +
    "\052\uffd6\053\uffd6\054\uffd6\055\uffd6\056\uffd6\057\uffd6\060" +
    "\uffd6\061\uffd6\062\uffd6\063\uffd6\064\uffd6\065\uffd6\066\uffd6" +
    "\067\uffd6\070\uffd6\071\uffd6\072\uffd6\073\uffd6\074\uffd6\075" +
    "\uffd6\076\uffd6\077\uffd6\100\uffd6\101\uffd6\102\uffd6\103\uffd6" +
    "\104\uffd6\105\uffd6\106\uffd6\107\uffd6\110\uffd6\111\uffd6\112" +
    "\uffd6\113\uffd6\114\uffd6\115\uffd6\116\uffd6\117\uffd6\120\uffd6" +
    "\121\uffd6\122\uffd6\123\uffd6\124\uffd6\125\uffd6\126\uffd6\127" +
    "\uffd6\130\uffd6\131\uffd6\132\uffd6\133\uffd6\134\uffd6\135\uffd6" +
    "\136\uffd6\137\uffd6\140\uffd6\141\uffd6\142\uffd6\143\uffd6\144" +
    "\uffd6\145\uffd6\146\uffd6\147\uffd6\150\uffd6\151\uffd6\152\uffd6" +
    "\153\uffd6\154\uffd6\155\uffd6\156\uffd6\157\uffd6\160\uffd6\161" +
    "\uffd6\162\uffd6\163\uffd6\164\uffd6\165\uffd6\166\uffd6\167\uffd6" +
    "\170\uffd6\171\uffd6\172\uffd6\173\uffd6\175\uffd6\176\uffd6\177" +
    "\uffd6\200\uffd6\201\uffd6\202\uffd6\203\uffd6\204\uffd6\205\uffd6" +
    "\206\uffd6\207\uffd6\210\uffd6\211\uffd6\212\uffd6\213\uffd6\214" +
    "\uffd6\215\uffd6\216\uffd6\217\uffd6\220\uffd6\221\uffd6\222\uffd6" +
    "\223\uffd6\224\uffd6\225\uffd6\226\uffd6\227\uffd6\230\uffd6\231" +
    "\uffd6\234\uffd6\235\uffd6\237\uffd6\241\uffd6\250\uffd6\265\uffd6" +
    "\270\uffd6\272\uffd6\274\uffd6\275\uffd6\276\uffd6\001\002\000" +
    "\004\271\u0153\001\002\000\004\243\u0154\001\002\000\004" +
    "\252\u0155\001\002\000\u011c\016\uffe4\017\uffe4\020\uffe4\030" +
    "\uffe4\031\uffe4\032\uffe4\033\uffe4\034\uffe4\035\uffe4\036\uffe4" +
    "\037\uffe4\040\uffe4\041\uffe4\042\uffe4\043\uffe4\046\uffe4\047" +
    "\uffe4\050\uffe4\051\uffe4\052\uffe4\053\uffe4\054\uffe4\055\uffe4" +
    "\056\uffe4\057\uffe4\060\uffe4\061\uffe4\062\uffe4\063\uffe4\064" +
    "\uffe4\065\uffe4\066\uffe4\067\uffe4\070\uffe4\071\uffe4\072\uffe4" +
    "\073\uffe4\074\uffe4\075\uffe4\076\uffe4\077\uffe4\100\uffe4\101" +
    "\uffe4\102\uffe4\103\uffe4\104\uffe4\105\uffe4\106\uffe4\107\uffe4" +
    "\110\uffe4\111\uffe4\112\uffe4\113\uffe4\114\uffe4\115\uffe4\116" +
    "\uffe4\117\uffe4\120\uffe4\121\uffe4\122\uffe4\123\uffe4\124\uffe4" +
    "\125\uffe4\126\uffe4\127\uffe4\130\uffe4\131\uffe4\132\uffe4\133" +
    "\uffe4\134\uffe4\135\uffe4\136\uffe4\137\uffe4\140\uffe4\141\uffe4" +
    "\142\uffe4\143\uffe4\144\uffe4\145\uffe4\146\uffe4\147\uffe4\150" +
    "\uffe4\151\uffe4\152\uffe4\153\uffe4\154\uffe4\155\uffe4\156\uffe4" +
    "\157\uffe4\160\uffe4\161\uffe4\162\uffe4\163\uffe4\164\uffe4\165" +
    "\uffe4\166\uffe4\167\uffe4\170\uffe4\171\uffe4\172\uffe4\173\uffe4" +
    "\175\uffe4\176\uffe4\177\uffe4\200\uffe4\201\uffe4\202\uffe4\203" +
    "\uffe4\204\uffe4\205\uffe4\206\uffe4\207\uffe4\210\uffe4\211\uffe4" +
    "\212\uffe4\213\uffe4\214\uffe4\215\uffe4\216\uffe4\217\uffe4\220" +
    "\uffe4\221\uffe4\222\uffe4\223\uffe4\224\uffe4\225\uffe4\226\uffe4" +
    "\227\uffe4\230\uffe4\231\uffe4\234\uffe4\235\uffe4\237\uffe4\241" +
    "\uffe4\250\uffe4\265\uffe4\270\uffe4\272\uffe4\274\uffe4\275\uffe4" +
    "\276\uffe4\001\002\000\134\030\252\031\251\032\250\033" +
    "\247\034\246\044\u0158\045\u015a\112\242\113\240\114\310" +
    "\115\305\116\304\117\301\120\300\121\277\122\273\123" +
    "\271\124\270\125\267\126\266\127\265\130\264\131\263" +
    "\132\262\133\261\134\260\135\257\136\256\137\255\140" +
    "\254\141\253\142\245\143\244\144\243\145\241\146\311" +
    "\147\306\150\303\151\302\152\276\153\275\154\274\155" +
    "\272\271\u0157\272\u015b\001\002\000\026\243\uffb1\254\uffad" +
    "\256\uffad\257\uffad\260\uffad\261\uffad\262\uffad\263\uffad\264" +
    "\uffad\272\365\001\002\000\004\277\u017a\001\002\000\004" +
    "\243\u0175\001\002\000\004\300\u0174\001\002\000\026\243" +
    "\uffb2\254\uffae\256\uffae\257\uffae\260\uffae\261\uffae\262\uffae" +
    "\263\uffae\264\uffae\271\366\001\002\000\004\243\u016f\001" +
    "\002\000\022\254\u0164\256\u0163\257\u0161\260\u0162\261\u0160" +
    "\262\u015f\263\u0167\264\u0165\001\002\000\024\243\uffac\254" +
    "\uffac\256\uffac\257\uffac\260\uffac\261\uffac\262\uffac\263\uffac" +
    "\264\uffac\001\002\000\134\030\uff9e\031\uff9e\032\uff9e\033" +
    "\uff9e\034\uff9e\044\uff9e\045\uff9e\112\uff9e\113\uff9e\114\uff9e" +
    "\115\uff9e\116\uff9e\117\uff9e\120\uff9e\121\uff9e\122\uff9e\123" +
    "\uff9e\124\uff9e\125\uff9e\126\uff9e\127\uff9e\130\uff9e\131\uff9e" +
    "\132\uff9e\133\uff9e\134\uff9e\135\uff9e\136\uff9e\137\uff9e\140" +
    "\uff9e\141\uff9e\142\uff9e\143\uff9e\144\uff9e\145\uff9e\146\uff9e" +
    "\147\uff9e\150\uff9e\151\uff9e\152\uff9e\153\uff9e\154\uff9e\155" +
    "\uff9e\271\uff9e\272\uff9e\001\002\000\134\030\uffa3\031\uffa3" +
    "\032\uffa3\033\uffa3\034\uffa3\044\uffa3\045\uffa3\112\uffa3\113" +
    "\uffa3\114\uffa3\115\uffa3\116\uffa3\117\uffa3\120\uffa3\121\uffa3" +
    "\122\uffa3\123\uffa3\124\uffa3\125\uffa3\126\uffa3\127\uffa3\130" +
    "\uffa3\131\uffa3\132\uffa3\133\uffa3\134\uffa3\135\uffa3\136\uffa3" +
    "\137\uffa3\140\uffa3\141\uffa3\142\uffa3\143\uffa3\144\uffa3\145" +
    "\uffa3\146\uffa3\147\uffa3\150\uffa3\151\uffa3\152\uffa3\153\uffa3" +
    "\154\uffa3\155\uffa3\271\uffa3\272\uffa3\001\002\000\134\030" +
    "\uffa4\031\uffa4\032\uffa4\033\uffa4\034\uffa4\044\uffa4\045\uffa4" +
    "\112\uffa4\113\uffa4\114\uffa4\115\uffa4\116\uffa4\117\uffa4\120" +
    "\uffa4\121\uffa4\122\uffa4\123\uffa4\124\uffa4\125\uffa4\126\uffa4" +
    "\127\uffa4\130\uffa4\131\uffa4\132\uffa4\133\uffa4\134\uffa4\135" +
    "\uffa4\136\uffa4\137\uffa4\140\uffa4\141\uffa4\142\uffa4\143\uffa4" +
    "\144\uffa4\145\uffa4\146\uffa4\147\uffa4\150\uffa4\151\uffa4\152" +
    "\uffa4\153\uffa4\154\uffa4\155\uffa4\271\uffa4\272\uffa4\001\002" +
    "\000\134\030\uffa2\031\uffa2\032\uffa2\033\uffa2\034\uffa2\044" +
    "\uffa2\045\uffa2\112\uffa2\113\uffa2\114\uffa2\115\uffa2\116\uffa2" +
    "\117\uffa2\120\uffa2\121\uffa2\122\uffa2\123\uffa2\124\uffa2\125" +
    "\uffa2\126\uffa2\127\uffa2\130\uffa2\131\uffa2\132\uffa2\133\uffa2" +
    "\134\uffa2\135\uffa2\136\uffa2\137\uffa2\140\uffa2\141\uffa2\142" +
    "\uffa2\143\uffa2\144\uffa2\145\uffa2\146\uffa2\147\uffa2\150\uffa2" +
    "\151\uffa2\152\uffa2\153\uffa2\154\uffa2\155\uffa2\271\uffa2\272" +
    "\uffa2\001\002\000\134\030\uffa5\031\uffa5\032\uffa5\033\uffa5" +
    "\034\uffa5\044\uffa5\045\uffa5\112\uffa5\113\uffa5\114\uffa5\115" +
    "\uffa5\116\uffa5\117\uffa5\120\uffa5\121\uffa5\122\uffa5\123\uffa5" +
    "\124\uffa5\125\uffa5\126\uffa5\127\uffa5\130\uffa5\131\uffa5\132" +
    "\uffa5\133\uffa5\134\uffa5\135\uffa5\136\uffa5\137\uffa5\140\uffa5" +
    "\141\uffa5\142\uffa5\143\uffa5\144\uffa5\145\uffa5\146\uffa5\147" +
    "\uffa5\150\uffa5\151\uffa5\152\uffa5\153\uffa5\154\uffa5\155\uffa5" +
    "\271\uffa5\272\uffa5\001\002\000\134\030\uffa1\031\uffa1\032" +
    "\uffa1\033\uffa1\034\uffa1\044\uffa1\045\uffa1\112\uffa1\113\uffa1" +
    "\114\uffa1\115\uffa1\116\uffa1\117\uffa1\120\uffa1\121\uffa1\122" +
    "\uffa1\123\uffa1\124\uffa1\125\uffa1\126\uffa1\127\uffa1\130\uffa1" +
    "\131\uffa1\132\uffa1\133\uffa1\134\uffa1\135\uffa1\136\uffa1\137" +
    "\uffa1\140\uffa1\141\uffa1\142\uffa1\143\uffa1\144\uffa1\145\uffa1" +
    "\146\uffa1\147\uffa1\150\uffa1\151\uffa1\152\uffa1\153\uffa1\154" +
    "\uffa1\155\uffa1\271\uffa1\272\uffa1\001\002\000\134\030\uffa0" +
    "\031\uffa0\032\uffa0\033\uffa0\034\uffa0\044\uffa0\045\uffa0\112" +
    "\uffa0\113\uffa0\114\uffa0\115\uffa0\116\uffa0\117\uffa0\120\uffa0" +
    "\121\uffa0\122\uffa0\123\uffa0\124\uffa0\125\uffa0\126\uffa0\127" +
    "\uffa0\130\uffa0\131\uffa0\132\uffa0\133\uffa0\134\uffa0\135\uffa0" +
    "\136\uffa0\137\uffa0\140\uffa0\141\uffa0\142\uffa0\143\uffa0\144" +
    "\uffa0\145\uffa0\146\uffa0\147\uffa0\150\uffa0\151\uffa0\152\uffa0" +
    "\153\uffa0\154\uffa0\155\uffa0\271\uffa0\272\uffa0\001\002\000" +
    "\134\030\252\031\251\032\250\033\247\034\246\044\u0158" +
    "\045\u015a\112\242\113\240\114\310\115\305\116\304\117" +
    "\301\120\300\121\277\122\273\123\271\124\270\125\267" +
    "\126\266\127\265\130\264\131\263\132\262\133\261\134" +
    "\260\135\257\136\256\137\255\140\254\141\253\142\245" +
    "\143\244\144\243\145\241\146\311\147\306\150\303\151" +
    "\302\152\276\153\275\154\274\155\272\271\u0168\272\u0169" +
    "\001\002\000\134\030\uff9f\031\uff9f\032\uff9f\033\uff9f\034" +
    "\uff9f\044\uff9f\045\uff9f\112\uff9f\113\uff9f\114\uff9f\115\uff9f" +
    "\116\uff9f\117\uff9f\120\uff9f\121\uff9f\122\uff9f\123\uff9f\124" +
    "\uff9f\125\uff9f\126\uff9f\127\uff9f\130\uff9f\131\uff9f\132\uff9f" +
    "\133\uff9f\134\uff9f\135\uff9f\136\uff9f\137\uff9f\140\uff9f\141" +
    "\uff9f\142\uff9f\143\uff9f\144\uff9f\145\uff9f\146\uff9f\147\uff9f" +
    "\150\uff9f\151\uff9f\152\uff9f\153\uff9f\154\uff9f\155\uff9f\271" +
    "\uff9f\272\uff9f\001\002\000\024\243\uffad\254\uffad\256\uffad" +
    "\257\uffad\260\uffad\261\uffad\262\uffad\263\uffad\264\uffad\001" +
    "\002\000\024\243\uffae\254\uffae\256\uffae\257\uffae\260\uffae" +
    "\261\uffae\262\uffae\263\uffae\264\uffae\001\002\000\024\243" +
    "\uffa9\254\u0164\256\u0163\257\u0161\260\u0162\261\u0160\262\u015f" +
    "\263\u0167\264\u0165\001\002\000\004\243\uffa8\001\002\000" +
    "\134\030\252\031\251\032\250\033\247\034\246\044\u0158" +
    "\045\u015a\112\242\113\240\114\310\115\305\116\304\117" +
    "\301\120\300\121\277\122\273\123\271\124\270\125\267" +
    "\126\266\127\265\130\264\131\263\132\262\133\261\134" +
    "\260\135\257\136\256\137\255\140\254\141\253\142\245" +
    "\143\244\144\243\145\241\146\311\147\306\150\303\151" +
    "\302\152\276\153\275\154\274\155\272\271\u0168\272\u0169" +
    "\001\002\000\024\243\uffa7\254\u0164\256\u0163\257\u0161\260" +
    "\u0162\261\u0160\262\u015f\263\u0167\264\u0165\001\002\000\004" +
    "\243\uffa6\001\002\000\004\236\u0170\001\002\000\u0112\016" +
    "\142\017\163\020\066\030\177\031\176\032\174\033\171" +
    "\034\170\035\027\036\026\037\024\040\023\041\022\042" +
    "\164\043\205\046\160\047\157\050\156\051\153\052\152" +
    "\053\150\054\147\055\145\056\121\057\120\060\117\061" +
    "\116\062\115\063\114\064\112\065\110\066\071\067\070" +
    "\070\067\071\065\072\064\073\063\074\062\075\061\076" +
    "\045\077\044\100\043\101\042\102\040\103\037\104\034" +
    "\105\032\106\223\107\221\110\217\111\215\112\202\113" +
    "\201\114\200\115\175\116\173\117\172\120\167\121\166" +
    "\122\143\123\141\124\137\125\136\126\135\127\133\130" +
    "\132\131\130\132\111\133\107\134\106\135\105\136\104" +
    "\137\103\140\102\141\101\142\060\143\057\144\055\145" +
    "\054\146\053\147\052\150\051\151\050\152\033\153\031" +
    "\154\030\155\025\156\227\157\225\160\224\161\222\162" +
    "\220\163\216\164\214\165\213\166\127\167\126\170\125" +
    "\171\124\172\123\173\122\175\231\176\074\177\212\200" +
    "\113\201\232\202\035\203\036\204\041\205\047\206\140" +
    "\207\206\210\203\211\154\212\146\213\230\214\151\215" +
    "\144\216\226\217\072\220\073\221\075\222\076\223\077" +
    "\224\100\225\056\226\207\227\131\230\210\231\211\237" +
    "\155\265\165\270\161\272\204\274\046\276\134\001\002" +
    "\000\004\235\u0172\001\002\000\004\276\u0173\001\002\000" +
    "\u011c\016\uffd3\017\uffd3\020\uffd3\030\uffd3\031\uffd3\032\uffd3" +
    "\033\uffd3\034\uffd3\035\uffd3\036\uffd3\037\uffd3\040\uffd3\041" +
    "\uffd3\042\uffd3\043\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3" +
    "\052\uffd3\053\uffd3\054\uffd3\055\uffd3\056\uffd3\057\uffd3\060" +
    "\uffd3\061\uffd3\062\uffd3\063\uffd3\064\uffd3\065\uffd3\066\uffd3" +
    "\067\uffd3\070\uffd3\071\uffd3\072\uffd3\073\uffd3\074\uffd3\075" +
    "\uffd3\076\uffd3\077\uffd3\100\uffd3\101\uffd3\102\uffd3\103\uffd3" +
    "\104\uffd3\105\uffd3\106\uffd3\107\uffd3\110\uffd3\111\uffd3\112" +
    "\uffd3\113\uffd3\114\uffd3\115\uffd3\116\uffd3\117\uffd3\120\uffd3" +
    "\121\uffd3\122\uffd3\123\uffd3\124\uffd3\125\uffd3\126\uffd3\127" +
    "\uffd3\130\uffd3\131\uffd3\132\uffd3\133\uffd3\134\uffd3\135\uffd3" +
    "\136\uffd3\137\uffd3\140\uffd3\141\uffd3\142\uffd3\143\uffd3\144" +
    "\uffd3\145\uffd3\146\uffd3\147\uffd3\150\uffd3\151\uffd3\152\uffd3" +
    "\153\uffd3\154\uffd3\155\uffd3\156\uffd3\157\uffd3\160\uffd3\161" +
    "\uffd3\162\uffd3\163\uffd3\164\uffd3\165\uffd3\166\uffd3\167\uffd3" +
    "\170\uffd3\171\uffd3\172\uffd3\173\uffd3\175\uffd3\176\uffd3\177" +
    "\uffd3\200\uffd3\201\uffd3\202\uffd3\203\uffd3\204\uffd3\205\uffd3" +
    "\206\uffd3\207\uffd3\210\uffd3\211\uffd3\212\uffd3\213\uffd3\214" +
    "\uffd3\215\uffd3\216\uffd3\217\uffd3\220\uffd3\221\uffd3\222\uffd3" +
    "\223\uffd3\224\uffd3\225\uffd3\226\uffd3\227\uffd3\230\uffd3\231" +
    "\uffd3\234\uffd3\235\uffd3\237\uffd3\241\uffd3\250\uffd3\265\uffd3" +
    "\270\uffd3\272\uffd3\274\uffd3\275\uffd3\276\uffd3\001\002\000" +
    "\024\243\uffaa\254\uffaa\256\uffaa\257\uffaa\260\uffaa\261\uffaa" +
    "\262\uffaa\263\uffaa\264\uffaa\001\002\000\004\236\u0176\001" +
    "\002\000\u0112\016\142\017\163\020\066\030\177\031\176" +
    "\032\174\033\171\034\170\035\027\036\026\037\024\040" +
    "\023\041\022\042\164\043\205\046\160\047\157\050\156" +
    "\051\153\052\152\053\150\054\147\055\145\056\121\057" +
    "\120\060\117\061\116\062\115\063\114\064\112\065\110" +
    "\066\071\067\070\070\067\071\065\072\064\073\063\074" +
    "\062\075\061\076\045\077\044\100\043\101\042\102\040" +
    "\103\037\104\034\105\032\106\223\107\221\110\217\111" +
    "\215\112\202\113\201\114\200\115\175\116\173\117\172" +
    "\120\167\121\166\122\143\123\141\124\137\125\136\126" +
    "\135\127\133\130\132\131\130\132\111\133\107\134\106" +
    "\135\105\136\104\137\103\140\102\141\101\142\060\143" +
    "\057\144\055\145\054\146\053\147\052\150\051\151\050" +
    "\152\033\153\031\154\030\155\025\156\227\157\225\160" +
    "\224\161\222\162\220\163\216\164\214\165\213\166\127" +
    "\167\126\170\125\171\124\172\123\173\122\175\231\176" +
    "\074\177\212\200\113\201\232\202\035\203\036\204\041" +
    "\205\047\206\140\207\206\210\203\211\154\212\146\213" +
    "\230\214\151\215\144\216\226\217\072\220\073\221\075" +
    "\222\076\223\077\224\100\225\056\226\207\227\131\230" +
    "\210\231\211\237\155\265\165\270\161\272\204\274\046" +
    "\276\134\001\002\000\004\235\u0178\001\002\000\004\276" +
    "\u0179\001\002\000\u011c\016\uffd4\017\uffd4\020\uffd4\030\uffd4" +
    "\031\uffd4\032\uffd4\033\uffd4\034\uffd4\035\uffd4\036\uffd4\037" +
    "\uffd4\040\uffd4\041\uffd4\042\uffd4\043\uffd4\046\uffd4\047\uffd4" +
    "\050\uffd4\051\uffd4\052\uffd4\053\uffd4\054\uffd4\055\uffd4\056" +
    "\uffd4\057\uffd4\060\uffd4\061\uffd4\062\uffd4\063\uffd4\064\uffd4" +
    "\065\uffd4\066\uffd4\067\uffd4\070\uffd4\071\uffd4\072\uffd4\073" +
    "\uffd4\074\uffd4\075\uffd4\076\uffd4\077\uffd4\100\uffd4\101\uffd4" +
    "\102\uffd4\103\uffd4\104\uffd4\105\uffd4\106\uffd4\107\uffd4\110" +
    "\uffd4\111\uffd4\112\uffd4\113\uffd4\114\uffd4\115\uffd4\116\uffd4" +
    "\117\uffd4\120\uffd4\121\uffd4\122\uffd4\123\uffd4\124\uffd4\125" +
    "\uffd4\126\uffd4\127\uffd4\130\uffd4\131\uffd4\132\uffd4\133\uffd4" +
    "\134\uffd4\135\uffd4\136\uffd4\137\uffd4\140\uffd4\141\uffd4\142" +
    "\uffd4\143\uffd4\144\uffd4\145\uffd4\146\uffd4\147\uffd4\150\uffd4" +
    "\151\uffd4\152\uffd4\153\uffd4\154\uffd4\155\uffd4\156\uffd4\157" +
    "\uffd4\160\uffd4\161\uffd4\162\uffd4\163\uffd4\164\uffd4\165\uffd4" +
    "\166\uffd4\167\uffd4\170\uffd4\171\uffd4\172\uffd4\173\uffd4\175" +
    "\uffd4\176\uffd4\177\uffd4\200\uffd4\201\uffd4\202\uffd4\203\uffd4" +
    "\204\uffd4\205\uffd4\206\uffd4\207\uffd4\210\uffd4\211\uffd4\212" +
    "\uffd4\213\uffd4\214\uffd4\215\uffd4\216\uffd4\217\uffd4\220\uffd4" +
    "\221\uffd4\222\uffd4\223\uffd4\224\uffd4\225\uffd4\226\uffd4\227" +
    "\uffd4\230\uffd4\231\uffd4\234\uffd4\235\uffd4\237\uffd4\241\uffd4" +
    "\250\uffd4\265\uffd4\270\uffd4\272\uffd4\274\uffd4\275\uffd4\276" +
    "\uffd4\001\002\000\024\243\uffab\254\uffab\256\uffab\257\uffab" +
    "\260\uffab\261\uffab\262\uffab\263\uffab\264\uffab\001\002\000" +
    "\004\045\u017c\001\002\000\004\300\u017d\001\002\000\u011c" +
    "\016\uffdd\017\uffdd\020\uffdd\030\uffdd\031\uffdd\032\uffdd\033" +
    "\uffdd\034\uffdd\035\uffdd\036\uffdd\037\uffdd\040\uffdd\041\uffdd" +
    "\042\uffdd\043\uffdd\046\uffdd\047\uffdd\050\uffdd\051\uffdd\052" +
    "\uffdd\053\uffdd\054\uffdd\055\uffdd\056\uffdd\057\uffdd\060\uffdd" +
    "\061\uffdd\062\uffdd\063\uffdd\064\uffdd\065\uffdd\066\uffdd\067" +
    "\uffdd\070\uffdd\071\uffdd\072\uffdd\073\uffdd\074\uffdd\075\uffdd" +
    "\076\uffdd\077\uffdd\100\uffdd\101\uffdd\102\uffdd\103\uffdd\104" +
    "\uffdd\105\uffdd\106\uffdd\107\uffdd\110\uffdd\111\uffdd\112\uffdd" +
    "\113\uffdd\114\uffdd\115\uffdd\116\uffdd\117\uffdd\120\uffdd\121" +
    "\uffdd\122\uffdd\123\uffdd\124\uffdd\125\uffdd\126\uffdd\127\uffdd" +
    "\130\uffdd\131\uffdd\132\uffdd\133\uffdd\134\uffdd\135\uffdd\136" +
    "\uffdd\137\uffdd\140\uffdd\141\uffdd\142\uffdd\143\uffdd\144\uffdd" +
    "\145\uffdd\146\uffdd\147\uffdd\150\uffdd\151\uffdd\152\uffdd\153" +
    "\uffdd\154\uffdd\155\uffdd\156\uffdd\157\uffdd\160\uffdd\161\uffdd" +
    "\162\uffdd\163\uffdd\164\uffdd\165\uffdd\166\uffdd\167\uffdd\170" +
    "\uffdd\171\uffdd\172\uffdd\173\uffdd\175\uffdd\176\uffdd\177\uffdd" +
    "\200\uffdd\201\uffdd\202\uffdd\203\uffdd\204\uffdd\205\uffdd\206" +
    "\uffdd\207\uffdd\210\uffdd\211\uffdd\212\uffdd\213\uffdd\214\uffdd" +
    "\215\uffdd\216\uffdd\217\uffdd\220\uffdd\221\uffdd\222\uffdd\223" +
    "\uffdd\224\uffdd\225\uffdd\226\uffdd\227\uffdd\230\uffdd\231\uffdd" +
    "\234\uffdd\235\uffdd\237\uffdd\241\uffdd\250\uffdd\265\uffdd\270" +
    "\uffdd\272\uffdd\274\uffdd\275\uffdd\276\uffdd\001\002\000\134" +
    "\030\252\031\251\032\250\033\247\034\246\044\u0158\045" +
    "\u015a\112\242\113\240\114\310\115\305\116\304\117\301" +
    "\120\300\121\277\122\273\123\271\124\270\125\267\126" +
    "\266\127\265\130\264\131\263\132\262\133\261\134\260" +
    "\135\257\136\256\137\255\140\254\141\253\142\245\143" +
    "\244\144\243\145\241\146\311\147\306\150\303\151\302" +
    "\152\276\153\275\154\274\155\272\271\u0168\272\u0169\001" +
    "\002\000\004\243\u0189\001\002\000\024\243\u0181\254\uffac" +
    "\256\uffac\257\uffac\260\uffac\261\uffac\262\uffac\263\uffac\264" +
    "\uffac\001\002\000\004\233\u0182\001\002\000\u0112\016\142" +
    "\017\163\020\066\030\177\031\176\032\174\033\171\034" +
    "\170\035\027\036\026\037\024\040\023\041\022\042\164" +
    "\043\205\046\160\047\157\050\156\051\153\052\152\053" +
    "\150\054\147\055\145\056\121\057\120\060\117\061\116" +
    "\062\115\063\114\064\112\065\110\066\071\067\070\070" +
    "\067\071\065\072\064\073\063\074\062\075\061\076\045" +
    "\077\044\100\043\101\042\102\040\103\037\104\034\105" +
    "\032\106\223\107\221\110\217\111\215\112\202\113\201" +
    "\114\200\115\175\116\173\117\172\120\167\121\166\122" +
    "\143\123\141\124\137\125\136\126\135\127\133\130\132" +
    "\131\130\132\111\133\107\134\106\135\105\136\104\137" +
    "\103\140\102\141\101\142\060\143\057\144\055\145\054" +
    "\146\053\147\052\150\051\151\050\152\033\153\031\154" +
    "\030\155\025\156\227\157\225\160\224\161\222\162\220" +
    "\163\216\164\214\165\213\166\127\167\126\170\125\171" +
    "\124\172\123\173\122\175\231\176\074\177\212\200\113" +
    "\201\232\202\035\203\036\204\041\205\047\206\140\207" +
    "\206\210\203\211\154\212\146\213\230\214\151\215\144" +
    "\216\226\217\072\220\073\221\075\222\076\223\077\224" +
    "\100\225\056\226\207\227\131\230\210\231\211\237\155" +
    "\265\165\270\161\272\204\274\046\276\134\001\002\000" +
    "\006\234\uffd8\235\u0185\001\002\000\004\234\u0186\001\002" +
    "\000\u011c\016\uffdb\017\uffdb\020\uffdb\030\uffdb\031\uffdb\032" +
    "\uffdb\033\uffdb\034\uffdb\035\uffdb\036\uffdb\037\uffdb\040\uffdb" +
    "\041\uffdb\042\uffdb\043\uffdb\046\uffdb\047\uffdb\050\uffdb\051" +
    "\uffdb\052\uffdb\053\uffdb\054\uffdb\055\uffdb\056\uffdb\057\uffdb" +
    "\060\uffdb\061\uffdb\062\uffdb\063\uffdb\064\uffdb\065\uffdb\066" +
    "\uffdb\067\uffdb\070\uffdb\071\uffdb\072\uffdb\073\uffdb\074\uffdb" +
    "\075\uffdb\076\uffdb\077\uffdb\100\uffdb\101\uffdb\102\uffdb\103" +
    "\uffdb\104\uffdb\105\uffdb\106\uffdb\107\uffdb\110\uffdb\111\uffdb" +
    "\112\uffdb\113\uffdb\114\uffdb\115\uffdb\116\uffdb\117\uffdb\120" +
    "\uffdb\121\uffdb\122\uffdb\123\uffdb\124\uffdb\125\uffdb\126\uffdb" +
    "\127\uffdb\130\uffdb\131\uffdb\132\uffdb\133\uffdb\134\uffdb\135" +
    "\uffdb\136\uffdb\137\uffdb\140\uffdb\141\uffdb\142\uffdb\143\uffdb" +
    "\144\uffdb\145\uffdb\146\uffdb\147\uffdb\150\uffdb\151\uffdb\152" +
    "\uffdb\153\uffdb\154\uffdb\155\uffdb\156\uffdb\157\uffdb\160\uffdb" +
    "\161\uffdb\162\uffdb\163\uffdb\164\uffdb\165\uffdb\166\uffdb\167" +
    "\uffdb\170\uffdb\171\uffdb\172\uffdb\173\uffdb\175\uffdb\176\uffdb" +
    "\177\uffdb\200\uffdb\201\uffdb\202\uffdb\203\uffdb\204\uffdb\205" +
    "\uffdb\206\uffdb\207\uffdb\210\uffdb\211\uffdb\212\uffdb\213\uffdb" +
    "\214\uffdb\215\uffdb\216\uffdb\217\uffdb\220\uffdb\221\uffdb\222" +
    "\uffdb\223\uffdb\224\uffdb\225\uffdb\226\uffdb\227\uffdb\230\uffdb" +
    "\231\uffdb\234\uffdb\235\uffdb\237\uffdb\241\uffdb\250\uffdb\265" +
    "\uffdb\270\uffdb\272\uffdb\274\uffdb\275\uffdb\276\uffdb\001\002" +
    "\000\u0112\016\142\017\163\020\066\030\177\031\176\032" +
    "\174\033\171\034\170\035\027\036\026\037\024\040\023" +
    "\041\022\042\164\043\205\046\160\047\157\050\156\051" +
    "\153\052\152\053\150\054\147\055\145\056\121\057\120" +
    "\060\117\061\116\062\115\063\114\064\112\065\110\066" +
    "\071\067\070\070\067\071\065\072\064\073\063\074\062" +
    "\075\061\076\045\077\044\100\043\101\042\102\040\103" +
    "\037\104\034\105\032\106\223\107\221\110\217\111\215" +
    "\112\202\113\201\114\200\115\175\116\173\117\172\120" +
    "\167\121\166\122\143\123\141\124\137\125\136\126\135" +
    "\127\133\130\132\131\130\132\111\133\107\134\106\135" +
    "\105\136\104\137\103\140\102\141\101\142\060\143\057" +
    "\144\055\145\054\146\053\147\052\150\051\151\050\152" +
    "\033\153\031\154\030\155\025\156\227\157\225\160\224" +
    "\161\222\162\220\163\216\164\214\165\213\166\127\167" +
    "\126\170\125\171\124\172\123\173\122\175\231\176\074" +
    "\177\212\200\113\201\232\202\035\203\036\204\041\205" +
    "\047\206\140\207\206\210\203\211\154\212\146\213\230" +
    "\214\151\215\144\216\226\217\072\220\073\221\075\222" +
    "\076\223\077\224\100\225\056\226\207\227\131\230\210" +
    "\231\211\237\155\265\165\270\161\272\204\274\046\276" +
    "\134\001\002\000\004\235\u0188\001\002\000\u011c\016\uffd7" +
    "\017\uffd7\020\uffd7\030\uffd7\031\uffd7\032\uffd7\033\uffd7\034" +
    "\uffd7\035\uffd7\036\uffd7\037\uffd7\040\uffd7\041\uffd7\042\uffd7" +
    "\043\uffd7\046\uffd7\047\uffd7\050\uffd7\051\uffd7\052\uffd7\053" +
    "\uffd7\054\uffd7\055\uffd7\056\uffd7\057\uffd7\060\uffd7\061\uffd7" +
    "\062\uffd7\063\uffd7\064\uffd7\065\uffd7\066\uffd7\067\uffd7\070" +
    "\uffd7\071\uffd7\072\uffd7\073\uffd7\074\uffd7\075\uffd7\076\uffd7" +
    "\077\uffd7\100\uffd7\101\uffd7\102\uffd7\103\uffd7\104\uffd7\105" +
    "\uffd7\106\uffd7\107\uffd7\110\uffd7\111\uffd7\112\uffd7\113\uffd7" +
    "\114\uffd7\115\uffd7\116\uffd7\117\uffd7\120\uffd7\121\uffd7\122" +
    "\uffd7\123\uffd7\124\uffd7\125\uffd7\126\uffd7\127\uffd7\130\uffd7" +
    "\131\uffd7\132\uffd7\133\uffd7\134\uffd7\135\uffd7\136\uffd7\137" +
    "\uffd7\140\uffd7\141\uffd7\142\uffd7\143\uffd7\144\uffd7\145\uffd7" +
    "\146\uffd7\147\uffd7\150\uffd7\151\uffd7\152\uffd7\153\uffd7\154" +
    "\uffd7\155\uffd7\156\uffd7\157\uffd7\160\uffd7\161\uffd7\162\uffd7" +
    "\163\uffd7\164\uffd7\165\uffd7\166\uffd7\167\uffd7\170\uffd7\171" +
    "\uffd7\172\uffd7\173\uffd7\175\uffd7\176\uffd7\177\uffd7\200\uffd7" +
    "\201\uffd7\202\uffd7\203\uffd7\204\uffd7\205\uffd7\206\uffd7\207" +
    "\uffd7\210\uffd7\211\uffd7\212\uffd7\213\uffd7\214\uffd7\215\uffd7" +
    "\216\uffd7\217\uffd7\220\uffd7\221\uffd7\222\uffd7\223\uffd7\224" +
    "\uffd7\225\uffd7\226\uffd7\227\uffd7\230\uffd7\231\uffd7\234\uffd7" +
    "\235\uffd7\237\uffd7\241\uffd7\250\uffd7\265\uffd7\270\uffd7\272" +
    "\uffd7\274\uffd7\275\uffd7\276\uffd7\001\002\000\004\233\u018a" +
    "\001\002\000\u0112\016\142\017\163\020\066\030\177\031" +
    "\176\032\174\033\171\034\170\035\027\036\026\037\024" +
    "\040\023\041\022\042\164\043\205\046\160\047\157\050" +
    "\156\051\153\052\152\053\150\054\147\055\145\056\121" +
    "\057\120\060\117\061\116\062\115\063\114\064\112\065" +
    "\110\066\071\067\070\070\067\071\065\072\064\073\063" +
    "\074\062\075\061\076\045\077\044\100\043\101\042\102" +
    "\040\103\037\104\034\105\032\106\223\107\221\110\217" +
    "\111\215\112\202\113\201\114\200\115\175\116\173\117" +
    "\172\120\167\121\166\122\143\123\141\124\137\125\136" +
    "\126\135\127\133\130\132\131\130\132\111\133\107\134" +
    "\106\135\105\136\104\137\103\140\102\141\101\142\060" +
    "\143\057\144\055\145\054\146\053\147\052\150\051\151" +
    "\050\152\033\153\031\154\030\155\025\156\227\157\225" +
    "\160\224\161\222\162\220\163\216\164\214\165\213\166" +
    "\127\167\126\170\125\171\124\172\123\173\122\175\231" +
    "\176\074\177\212\200\113\201\232\202\035\203\036\204" +
    "\041\205\047\206\140\207\206\210\203\211\154\212\146" +
    "\213\230\214\151\215\144\216\226\217\072\220\073\221" +
    "\075\222\076\223\077\224\100\225\056\226\207\227\131" +
    "\230\210\231\211\237\155\265\165\270\161\272\204\274" +
    "\046\276\134\001\002\000\006\234\uffda\235\u018d\001\002" +
    "\000\004\234\u018e\001\002\000\u011c\016\uffdc\017\uffdc\020" +
    "\uffdc\030\uffdc\031\uffdc\032\uffdc\033\uffdc\034\uffdc\035\uffdc" +
    "\036\uffdc\037\uffdc\040\uffdc\041\uffdc\042\uffdc\043\uffdc\046" +
    "\uffdc\047\uffdc\050\uffdc\051\uffdc\052\uffdc\053\uffdc\054\uffdc" +
    "\055\uffdc\056\uffdc\057\uffdc\060\uffdc\061\uffdc\062\uffdc\063" +
    "\uffdc\064\uffdc\065\uffdc\066\uffdc\067\uffdc\070\uffdc\071\uffdc" +
    "\072\uffdc\073\uffdc\074\uffdc\075\uffdc\076\uffdc\077\uffdc\100" +
    "\uffdc\101\uffdc\102\uffdc\103\uffdc\104\uffdc\105\uffdc\106\uffdc" +
    "\107\uffdc\110\uffdc\111\uffdc\112\uffdc\113\uffdc\114\uffdc\115" +
    "\uffdc\116\uffdc\117\uffdc\120\uffdc\121\uffdc\122\uffdc\123\uffdc" +
    "\124\uffdc\125\uffdc\126\uffdc\127\uffdc\130\uffdc\131\uffdc\132" +
    "\uffdc\133\uffdc\134\uffdc\135\uffdc\136\uffdc\137\uffdc\140\uffdc" +
    "\141\uffdc\142\uffdc\143\uffdc\144\uffdc\145\uffdc\146\uffdc\147" +
    "\uffdc\150\uffdc\151\uffdc\152\uffdc\153\uffdc\154\uffdc\155\uffdc" +
    "\156\uffdc\157\uffdc\160\uffdc\161\uffdc\162\uffdc\163\uffdc\164" +
    "\uffdc\165\uffdc\166\uffdc\167\uffdc\170\uffdc\171\uffdc\172\uffdc" +
    "\173\uffdc\175\uffdc\176\uffdc\177\uffdc\200\uffdc\201\uffdc\202" +
    "\uffdc\203\uffdc\204\uffdc\205\uffdc\206\uffdc\207\uffdc\210\uffdc" +
    "\211\uffdc\212\uffdc\213\uffdc\214\uffdc\215\uffdc\216\uffdc\217" +
    "\uffdc\220\uffdc\221\uffdc\222\uffdc\223\uffdc\224\uffdc\225\uffdc" +
    "\226\uffdc\227\uffdc\230\uffdc\231\uffdc\234\uffdc\235\uffdc\237" +
    "\uffdc\241\uffdc\250\uffdc\265\uffdc\270\uffdc\272\uffdc\274\uffdc" +
    "\275\uffdc\276\uffdc\001\002\000\u0112\016\142\017\163\020" +
    "\066\030\177\031\176\032\174\033\171\034\170\035\027" +
    "\036\026\037\024\040\023\041\022\042\164\043\205\046" +
    "\160\047\157\050\156\051\153\052\152\053\150\054\147" +
    "\055\145\056\121\057\120\060\117\061\116\062\115\063" +
    "\114\064\112\065\110\066\071\067\070\070\067\071\065" +
    "\072\064\073\063\074\062\075\061\076\045\077\044\100" +
    "\043\101\042\102\040\103\037\104\034\105\032\106\223" +
    "\107\221\110\217\111\215\112\202\113\201\114\200\115" +
    "\175\116\173\117\172\120\167\121\166\122\143\123\141" +
    "\124\137\125\136\126\135\127\133\130\132\131\130\132" +
    "\111\133\107\134\106\135\105\136\104\137\103\140\102" +
    "\141\101\142\060\143\057\144\055\145\054\146\053\147" +
    "\052\150\051\151\050\152\033\153\031\154\030\155\025" +
    "\156\227\157\225\160\224\161\222\162\220\163\216\164" +
    "\214\165\213\166\127\167\126\170\125\171\124\172\123" +
    "\173\122\175\231\176\074\177\212\200\113\201\232\202" +
    "\035\203\036\204\041\205\047\206\140\207\206\210\203" +
    "\211\154\212\146\213\230\214\151\215\144\216\226\217" +
    "\072\220\073\221\075\222\076\223\077\224\100\225\056" +
    "\226\207\227\131\230\210\231\211\237\155\265\165\270" +
    "\161\272\204\274\046\276\134\001\002\000\004\235\u0190" +
    "\001\002\000\u011c\016\uffd9\017\uffd9\020\uffd9\030\uffd9\031" +
    "\uffd9\032\uffd9\033\uffd9\034\uffd9\035\uffd9\036\uffd9\037\uffd9" +
    "\040\uffd9\041\uffd9\042\uffd9\043\uffd9\046\uffd9\047\uffd9\050" +
    "\uffd9\051\uffd9\052\uffd9\053\uffd9\054\uffd9\055\uffd9\056\uffd9" +
    "\057\uffd9\060\uffd9\061\uffd9\062\uffd9\063\uffd9\064\uffd9\065" +
    "\uffd9\066\uffd9\067\uffd9\070\uffd9\071\uffd9\072\uffd9\073\uffd9" +
    "\074\uffd9\075\uffd9\076\uffd9\077\uffd9\100\uffd9\101\uffd9\102" +
    "\uffd9\103\uffd9\104\uffd9\105\uffd9\106\uffd9\107\uffd9\110\uffd9" +
    "\111\uffd9\112\uffd9\113\uffd9\114\uffd9\115\uffd9\116\uffd9\117" +
    "\uffd9\120\uffd9\121\uffd9\122\uffd9\123\uffd9\124\uffd9\125\uffd9" +
    "\126\uffd9\127\uffd9\130\uffd9\131\uffd9\132\uffd9\133\uffd9\134" +
    "\uffd9\135\uffd9\136\uffd9\137\uffd9\140\uffd9\141\uffd9\142\uffd9" +
    "\143\uffd9\144\uffd9\145\uffd9\146\uffd9\147\uffd9\150\uffd9\151" +
    "\uffd9\152\uffd9\153\uffd9\154\uffd9\155\uffd9\156\uffd9\157\uffd9" +
    "\160\uffd9\161\uffd9\162\uffd9\163\uffd9\164\uffd9\165\uffd9\166" +
    "\uffd9\167\uffd9\170\uffd9\171\uffd9\172\uffd9\173\uffd9\175\uffd9" +
    "\176\uffd9\177\uffd9\200\uffd9\201\uffd9\202\uffd9\203\uffd9\204" +
    "\uffd9\205\uffd9\206\uffd9\207\uffd9\210\uffd9\211\uffd9\212\uffd9" +
    "\213\uffd9\214\uffd9\215\uffd9\216\uffd9\217\uffd9\220\uffd9\221" +
    "\uffd9\222\uffd9\223\uffd9\224\uffd9\225\uffd9\226\uffd9\227\uffd9" +
    "\230\uffd9\231\uffd9\234\uffd9\235\uffd9\237\uffd9\241\uffd9\250" +
    "\uffd9\265\uffd9\270\uffd9\272\uffd9\274\uffd9\275\uffd9\276\uffd9" +
    "\001\002\000\u0112\016\142\017\163\020\066\030\177\031" +
    "\176\032\174\033\171\034\170\035\027\036\026\037\024" +
    "\040\023\041\022\042\164\043\205\046\160\047\157\050" +
    "\156\051\153\052\152\053\150\054\147\055\145\056\121" +
    "\057\120\060\117\061\116\062\115\063\114\064\112\065" +
    "\110\066\071\067\070\070\067\071\065\072\064\073\063" +
    "\074\062\075\061\076\045\077\044\100\043\101\042\102" +
    "\040\103\037\104\034\105\032\106\223\107\221\110\217" +
    "\111\215\112\202\113\201\114\200\115\175\116\173\117" +
    "\172\120\167\121\166\122\143\123\141\124\137\125\136" +
    "\126\135\127\133\130\132\131\130\132\111\133\107\134" +
    "\106\135\105\136\104\137\103\140\102\141\101\142\060" +
    "\143\057\144\055\145\054\146\053\147\052\150\051\151" +
    "\050\152\033\153\031\154\030\155\025\156\227\157\225" +
    "\160\224\161\222\162\220\163\216\164\214\165\213\166" +
    "\127\167\126\170\125\171\124\172\123\173\122\175\231" +
    "\176\074\177\212\200\113\201\232\202\035\203\036\204" +
    "\041\205\047\206\140\207\206\210\203\211\154\212\146" +
    "\213\230\214\151\215\144\216\226\217\072\220\073\221" +
    "\075\222\076\223\077\224\100\225\056\226\207\227\131" +
    "\230\210\231\211\237\155\265\165\270\161\272\204\274" +
    "\046\276\134\001\002\000\004\250\u0193\001\002\000\006" +
    "\022\ufff2\232\ufff2\001\002\000\012\004\u0126\005\u0128\006" +
    "\u0129\007\u012a\001\002\000\006\015\u0196\243\uffee\001\002" +
    "\000\004\272\015\001\002\000\004\243\uffed\001\002\000" +
    "\006\026\u01a5\027\u01a6\001\002\000\004\272\u019a\001\002" +
    "\000\004\242\u019b\001\002\000\006\243\u019c\272\015\001" +
    "\002\000\004\247\u01a2\001\002\000\004\243\u019e\001\002" +
    "\000\004\247\u019f\001\002\000\u0112\016\142\017\163\020" +
    "\066\030\177\031\176\032\174\033\171\034\170\035\027" +
    "\036\026\037\024\040\023\041\022\042\164\043\205\046" +
    "\160\047\157\050\156\051\153\052\152\053\150\054\147" +
    "\055\145\056\121\057\120\060\117\061\116\062\115\063" +
    "\114\064\112\065\110\066\071\067\070\070\067\071\065" +
    "\072\064\073\063\074\062\075\061\076\045\077\044\100" +
    "\043\101\042\102\040\103\037\104\034\105\032\106\223" +
    "\107\221\110\217\111\215\112\202\113\201\114\200\115" +
    "\175\116\173\117\172\120\167\121\166\122\143\123\141" +
    "\124\137\125\136\126\135\127\133\130\132\131\130\132" +
    "\111\133\107\134\106\135\105\136\104\137\103\140\102" +
    "\141\101\142\060\143\057\144\055\145\054\146\053\147" +
    "\052\150\051\151\050\152\033\153\031\154\030\155\025" +
    "\156\227\157\225\160\224\161\222\162\220\163\216\164" +
    "\214\165\213\166\127\167\126\170\125\171\124\172\123" +
    "\173\122\175\231\176\074\177\212\200\113\201\232\202" +
    "\035\203\036\204\041\205\047\206\140\207\206\210\203" +
    "\211\154\212\146\213\230\214\151\215\144\216\226\217" +
    "\072\220\073\221\075\222\076\223\077\224\100\225\056" +
    "\226\207\227\131\230\210\231\211\237\155\265\165\270" +
    "\161\272\204\274\046\276\134\001\002\000\004\250\u01a1" +
    "\001\002\000\006\022\uffef\232\uffef\001\002\000\u0112\016" +
    "\142\017\163\020\066\030\177\031\176\032\174\033\171" +
    "\034\170\035\027\036\026\037\024\040\023\041\022\042" +
    "\164\043\205\046\160\047\157\050\156\051\153\052\152" +
    "\053\150\054\147\055\145\056\121\057\120\060\117\061" +
    "\116\062\115\063\114\064\112\065\110\066\071\067\070" +
    "\070\067\071\065\072\064\073\063\074\062\075\061\076" +
    "\045\077\044\100\043\101\042\102\040\103\037\104\034" +
    "\105\032\106\223\107\221\110\217\111\215\112\202\113" +
    "\201\114\200\115\175\116\173\117\172\120\167\121\166" +
    "\122\143\123\141\124\137\125\136\126\135\127\133\130" +
    "\132\131\130\132\111\133\107\134\106\135\105\136\104" +
    "\137\103\140\102\141\101\142\060\143\057\144\055\145" +
    "\054\146\053\147\052\150\051\151\050\152\033\153\031" +
    "\154\030\155\025\156\227\157\225\160\224\161\222\162" +
    "\220\163\216\164\214\165\213\166\127\167\126\170\125" +
    "\171\124\172\123\173\122\175\231\176\074\177\212\200" +
    "\113\201\232\202\035\203\036\204\041\205\047\206\140" +
    "\207\206\210\203\211\154\212\146\213\230\214\151\215" +
    "\144\216\226\217\072\220\073\221\075\222\076\223\077" +
    "\224\100\225\056\226\207\227\131\230\210\231\211\237" +
    "\155\265\165\270\161\272\204\274\046\276\134\001\002" +
    "\000\004\250\u01a4\001\002\000\006\022\ufff1\232\ufff1\001" +
    "\002\000\004\242\u01ab\001\002\000\004\247\u01a8\001\002" +
    "\000\004\021\ufffd\001\002\000\u0112\016\142\017\163\020" +
    "\066\030\177\031\176\032\174\033\171\034\170\035\027" +
    "\036\026\037\024\040\023\041\022\042\164\043\205\046" +
    "\160\047\157\050\156\051\153\052\152\053\150\054\147" +
    "\055\145\056\121\057\120\060\117\061\116\062\115\063" +
    "\114\064\112\065\110\066\071\067\070\070\067\071\065" +
    "\072\064\073\063\074\062\075\061\076\045\077\044\100" +
    "\043\101\042\102\040\103\037\104\034\105\032\106\223" +
    "\107\221\110\217\111\215\112\202\113\201\114\200\115" +
    "\175\116\173\117\172\120\167\121\166\122\143\123\141" +
    "\124\137\125\136\126\135\127\133\130\132\131\130\132" +
    "\111\133\107\134\106\135\105\136\104\137\103\140\102" +
    "\141\101\142\060\143\057\144\055\145\054\146\053\147" +
    "\052\150\051\151\050\152\033\153\031\154\030\155\025" +
    "\156\227\157\225\160\224\161\222\162\220\163\216\164" +
    "\214\165\213\166\127\167\126\170\125\171\124\172\123" +
    "\173\122\175\231\176\074\177\212\200\113\201\232\202" +
    "\035\203\036\204\041\205\047\206\140\207\206\210\203" +
    "\211\154\212\146\213\230\214\151\215\144\216\226\217" +
    "\072\220\073\221\075\222\076\223\077\224\100\225\056" +
    "\226\207\227\131\230\210\231\211\237\155\265\165\270" +
    "\161\272\204\274\046\276\134\001\002\000\004\250\u01aa" +
    "\001\002\000\004\021\ufff5\001\002\000\004\243\u01ac\001" +
    "\002\000\004\252\u01ad\001\002\000\004\027\u01a6\001\002" +
    "\000\004\021\ufffc\001\002\000\004\002\001\001\002\000" +
    "\004\247\u01b1\001\002\000\u0114\016\142\017\163\020\066" +
    "\030\177\031\176\032\174\033\171\034\170\035\027\036" +
    "\026\037\024\040\023\041\022\042\164\043\205\046\160" +
    "\047\157\050\156\051\153\052\152\053\150\054\147\055" +
    "\145\056\121\057\120\060\117\061\116\062\115\063\114" +
    "\064\112\065\110\066\071\067\070\070\067\071\065\072" +
    "\064\073\063\074\062\075\061\076\045\077\044\100\043" +
    "\101\042\102\040\103\037\104\034\105\032\106\223\107" +
    "\221\110\217\111\215\112\202\113\201\114\200\115\175" +
    "\116\173\117\172\120\167\121\166\122\143\123\141\124" +
    "\137\125\136\126\135\127\133\130\132\131\130\132\111" +
    "\133\107\134\106\135\105\136\104\137\103\140\102\141" +
    "\101\142\060\143\057\144\055\145\054\146\053\147\052" +
    "\150\051\151\050\152\033\153\031\154\030\155\025\156" +
    "\227\157\225\160\224\161\222\162\220\163\216\164\214" +
    "\165\213\166\127\167\126\170\125\171\124\172\123\173" +
    "\122\175\231\176\074\177\212\200\113\201\232\202\035" +
    "\203\036\204\041\205\047\206\140\207\206\210\203\211" +
    "\154\212\146\213\230\214\151\215\144\216\226\217\072" +
    "\220\073\221\075\222\076\223\077\224\100\225\056\226" +
    "\207\227\131\230\210\231\211\237\155\250\u01b2\265\165" +
    "\270\161\272\204\274\046\276\134\001\002\000\004\002" +
    "\ufff3\001\002\000\004\250\u01b4\001\002\000\004\002\ufff4" +
    "\001\002\000\004\242\u01b7\001\002\000\004\021\uffff\001" +
    "\002\000\004\243\u01b8\001\002\000\004\252\u01b9\001\002" +
    "\000\004\027\u01a6\001\002\000\004\021\ufffe\001\002\000" +
    "\u0100\030\177\031\176\032\174\033\171\034\170\035\027" +
    "\036\026\037\024\040\023\041\022\042\164\043\205\046" +
    "\160\047\157\050\156\051\153\052\152\053\150\054\147" +
    "\055\145\056\121\057\120\060\117\061\116\062\115\063" +
    "\114\064\112\065\110\066\071\067\070\070\067\071\065" +
    "\072\064\073\063\074\062\075\061\076\045\077\044\100" +
    "\043\101\042\102\040\103\037\104\034\105\032\106\223" +
    "\107\221\110\217\111\215\112\202\113\201\114\200\115" +
    "\175\116\173\117\172\120\167\121\166\122\143\123\141" +
    "\124\137\125\136\126\135\127\133\130\132\131\130\132" +
    "\111\133\107\134\106\135\105\136\104\137\103\140\102" +
    "\141\101\142\060\143\057\144\055\145\054\146\053\147" +
    "\052\150\051\151\050\152\033\153\031\154\030\155\025" +
    "\156\227\157\225\160\224\161\222\162\220\163\216\164" +
    "\214\165\213\166\127\167\126\170\125\171\124\172\123" +
    "\173\122\175\231\176\074\177\212\200\113\201\232\202" +
    "\035\203\036\204\041\205\047\206\140\207\206\210\203" +
    "\211\154\212\146\213\230\214\151\215\144\216\226\217" +
    "\072\220\073\221\075\222\076\223\077\224\100\225\056" +
    "\226\207\227\131\230\210\231\211\001\002\000\u0114\016" +
    "\142\017\163\020\066\030\177\031\176\032\174\033\171" +
    "\034\170\035\027\036\026\037\024\040\023\041\022\042" +
    "\164\043\205\046\160\047\157\050\156\051\153\052\152" +
    "\053\150\054\147\055\145\056\121\057\120\060\117\061" +
    "\116\062\115\063\114\064\112\065\110\066\071\067\070" +
    "\070\067\071\065\072\064\073\063\074\062\075\061\076" +
    "\045\077\044\100\043\101\042\102\040\103\037\104\034" +
    "\105\032\106\223\107\221\110\217\111\215\112\202\113" +
    "\201\114\200\115\175\116\173\117\172\120\167\121\166" +
    "\122\143\123\141\124\137\125\136\126\135\127\133\130" +
    "\132\131\130\132\111\133\107\134\106\135\105\136\104" +
    "\137\103\140\102\141\101\142\060\143\057\144\055\145" +
    "\054\146\053\147\052\150\051\151\050\152\033\153\031" +
    "\154\030\155\025\156\227\157\225\160\224\161\222\162" +
    "\220\163\216\164\214\165\213\166\127\167\126\170\125" +
    "\171\124\172\123\173\122\175\231\176\074\177\212\200" +
    "\113\201\232\202\035\203\036\204\041\205\047\206\140" +
    "\207\206\210\203\211\154\212\146\213\230\214\151\215" +
    "\144\216\226\217\072\220\073\221\075\222\076\223\077" +
    "\224\100\225\056\226\207\227\131\230\210\231\211\237" +
    "\155\250\u01c3\265\165\270\161\272\204\274\046\276\134" +
    "\001\002\000\004\253\u01be\001\002\000\006\024\u01c1\025" +
    "\u01bf\001\002\000\004\252\ufff6\001\002\000\004\252\u01c2" +
    "\001\002\000\004\252\ufff7\001\002\000\u0114\016\ufff9\017" +
    "\ufff9\020\ufff9\030\ufff9\031\ufff9\032\ufff9\033\ufff9\034\ufff9" +
    "\035\ufff9\036\ufff9\037\ufff9\040\ufff9\041\ufff9\042\ufff9\043" +
    "\ufff9\046\ufff9\047\ufff9\050\ufff9\051\ufff9\052\ufff9\053\ufff9" +
    "\054\ufff9\055\ufff9\056\ufff9\057\ufff9\060\ufff9\061\ufff9\062" +
    "\ufff9\063\ufff9\064\ufff9\065\ufff9\066\ufff9\067\ufff9\070\ufff9" +
    "\071\ufff9\072\ufff9\073\ufff9\074\ufff9\075\ufff9\076\ufff9\077" +
    "\ufff9\100\ufff9\101\ufff9\102\ufff9\103\ufff9\104\ufff9\105\ufff9" +
    "\106\ufff9\107\ufff9\110\ufff9\111\ufff9\112\ufff9\113\ufff9\114" +
    "\ufff9\115\ufff9\116\ufff9\117\ufff9\120\ufff9\121\ufff9\122\ufff9" +
    "\123\ufff9\124\ufff9\125\ufff9\126\ufff9\127\ufff9\130\ufff9\131" +
    "\ufff9\132\ufff9\133\ufff9\134\ufff9\135\ufff9\136\ufff9\137\ufff9" +
    "\140\ufff9\141\ufff9\142\ufff9\143\ufff9\144\ufff9\145\ufff9\146" +
    "\ufff9\147\ufff9\150\ufff9\151\ufff9\152\ufff9\153\ufff9\154\ufff9" +
    "\155\ufff9\156\ufff9\157\ufff9\160\ufff9\161\ufff9\162\ufff9\163" +
    "\ufff9\164\ufff9\165\ufff9\166\ufff9\167\ufff9\170\ufff9\171\ufff9" +
    "\172\ufff9\173\ufff9\175\ufff9\176\ufff9\177\ufff9\200\ufff9\201" +
    "\ufff9\202\ufff9\203\ufff9\204\ufff9\205\ufff9\206\ufff9\207\ufff9" +
    "\210\ufff9\211\ufff9\212\ufff9\213\ufff9\214\ufff9\215\ufff9\216" +
    "\ufff9\217\ufff9\220\ufff9\221\ufff9\222\ufff9\223\ufff9\224\ufff9" +
    "\225\ufff9\226\ufff9\227\ufff9\230\ufff9\231\ufff9\237\ufff9\250" +
    "\ufff9\265\ufff9\270\ufff9\272\ufff9\274\ufff9\276\ufff9\001\002" +
    "\000\006\026\ufffb\027\ufffb\001\002\000\006\253\u01c7\255" +
    "\237\001\002\000\004\250\u01c6\001\002\000\006\026\ufffa" +
    "\027\ufffa\001\002\000\132\024\u01c1\025\u01bf\030\252\031" +
    "\251\032\250\033\247\034\246\112\242\113\240\114\310" +
    "\115\305\116\304\117\301\120\300\121\277\122\273\123" +
    "\271\124\270\125\267\126\266\127\265\130\264\131\263" +
    "\132\262\133\261\134\260\135\257\136\256\137\255\140" +
    "\254\141\253\142\245\143\244\144\243\145\241\146\311" +
    "\147\306\150\303\151\302\152\276\153\275\154\274\155" +
    "\272\271\313\001\002\000\004\252\u01c9\001\002\000\u0114" +
    "\016\ufff8\017\ufff8\020\ufff8\030\ufff8\031\ufff8\032\ufff8\033" +
    "\ufff8\034\ufff8\035\ufff8\036\ufff8\037\ufff8\040\ufff8\041\ufff8" +
    "\042\ufff8\043\ufff8\046\ufff8\047\ufff8\050\ufff8\051\ufff8\052" +
    "\ufff8\053\ufff8\054\ufff8\055\ufff8\056\ufff8\057\ufff8\060\ufff8" +
    "\061\ufff8\062\ufff8\063\ufff8\064\ufff8\065\ufff8\066\ufff8\067" +
    "\ufff8\070\ufff8\071\ufff8\072\ufff8\073\ufff8\074\ufff8\075\ufff8" +
    "\076\ufff8\077\ufff8\100\ufff8\101\ufff8\102\ufff8\103\ufff8\104" +
    "\ufff8\105\ufff8\106\ufff8\107\ufff8\110\ufff8\111\ufff8\112\ufff8" +
    "\113\ufff8\114\ufff8\115\ufff8\116\ufff8\117\ufff8\120\ufff8\121" +
    "\ufff8\122\ufff8\123\ufff8\124\ufff8\125\ufff8\126\ufff8\127\ufff8" +
    "\130\ufff8\131\ufff8\132\ufff8\133\ufff8\134\ufff8\135\ufff8\136" +
    "\ufff8\137\ufff8\140\ufff8\141\ufff8\142\ufff8\143\ufff8\144\ufff8" +
    "\145\ufff8\146\ufff8\147\ufff8\150\ufff8\151\ufff8\152\ufff8\153" +
    "\ufff8\154\ufff8\155\ufff8\156\ufff8\157\ufff8\160\ufff8\161\ufff8" +
    "\162\ufff8\163\ufff8\164\ufff8\165\ufff8\166\ufff8\167\ufff8\170" +
    "\ufff8\171\ufff8\172\ufff8\173\ufff8\175\ufff8\176\ufff8\177\ufff8" +
    "\200\ufff8\201\ufff8\202\ufff8\203\ufff8\204\ufff8\205\ufff8\206" +
    "\ufff8\207\ufff8\210\ufff8\211\ufff8\212\ufff8\213\ufff8\214\ufff8" +
    "\215\ufff8\216\ufff8\217\ufff8\220\ufff8\221\ufff8\222\ufff8\223" +
    "\ufff8\224\ufff8\225\ufff8\226\ufff8\227\ufff8\230\ufff8\231\ufff8" +
    "\237\ufff8\250\ufff8\265\ufff8\270\ufff8\272\ufff8\274\ufff8\276" +
    "\ufff8\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01c8\000\004\003\003\001\001\000\002\001\001\000" +
    "\010\004\007\006\006\010\010\001\001\000\002\001\001" +
    "\000\004\007\u01b5\001\001\000\004\005\u01ae\001\001\000" +
    "\004\006\u0197\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\016\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\012\233" +
    "\014\232\017\161\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\012\u0134\014\232\017\161\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\015\313\001\001\000\004\015\306\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\020\343\026\340\032\347\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\u011a\001\001\000\002\001" +
    "\001\000\006\020\366\032\367\001\001\000\002\001\001" +
    "\000\004\030\355\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\020\360\032\361\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\030\u010c\001\001\000\004\030\370\001\001" +
    "\000\006\020\371\032\372\001\001\000\012\030\377\031" +
    "\373\032\376\033\u0108\001\001\000\012\030\377\031\373" +
    "\032\376\033\374\001\001\000\006\030\u0105\032\u0106\001" +
    "\001\000\004\030\u0103\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\u0100\032\u0101\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\032\u0104" +
    "\001\001\000\002\001\001\000\004\020\u0107\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\030\u0103\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\u010d\001\001\000\006\030\u0110\031\u010f\001\001" +
    "\000\002\001\001\000\004\030\u0105\001\001\000\006\020" +
    "\u0100\032\u0111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\020\u011b\001\001\000\006\030\u011d\031" +
    "\u011e\001\001\000\002\001\001\000\004\020\u0100\001\001" +
    "\000\004\030\u0105\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\u0126\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\u012e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\u0138\020\u0137\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u013b\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\u013e\001\001\000" +
    "\002\001\001\000\010\012\u0140\014\232\017\161\001\001" +
    "\000\002\001\001\000\010\012\u0142\014\232\017\161\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\u0146\001\001\000\002\001\001\000\010\012" +
    "\u0148\014\232\017\161\001\001\000\002\001\001\000\010" +
    "\012\u014a\014\232\017\161\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\u014e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\015\u015d\020\u015b\021\u015c\022\u0158\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\023\u0165\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\015\u015d\021\u0169\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\023\u016b\024\u016a\001\001" +
    "\000\002\001\001\000\006\015\u015d\021\u016c\001\001\000" +
    "\006\023\u016b\024\u016d\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\012\u0170\014\232\017\161\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\012\u0176\014\232\017" +
    "\161\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\015\u017f\021\u015c\022\u017e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\u0182\014\232\017\161\001\001\000\004" +
    "\035\u0183\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\012\u0186\014\232\017\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\012\u018a\014" +
    "\232\017\161\001\001\000\004\034\u018b\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\012\u018e\014\232\017" +
    "\161\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\012\u0191\014\232\017\161\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u0194\001\001\000\002\001\001" +
    "\000\004\027\u0196\001\001\000\002\001\001\000\004\007" +
    "\u01a6\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\u019c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\012\u019f\014\232\017\161\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\012\u01a2\014" +
    "\232\017\161\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\012\u01a8\014\232\017\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u01ad\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\012\u01b2\014\232\017\161\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u01b9\001\001\000\002\001\001" +
    "\000\006\013\u01bb\014\u01bc\001\001\000\010\012\u01c4\014" +
    "\u01c3\017\161\001\001\000\002\001\001\000\004\016\u01bf" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\313\016" +
    "\u01c7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	static TablaDatos tabla = new TablaDatos();
	static int estado;
	StringBuffer m = new StringBuffer("");
    static StringBuffer []vec=new StringBuffer[10];
    static int i=0;
//*******************************************
   public void Documenta(int tipo)
   { m.append("Error de Sintaxis No."+tipo);
     ManejoDeErrores objeto=new ManejoDeErrores();
     String tip=objeto.Errores(tipo);
	  m.append("\nMensaje --> "+tip+"\n");
      vec[i++]=m;

   }
//*******************************************
   public void syntax_error(Symbol cur_token)
   {
   	estado=((Symbol)stack.peek()).parse_state;
   	  ManejoDeErrores obj = new ManejoDeErrores();
      String m=obj.analizaToken(cur_token);
      System.err.println("\n\nSimbolo actual analizado: "+m+"-->"+cur_token);
      //System.err.println("\n\nSimbolo actual analizado: "+cur_token);

   }
//******************************************
   public void report_error(String message, Object info)
   { if (info instanceof java_cup.runtime.Symbol)
     { java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
       if (s.left >= 0)
       { m.append("Linea "+ (s.left +1));
         if (s.right >= 0)
          m.append(", Columna "+(s.right)+"\n");
       }
     }
   }
/**************METODO MAIN ********/
public static void main(String[] arg)
 	{
	  /* Crea un objeto parser */
	  parser parserObj = new parser();
	  /* Asigna el Scanner */
	  Yylex miAnalizadorLexico = new Yylex(new InputStreamReader(System.in));
	  parserObj.setScanner(miAnalizadorLexico);
	  try{
		parserObj.parse();
		tabla.imprimir();
	  }
catch(Exception x){
	  parserObj.Documenta(estado);
  	  for(int j=0;j<i;j++)
		System.out.println(vec[j]);

	}

}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parser$actions {



methodsTable tablaMetodos = new methodsTable();
String codigo="";
String miCodigo="";
String errores="";
String retardos="";
String auxiliar="";
String losMetodos="";
String aux="";
String auxno="";
String aux2="";
String auxsw="";
String p2="";
String p1="";
String aux3="";
frijol f2;
String cadena_condiciones=" ";
String cadena_tipo="";
String cadena_parametros="";
String encadenamst="";

	private static Stack<String>p = new Stack<String>();
	private static Stack<String>pila2 = new Stack<String>();

	private static int actualTmp=0;

	private static String nuevaTmp() {
		return "tmp"+(++actualTmp);
	}

	private static int actualEtq=0;

	private static String nuevaEtq() {
		return "etqY"+(++actualEtq);
	}



	private String generarTerceto(String terceto) {
		String tmp = nuevaTmp();
		System.out.println("Terceto: "+tmp + terceto);
		return tmp;
	}

	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.etqVerdad = nuevaEtq();
		etqs.etqFalso = nuevaEtq();
		etqs.condicion = Rvalor1+condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
	System.out.println("\tif "+ Rvalor1 + condicion + Rvalor2 +" goto etq Vd "+ etqs.etqVerdad);
	//RESULT=Rvalor1 + condicion + Rvalor2;
    System.out.println("\tgoto etq Falso: "+ etqs.etqFalso);
		return etqs;
	}

	private BloqueCondicion generarCondicion(String condicion, String Rvalor2){
		BloqueCondicion etqs = new BloqueCondicion();
		etqs.condicion = condicion+Rvalor2;
		auxiliar="";
		/*
		*System.out.println("\t if" + Rvalor1 + condicion + Rvalor2 + "");
		*/
		return etqs;
	}
	private BloqueCondicion generarCondicion( String Rvalor1, String condicion, String Rvalor2,String extra){
		BloqueCondicion etqs = new BloqueCondicion();

		etqs.condicion = Rvalor1+condicion+Rvalor2+extra;
		auxiliar="";
		return etqs;
	}




  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // puertost ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // puertost ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // puertost ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"";     
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // puertost ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // puertost ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd7+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // puertost ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // puertost ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // puertost ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // puertost ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // puertost ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd2+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // puertost ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // puertost ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // puertost ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // puertost ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc6+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // puertost ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc5+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // puertost ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // puertost ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc3+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // puertost ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // puertost ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc1+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // puertost ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"";    
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // puertost ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // puertost ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // puertost ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb5+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // puertost ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // puertost ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // puertost ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // puertost ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"";   
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // puertost ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // puertost ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa7+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // puertost ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"";  
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // puertost ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // puertost ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa4+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // puertost ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // puertost ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // puertost ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // puertost ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // puertost ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // puertost ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // puertost ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"";
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // puertost ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // puertost ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+""; 
              CUP$parser$result = new java_cup.runtime.Symbol(11/*puertost*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // puertos ::= ADCON1_VCFG0 
            {
              String RESULT = null;
		int adcg0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg0 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // puertos ::= ADCON1_VCFG1 
            {
              String RESULT = null;
		int adcg1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcg1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcg1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcg1 + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // puertos ::= ADCON1_ADFM 
            {
              String RESULT = null;
		int adc1fmleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adc1fmright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adc1fm = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adc1fm + "=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // puertos ::= ADCON0_ADON 
            {
              String RESULT = null;
		int adcadonleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcadonright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcadon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcadon+ " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // puertos ::= ADCON0_GO 
            {
              String RESULT = null;
		int adcgoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcgoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcgo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcgo + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // puertos ::= ADCON0_CHS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // puertos ::= ADCON0_CHS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // puertos ::= ADCON0_CHS2 
            {
              String RESULT = null;
		int adcs2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // puertos ::= ADCON0_CHS3 
            {
              String RESULT = null;
		int adcs3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // puertos ::= ADCON0_ADCS0 
            {
              String RESULT = null;
		int adcs0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // puertos ::= ADCON0_ADCS1 
            {
              String RESULT = null;
		int adcs1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int adcs1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object adcs1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = adcs1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // puertos ::= OPTIONREG_RBPU 
            {
              String RESULT = null;
		int oprbpuleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oprbpuright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oprbpu = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oprbpu + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // puertos ::= OPTIONREG_PS0 
            {
              String RESULT = null;
		int opps0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // puertos ::= OPTIONREG_PS1 
            {
              String RESULT = null;
		int opps1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // puertos ::= OPTIONREG_PS2 
            {
              String RESULT = null;
		int opps2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opps2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // puertos ::= OPTIONREG_PSA 
            {
              String RESULT = null;
		int oppsaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object oppsa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = oppsa + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // puertos ::= OPTIONREG_T0SE 
            {
              String RESULT = null;
		int opt0seleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0seright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0se = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0se + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // puertos ::= OPTIONREG_T0CS 
            {
              String RESULT = null;
		int opt0csleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opt0csright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opt0cs = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opt0cs + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // puertos ::= OPTIONREG_PS 
            {
              String RESULT = null;
		int oppsleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int oppsright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opps = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opps + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // puertos ::= OPTIONREG_INTEDG 
            {
              String RESULT = null;
		int opintedgleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int opintedgright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object opintedg = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = opintedg + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // puertos ::= INTCONRBIF 
            {
              String RESULT = null;
		int intrbifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbif = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbif + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // puertos ::= INTCONINTF 
            {
              String RESULT = null;
		int intintfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intintfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intintf = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intintf + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // puertos ::= INTCONT0IF 
            {
              String RESULT = null;
		int intt0ifleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ifright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0if = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0if + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // puertos ::= INTCONRBIE 
            {
              String RESULT = null;
		int intrbieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intrbieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intrbie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intrbie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // puertos ::= INTCONINTE 
            {
              String RESULT = null;
		int intinteleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intinteright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intinte = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intinte + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // puertos ::= INTCONT0IE 
            {
              String RESULT = null;
		int intt0ieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intt0ieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intt0ie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intt0ie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // puertos ::= INTCONPEIE 
            {
              String RESULT = null;
		int intpeieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intpeieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intpeie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intpeie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // puertos ::= INTCONGIE 
            {
              String RESULT = null;
		int intgieleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intgieright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intgie = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=intgie + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // puertos ::= ANSELH5 
            {
              String RESULT = null;
		int anselh5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // puertos ::= ANSELH4 
            {
              String RESULT = null;
		int anselh4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // puertos ::= ANSELH3 
            {
              String RESULT = null;
		int anselh3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // puertos ::= ANSELH2 
            {
              String RESULT = null;
		int anselh2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // puertos ::= ANSELH1 
            {
              String RESULT = null;
		int anselh1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // puertos ::= ANSELH0 
            {
              String RESULT = null;
		int anselh0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselh0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=anselh0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // puertos ::= ANSEL7 
            {
              String RESULT = null;
		int ansel7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel7 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // puertos ::= ANSEL6 
            {
              String RESULT = null;
		int ansel6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel6 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // puertos ::= ANSEL5 
            {
              String RESULT = null;
		int ansel5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel5 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // puertos ::= ANSEL4 
            {
              String RESULT = null;
		int ansel4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel4 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // puertos ::= ANSEL3 
            {
              String RESULT = null;
		int ansel3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel3 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // puertos ::= ANSEL2 
            {
              String RESULT = null;
		int ansel2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel2 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // puertos ::= ANSEL1 
            {
              String RESULT = null;
		int ansel1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel1 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // puertos ::= ANSEL0 
            {
              String RESULT = null;
		int ansel0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ansel0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ansel0 + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // puertos ::= PE3 
            {
              String RESULT = null;
		int pe3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe3+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // puertos ::= PE2 
            {
              String RESULT = null;
		int pe2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe2+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // puertos ::= PE1 
            {
              String RESULT = null;
		int pe1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe1+"=";     
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // puertos ::= PE0 
            {
              String RESULT = null;
		int pe0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pe0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pe0+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // puertos ::= PD7 
            {
              String RESULT = null;
		int pd7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pd7+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // puertos ::= PD6 
            {
              String RESULT = null;
		int pd6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // puertos ::= PD5 
            {
              String RESULT = null;
		int pd5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // puertos ::= PD4 
            {
              String RESULT = null;
		int pd4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd4+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // puertos ::= PD3 
            {
              String RESULT = null;
		int pd3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // puertos ::= PD2 
            {
              String RESULT = null;
		int pd2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		   RESULT=pd2+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // puertos ::= PD1 
            {
              String RESULT = null;
		int pd1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pd1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // puertos ::= PD0 
            {
              String RESULT = null;
		int pd0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pd0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pd0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // puertos ::= PC7 
            {
              String RESULT = null;
		int pc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		     RESULT=pc7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // puertos ::= PC6 
            {
              String RESULT = null;
		int pc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			 RESULT=pc6+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // puertos ::= PC5 
            {
              String RESULT = null;
		int pc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc5+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // puertos ::= PC4 
            {
              String RESULT = null;
		int pc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // puertos ::= PC3 
            {
              String RESULT = null;
		int pc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc3+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // puertos ::= PC2 
            {
              String RESULT = null;
		int pc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc2+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // puertos ::= PC1 
            {
              String RESULT = null;
		int pc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  RESULT=pc1+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // puertos ::= PC0 
            {
              String RESULT = null;
		int pc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pc0+"=";    
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // puertos ::= PB7 
            {
              String RESULT = null;
		int pb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // puertos ::= PB6 
            {
              String RESULT = null;
		int pb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // puertos ::= PB5 
            {
              String RESULT = null;
		int pb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			  RESULT=pb5+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // puertos ::= PB4 
            {
              String RESULT = null;
		int pb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb4+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // puertos ::= PB3 
            {
              String RESULT = null;
		int pb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb3+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // puertos ::= PB2 
            {
              String RESULT = null;
		int pb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb2+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // puertos ::= PB1 
            {
              String RESULT = null;
		int pb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb1+"=";   
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // puertos ::= PB0 
            {
              String RESULT = null;
		int pb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pb0+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // puertos ::= PA7 
            {
              String RESULT = null;
		int pa7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 	RESULT=pa7+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // puertos ::= PA6 
            {
              String RESULT = null;
		int pa6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa6+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // puertos ::= PA5 
            {
              String RESULT = null;
		int pa5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // puertos ::= PA4 
            {
              String RESULT = null;
		int pa4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		  	RESULT=pa4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // puertos ::= PA3 
            {
              String RESULT = null;
		int pa3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // puertos ::= PA2 
            {
              String RESULT = null;
		int pa2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // puertos ::= PA1 
            {
              String RESULT = null;
		int pa1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // puertos ::= PA0 
            {
              String RESULT = null;
		int pa0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pa0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=pa0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // puertos ::= TE3 
            {
              String RESULT = null;
		int te3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // puertos ::= TE2 
            {
              String RESULT = null;
		int te2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // puertos ::= TE1 
            {
              String RESULT = null;
		int te1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // puertos ::= TE0 
            {
              String RESULT = null;
		int te0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int te0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=te0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // puertos ::= TD7 
            {
              String RESULT = null;
		int td7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // puertos ::= TD6 
            {
              String RESULT = null;
		int td6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // puertos ::= TD5 
            {
              String RESULT = null;
		int td5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // puertos ::= TD4 
            {
              String RESULT = null;
		int td4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // puertos ::= TD3 
            {
              String RESULT = null;
		int td3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // puertos ::= TD2 
            {
              String RESULT = null;
		int td2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // puertos ::= TD1 
            {
              String RESULT = null;
		int td1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // puertos ::= TD0 
            {
              String RESULT = null;
		int td0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int td0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=td0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // puertos ::= TC7 
            {
              String RESULT = null;
		int tc7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // puertos ::= TC6 
            {
              String RESULT = null;
		int tc6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // puertos ::= TC5 
            {
              String RESULT = null;
		int tc5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // puertos ::= TC4 
            {
              String RESULT = null;
		int tc4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // puertos ::= TC3 
            {
              String RESULT = null;
		int tc3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // puertos ::= TC2 
            {
              String RESULT = null;
		int tc2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // puertos ::= TC1 
            {
              String RESULT = null;
		int tc1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // puertos ::= TC0 
            {
              String RESULT = null;
		int tc0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tc0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tc0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // puertos ::= TB7 
            {
              String RESULT = null;
		int tb7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // puertos ::= TB6 
            {
              String RESULT = null;
		int tb6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // puertos ::= TB5 
            {
              String RESULT = null;
		int tb5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // puertos ::= TB4 
            {
              String RESULT = null;
		int tb4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // puertos ::= TB3 
            {
              String RESULT = null;
		int tb3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // puertos ::= TB2 
            {
              String RESULT = null;
		int tb2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // puertos ::= TB1 
            {
              String RESULT = null;
		int tb1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // puertos ::= TB0 
            {
              String RESULT = null;
		int tb0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tb0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=tb0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // puertos ::= TA7 
            {
              String RESULT = null;
		int ta7left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta7right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta7+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // puertos ::= TA6 
            {
              String RESULT = null;
		int ta6left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta6right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta6+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // puertos ::= TA5 
            {
              String RESULT = null;
		int ta5left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta5right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta5+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // puertos ::= TA4 
            {
              String RESULT = null;
		int ta4left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta4right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta4+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // puertos ::= TA3 
            {
              String RESULT = null;
		int ta3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta3+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // puertos ::= TA2 
            {
              String RESULT = null;
		int ta2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta2+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // puertos ::= TA1 
            {
              String RESULT = null;
		int ta1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta1+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // puertos ::= TA0 
            {
              String RESULT = null;
		int ta0left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int ta0right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta0 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
			RESULT=ta0+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // puertos ::= INTCON 
            {
              String RESULT = null;
		int intconleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int intconright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object intcon = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = intcon + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // puertos ::= ANSELH 
            {
              String RESULT = null;
		int anselhleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselhright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object anselh = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = anselh + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // puertos ::= ANSEL 
            {
              String RESULT = null;
		int anselleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int anselright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ansel = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT = ansel + " = ";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // puertos ::= TE 
            {
              String RESULT = null;
		int teleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int teright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object te = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=te+"=";  
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // puertos ::= TD 
            {
              String RESULT = null;
		int tdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object td = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=td+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // puertos ::= TC 
            {
              String RESULT = null;
		int tcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=tc+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // puertos ::= TB 
            {
              String RESULT = null;
		int tbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object tb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=tb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // puertos ::= TA 
            {
              String RESULT = null;
		int taleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int taright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object ta = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=ta+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // puertos ::= PE 
            {
              String RESULT = null;
		int peleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int peright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pe = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=pe+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // puertos ::= PD 
            {
              String RESULT = null;
		int pdleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pdright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pd = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pd+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // puertos ::= PC 
            {
              String RESULT = null;
		int pcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pc = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pc+"=";
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // puertos ::= PB 
            {
              String RESULT = null;
		int pbleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pbright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pb = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pb+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // puertos ::= PA 
            {
              String RESULT = null;
		int paleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int paright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object pa = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		 RESULT=pa+"="; 
              CUP$parser$result = new java_cup.runtime.Symbol(10/*puertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // exprtipos ::= CTELOGICA 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // exprtipos ::= CARACTER 
            {
              String RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+b;
		
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // exprtipos ::= NUMREAL 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object n = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		 
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // exprtipos ::= NUMERO 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		 	RESULT=""+n;
		  
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // exprtipos ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			System.out.println("Esto es un identificador= "+id);
			 DatoSimbolo s;
			 if ((s = parser.tabla.buscar(id)) != null) {
				cadena_tipo=s.getTipo();
				RESULT =s.getValor() ;
			}else{
				System.out.println("Varible -->"+id+" no declarada");
			}

		  
              CUP$parser$result = new java_cup.runtime.Symbol(20/*exprtipos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // tipo ::= BOOLEAN 
            {
              String RESULT = null;
		
		  RESULT="bool";
		   
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // tipo ::= CHAR 
            {
              String RESULT = null;
		
		 	RESULT="char";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // tipo ::= REAL 
            {
              String RESULT = null;
		
		 	RESULT="float";
		 	
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // tipo ::= INTEGER 
            {
              String RESULT = null;
		
 		 	RESULT="int";
 		
              CUP$parser$result = new java_cup.runtime.Symbol(19/*tipo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // signo ::= AND 
            {
              String RESULT = null;
		        RESULT=" && "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // signo ::= OR 
            {
              String RESULT = null;
		         RESULT=" || "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // signo ::= DIFERENTE 
            {
              String RESULT = null;
		  RESULT=" != "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // signo ::= IGUAL2 
            {
              String RESULT = null;
		     RESULT=" == "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // signo ::= MAYORIGUAL 
            {
              String RESULT = null;
		 RESULT=" >= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // signo ::= MENORIGUAL 
            {
              String RESULT = null;
		 RESULT=" <= "; 
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // signo ::= MENOR 
            {
              String RESULT = null;
		      RESULT=" < ";  
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // signo ::= MAYOR 
            {
              String RESULT = null;
		       RESULT=" > ";  
              CUP$parser$result = new java_cup.runtime.Symbol(17/*signo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // condicion_extra ::= signo item_condicion condicion_extra 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					cadena_condiciones =" "+sig+e1 +cadena_condiciones;
					RESULT =cadena_condiciones;
					System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // condicion_extra ::= signo item_condicion 
            {
              String RESULT = null;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					cadena_condiciones=" "+sig+e1;
					RESULT=cadena_condiciones;
					System.out.println("resto de las condicion-->"+cadena_condiciones);
				
              CUP$parser$result = new java_cup.runtime.Symbol(18/*condicion_extra*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // condicion ::= item_condicion signo item_condicion condicion_extra 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			 RESULT = generarCondicion(e1 ,sig, e2,c);
			
              CUP$parser$result = new java_cup.runtime.Symbol(16/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // condicion ::= item_condicion signo item_condicion 
            {
              BloqueCondicion RESULT = null;
		int e1left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int sigleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int sigright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String sig = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT = generarCondicion(e1 ,sig, e2);
			
              CUP$parser$result = new java_cup.runtime.Symbol(16/*condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // item_condicion ::= HEXA HEXACADENA 
            {
              String RESULT = null;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT="0x"+hc;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // item_condicion ::= BINARIO CADENA 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT="0b"+n;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // item_condicion ::= puertost 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT=p;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // item_condicion ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT= Integer.toString(num);
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // item_condicion ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=id;
		
              CUP$parser$result = new java_cup.runtime.Symbol(15/*item_condicion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // expression ::= NUMERO ID 
            {
              String RESULT = null;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=n+id;
		
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // expression ::= ID NUMERO 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT=id+n;
		
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // expression ::= NUMERO 
            {
              String RESULT = null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Integer num = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
			RESULT= Integer.toString(num);
								//generarTerceto("="+num);
		
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // expression ::= ID 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=id;
              CUP$parser$result = new java_cup.runtime.Symbol(14/*expression*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // extraperamesta ::= extraperamesta operamesta expression 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					encadenamst=encadenamst+o+v;
					RESULT=encadenamst;
				
              CUP$parser$result = new java_cup.runtime.Symbol(23/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // extraperamesta ::= operamesta expression 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
					RESULT=o+v;
				
              CUP$parser$result = new java_cup.runtime.Symbol(23/*extraperamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // operamesta ::= DIVISION 
            {
              Object RESULT = null;
		RESULT="/";
              CUP$parser$result = new java_cup.runtime.Symbol(22/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // operamesta ::= MENOS 
            {
              Object RESULT = null;
		RESULT="-";
              CUP$parser$result = new java_cup.runtime.Symbol(22/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // operamesta ::= MAS 
            {
              Object RESULT = null;
		RESULT="+";
              CUP$parser$result = new java_cup.runtime.Symbol(22/*operamesta*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // cases ::= cases CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=c+"case "+e2+":\n";

			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // cases ::= CASO expression DOSPUNTOS 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT="case "+e2+":\n";

			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // cases ::= cases OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=c+"default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // cases ::= cases CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT=c+"case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // cases ::= OTHERWISE DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		
				RESULT="default: "+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // cases ::= CASO expression DOSPUNTOS instrucciones 
            {
              Object RESULT = null;
		int e2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="case "+e2+":"+auxiliar+"break;\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(7/*cases*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // extraparentesis ::= extraparentesis operamesta parentesis 
            {
              String RESULT = null;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int opleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ep+op+p;
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // extraparentesis ::= extraperamesta parentesis 
            {
              String RESULT = null;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=ep+p;
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // extraparentesis ::= parentesis 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=p;
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // extraparentesis ::= operamesta parentesis 
            {
              String RESULT = null;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		RESULT=o+p;
              CUP$parser$result = new java_cup.runtime.Symbol(25/*extraparentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // parentesis ::= LPAREN parentesis operamesta parentesis extraparentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+ep+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // parentesis ::= LPAREN parentesis operamesta expression extraparentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int epleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int epright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String ep = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+ep+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // parentesis ::= LPAREN parentesis operamesta expression RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+e+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // parentesis ::= LPAREN parentesis operamesta parentesis RPAREN 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+p+o+p2+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // parentesis ::= LPAREN expression operamesta expression operamesta parentesis RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int o2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int o2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+o2+p+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // parentesis ::= LPAREN expression operamesta expression extraperamesta RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String eo = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+eo+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // parentesis ::= LPAREN expression operamesta expression RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+o+v3+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // parentesis ::= LPAREN expression RPAREN 
            {
              String RESULT = null;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT="("+v2+")";
              CUP$parser$result = new java_cup.runtime.Symbol(24/*parentesis*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // instruccion ::= ID IGUAL parentesis operamesta expression PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+o+e+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // instruccion ::= ID IGUAL parentesis operamesta parentesis PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int p2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int p2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+o+p2+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // instruccion ::= ID IGUAL parentesis PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+p+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // instruccion ::= ID IGUAL expression operamesta expression extraperamesta PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int eoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String eo = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+v2+o+v3+eo+";\n";
				encadenamst="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // instruccion ::= ID IGUAL expression operamesta expression PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int v2left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int v2right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int oleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int oright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object o = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int v3left = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int v3right = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"="+v2+o+v3+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // instruccion ::= ID IGUAL ID RECBITSDER NUMERO PCOMA 
            {
              String RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					RESULT = var +"="+v+"<<"+n+";\n";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // instruccion ::= ID IGUAL ID RECBITSIZQ NUMERO PCOMA 
            {
              String RESULT = null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
					RESULT = var +"="+v+">>"+n+";\n";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // instruccion ::= ID RECBITSDER NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+">>"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // instruccion ::= ID RECBITSIZQ NUMERO PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=v+"<<"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // instruccion ::= WHILE LPAREN expression RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";
		  
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // instruccion ::= WHILE LPAREN condicion RPAREN DO instrucciones FIN WHILE 
            {
              String RESULT = null;
		int etqInicioWhileleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int etqInicioWhileright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String etqInicioWhile = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
				RESULT="\n\t\twhile("+c.condicion+")\n\t\t{\n\t"+auxiliar+"\t\t}";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // instruccion ::= SWITCH LPAREN puertost RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+p+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // instruccion ::= SWITCH LPAREN expression RPAREN OF cases FIN SWITCH 
            {
              String RESULT = null;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				RESULT="\n\t\tswitch("+e+")\n{\n\t\t\t"+c+"\n}\n";
				auxiliar="";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones NT$1 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		
					//f2=pila2.pop();
					//p1=f2.getInstruccion();
					p1=pila2.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+p+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$1 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

					//frijol f=new frijol("",auxiliar);
					pila2.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(27/*NT$1*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones NT$0 NO instrucciones FIN 
            {
              String RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value != null )
                RESULT = (String) ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		
					/*f2=p.pop();
					p1=f2.getInstruccion();*/
					p1=p.pop().toString();
					auxno=auxiliar;
					RESULT="\n\t\tif("+c.condicion+")\n\t\t{\t"+p1+"\t\t}"+"\n\t\telse\n\t\t{\n\t"+auxno+"\t\t}\n";
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$0 ::= 
            {
              Object RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;

					//frijol f=new frijol("",auxiliar);
					p.push(auxiliar);
					auxiliar="";
				
              CUP$parser$result = new java_cup.runtime.Symbol(26/*NT$0*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // instruccion ::= SI LPAREN puertost RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				aux="\n\t\tif("+p+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // instruccion ::= SI LPAREN condicion RPAREN THEN instrucciones FIN 
            {
              String RESULT = null;
		int etqFinIfleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int etqFinIfright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String etqFinIf = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		BloqueCondicion c = (BloqueCondicion)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				aux="\n\t\tif("+c.condicion+")\n\t\t{\t"+auxiliar+"\t\t}\n";
				auxiliar="";
				RESULT=aux;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // instruccion ::= TMR0 IGUAL HEXA HEXACADENA 
            {
              String RESULT = null;
		int tmleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int tmright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object tm = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int hcleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int hcright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String hc = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				RESULT = tm+"= 0x"+hc;
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // instruccion ::= RETURN PCOMA 
            {
              String RESULT = null;
		
				RESULT="return;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // instruccion ::= ID MENOS MENOS PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=v+"--;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // instruccion ::= ID MAS MAS PCOMA 
            {
              String RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				RESULT=v+"++;\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // instruccion ::= puertos IGUAL puertost MAS ID PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String v = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=p+u+"+"+v+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // instruccion ::= puertos IGUAL puertost MAS NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				RESULT=p+u+"+"+n+";\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // instruccion ::= DELAY LLLAVE NUMERO RLLAVE PCOMA 
            {
              String RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				//retardos= retardos+c+"("+n+");\n";
	   			RESULT=c+"("+n+");\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // instruccion ::= CHALE LPAREN NUMERO RPAREN PCOMA 
            {
              String RESULT = null;
		int cleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				//retardos= retardos+c+"("+n+");\n";
	   			RESULT=c+"("+n+");\n";
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // instruccion ::= ID LPAREN RPAREN PCOMA 
            {
              String RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
				Metodos s;
				if ((s = tablaMetodos.search(i)) == null)
				{System.out.println(i+ " es una METODO no definido");}
				else
				{
					// System.out.println(i+" instrucciones del metodo => "+s.getValor());
					//System.out.println("codigo intermedio==> "+i+"();");
					RESULT="\t"+i+"();\n";
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // instruccion ::= puertos IGUAL NUMERO PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int nleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Integer n = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+n+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // instruccion ::= puertos TOGGLE puertost PCOMA 
            {
              String RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object t = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int uleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int uright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String u = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//   miCodigo=p+t+u+";\n"+miCodigo;
				RESULT="\n\t"+p+t+u+";\n";
				//System.out.println("cadena de toggles:"+RESULT);
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // instruccion ::= ID IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
			System.out.println("Mensaje "+id + "-->"+t);
			DatoSimbolo ds=parser.tabla.buscar(id);
			 if(ds!= null){
			 	System.err.println(id + " redeclarada.");
			 RESULT="\n\t"+id+"="+t+";";
			}
			 else{
			 	System.out.println("Error al Asignar valor a: "+id);
			}


			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // instruccion ::= TIPOVC ID DOSPUNTOS tipo IGUAL exprtipos PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				//RESULT = t;
				if(parser.tabla.buscar(id)!= null){
					System.err.println(id + " redeclarada.");
				}else{
				 	System.out.println("Mensaje "+id + "-->"+e);
				 	switch(t){
			            case "int":
			                if(Num.valInt(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			                }else{
			                	String msj="//La variable: "+id+" es una cadena "+e+" y no es compatible con un tipo de dato INT\n";
			                    RESULT= msj;
			                }
			                break;
			            case "float":
			            	if(Num.valFloat(e)){
			                    RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
			            	}else{
			            		String msj="//La variable: "+id+" es una cadena "+e+" y no es compatible con un tipo de dato FLOAT\n";
			                    RESULT= msj;
			            	}
			                break;
			            case "char":
			            	if(Num.valInt(e) || Num.valFloat(e)){
				                String msj="//La variable: "+id+" es un numero "+e+" y no es compatible con un CARACTER\n";
			                    RESULT= msj;
				            }else{
				                RESULT="\n\t"+t+" "+id+" ="+e+";";
			                    parser.tabla.insertar(id, t,e);
				            }
			                break;
			            case "bool":
			            	if(e.equalsIgnoreCase("TRUE") || e.equalsIgnoreCase("FALSE")){
			            		RESULT="\n\t"+t+" "+id+" ="+e.toLowerCase()+";";
			            		parser.tabla.insertar(id,t,e);
			            	}else{
			            		String msj="\n//La variable: "+id+" es un valor no compatible "+e+" se requiere TRUE o FALSE\n";
			                    RESULT= msj;
			            	}
			                break;
			            default :
			            	String msj="//Tipo de dato desconocido: "+t+"\n";
			                    RESULT= msj;
		        	}
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // instruccion ::= TIPOVC ID DOSPUNTOS tipo PCOMA 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				DatoSimbolo ds=parser.tabla.buscar(id);
				if(ds!= null)
					System.err.println(id + " redeclarada.");
				else{
				 	System.out.println("Mensaje "+id + "-->"+t);
				 	RESULT="\n\t"+t+" "+id+";";
					parser.tabla.insertar(id, t,"");
				}
			
              CUP$parser$result = new java_cup.runtime.Symbol(13/*instruccion*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // instrucciones ::= instruccion instrucciones 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				System.out.println("valor de in en instrucciones:"+in);
				auxiliar=in+auxiliar;
				//RESULT=in;
                //aux=in;
				System.out.println("cadena de varias instrucciones en aux:"+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // instrucciones ::= instruccion 
            {
              String RESULT = null;
		int inleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int inright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String in = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				System.out.println("valor de in en intruccion:"+in);
				auxiliar=in + auxiliar;
                //aux=in;
				//RESULT=in;
				System.out.println("cadena de una istruccion en aux: "+auxiliar);
			
              CUP$parser$result = new java_cup.runtime.Symbol(8/*instrucciones*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // parametros ::= ID DOSPUNTOS tipo COMA parametros 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
				cadena_parametros=" "+t+" "+id+" ,"+cadena_parametros;
			
              CUP$parser$result = new java_cup.runtime.Symbol(21/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // parametros ::= ID DOSPUNTOS tipo 
            {
              String RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
				cadena_parametros=" "+t+" "+id;
			
              CUP$parser$result = new java_cup.runtime.Symbol(21/*parametros*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // metodo ::= metodo VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // metodo ::= VOID ID LPAREN parametros RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{
				s.setvalue(auxiliar);
			}
			codigo=v+i+"("+cadena_parametros+")\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
		    cadena_parametros="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // metodo ::= metodo VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String m = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(m)) == null)
				s = tablaMetodos.insert(m,auxiliar);
			else
				{ s.setvalue(auxiliar);}
			codigo=v+m+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		 
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // metodo ::= VOID ID LPAREN RPAREN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int vleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left;
		int vright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).right;
		Object v = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		
			Metodos s;
			if ((s = tablaMetodos.search(i)) == null)
				s = tablaMetodos.insert(i,auxiliar);
			else
			{
				s.setvalue(auxiliar);
			}
			codigo=v+i+"()\n\t{\n"+auxiliar+"\n\t}\n\n";
			losMetodos=losMetodos+codigo;
		    auxiliar="";
			//System.out.println("codigo intermedio==> int "+codigo);
		
              CUP$parser$result = new java_cup.runtime.Symbol(6/*metodo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // main ::= MAIN LLLAVE RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n\n\t\t return; \n\t }";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // main ::= MAIN LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+main+"{\n\t\tsetup();\n\t\tloop();\n"+auxiliar+"\n\t\t return; \n\t }";
		    auxiliar="";
		
              CUP$parser$result = new java_cup.runtime.Symbol(3/*main*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ciclo ::= CICLO LLLAVE instrucciones RLLAVE 
            {
              Object RESULT = null;
		int cicloleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int cicloright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object ciclo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			miCodigo=miCodigo+ciclo+"{\n\t \twhile(1){\n\n"+ auxiliar +"\t\t}\n\n\t}";
			auxiliar="";
        
              CUP$parser$result = new java_cup.runtime.Symbol(5/*ciclo*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // io ::= SALIDA 
            {
              String RESULT = null;
		int salidaleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left;
		int salidaright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right;
		Object salida = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-0)).value;
		
		RESULT="0;\n";
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // io ::= ENTRADA 
            {
              String RESULT = null;
		
		RESULT="1;\n";
	
              CUP$parser$result = new java_cup.runtime.Symbol(12/*io*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // confpuertos ::= confpuertos puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
	        
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // confpuertos ::= puertos IGUAL io PCOMA 
            {
              Object RESULT = null;
		int pleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		
				miCodigo=miCodigo+p+i;
			
              CUP$parser$result = new java_cup.runtime.Symbol(9/*confpuertos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // setup ::= SETUP LLLAVE confpuertos instrucciones RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
	        //System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;\n\tANSEL=0;\n"+miCodigo+auxiliar+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // setup ::= SETUP LLLAVE confpuertos RLLAVE 
            {
              Object RESULT = null;
		int setupleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left;
		int setupright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).right;
		Object setup = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		
			//System.out.println("codigo intermedio==>"+setup+"   "+fsetup);
	        miCodigo=setup+"{\n\tOSCCON=0x60;"+miCodigo+"\n}";
		
              CUP$parser$result = new java_cup.runtime.Symbol(4/*setup*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // metodos ::= metodo setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		
					miCodigo=retardo+losMetodos+miCodigo;
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // metodos ::= metodo setup ciclo 
            {
              Object RESULT = null;
		
					miCodigo=losMetodos+miCodigo;
				
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // metodos ::= setup RETARDO LPAREN RPAREN PCOMA ciclo 
            {
              Object RESULT = null;
		int retardoleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int retardoright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		Object retardo = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		 miCodigo=retardo+miCodigo;  
              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // metodos ::= setup ciclo 
            {
              Object RESULT = null;

              CUP$parser$result = new java_cup.runtime.Symbol(2/*metodos*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= programa EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // programa ::= FUSES metodos main 
            {
              Object RESULT = null;
		int fusesleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int fusesright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		Object fuses = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
 					miCodigo=fuses+miCodigo;
              		 // System.out.println("Clase Generada\n\n"+miCodigo+"\n\n");
                File miClase;
	        	try{
	            	miClase = new File("mapic.c");
	            	if(miClase.exists())
	            		miClase.delete();
	            	if(miClase.createNewFile()){
	                	//System.out.println("Se ha creado el archivo");
	            	}
	            	FileWriter escribir=new FileWriter(miClase,true);
	            	escribir.write(miCodigo);
	            	escribir.close();
	        	}catch(IOException e){
	        		System.out.println("ERROR NO SE PUEDE ");
	        	}


              CUP$parser$result = new java_cup.runtime.Symbol(1/*programa*/, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-0)).right, RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

